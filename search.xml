<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>newarticle</title>
      <link href="/2022/06/05/%E5%8D%9A%E5%AE%A2markdown%E7%9B%B8%E5%85%B3%E6%8F%92%E4%BB%B6/"/>
      <url>/2022/06/05/%E5%8D%9A%E5%AE%A2markdown%E7%9B%B8%E5%85%B3%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><blockquote><p>采用<a href="https://github.com/MakerGYT/markdown-it-latex2img"><strong>markdown-it-latex2img</strong></a></p></blockquote><p>安装流程（hexo）</p><ol><li><p>安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm i hexo-renderer-markdown-it --savecnpm i markdown-it-latex2img --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>没有配过淘宝镜像的就使用下列命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm i hexo-renderer-markdown-it --savenpm i markdown-it-latex2img --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote></li><li><p>配置</p><p>在<code>themes</code> 下的<code> _config.yml</code>的文件末尾加入下列配置</p></li></ol><pre class="line-numbers language-none"><code class="language-none">markdown:  plugins:    - markdown-it-latex2img<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>win10系统右键菜单空白不显示解决方法</title>
      <link href="/2022/06/05/win10%E7%B3%BB%E7%BB%9F%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E7%A9%BA%E7%99%BD%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%20/"/>
      <url>/2022/06/05/win10%E7%B3%BB%E7%BB%9F%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E7%A9%BA%E7%99%BD%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%20/</url>
      
        <content type="html"><![CDATA[<h1 id="方法一：停止Windows-Management-Instrumentation服务"><a href="#方法一：停止Windows-Management-Instrumentation服务" class="headerlink" title="方法一：停止Windows Management Instrumentation服务"></a><strong>方法一：停止Windows Management Instrumentation服务</strong></h1><h2 id="1、win-r打开运行输入services-msc。打开服务管理器"><a href="#1、win-r打开运行输入services-msc。打开服务管理器" class="headerlink" title="1、win+r打开运行输入services.msc。打开服务管理器"></a>1、win+r打开运行输入services.msc。打开服务管理器</h2><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206051734360.png" alt="image-20220415143924451"></p><h2 id="2、找到Windows-Management-Instrumentation服务，此服务与用户界面有关，停止该服务；"><a href="#2、找到Windows-Management-Instrumentation服务，此服务与用户界面有关，停止该服务；" class="headerlink" title="2、找到Windows Management Instrumentation服务，此服务与用户界面有关，停止该服务；"></a>2、找到Windows Management Instrumentation服务，此服务与用户界面有关，停止该服务；</h2><p><img src="C:\Users\Anubis\Desktop\系统问题大全\图片\image-20220415144029425.png" alt="image-20220415144029425"></p><h2 id="3、然后定位至C-Windows-System32-wbem-Repository，删除该文件夹下的所有文件。重启系统后，看能否解决问题。"><a href="#3、然后定位至C-Windows-System32-wbem-Repository，删除该文件夹下的所有文件。重启系统后，看能否解决问题。" class="headerlink" title="3、然后定位至C:\Windows\System32\wbem\Repository，删除该文件夹下的所有文件。重启系统后，看能否解决问题。"></a>3、然后定位至C:\Windows\System32\wbem\Repository，删除该文件夹下的所有文件。重启系统后，看能否解决问题。</h2><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206051735167.png" alt="image-20220415144139327"></p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
          <category> Window </category>
          
          <category> Win10 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Window </tag>
            
            <tag> Win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++ 快速输入</title>
      <link href="/2022/06/05/c++%E5%BF%AB%E9%80%9F%E8%BE%93%E5%85%A5/"/>
      <url>/2022/06/05/c++%E5%BF%AB%E9%80%9F%E8%BE%93%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="一、解除系统流绑定"><a href="#一、解除系统流绑定" class="headerlink" title="一、解除系统流绑定"></a>一、解除系统流绑定</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>在<code>main</code>函数开头加入</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">std::ios::sync_with_stdio(false);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><code>cin</code> 效率的效率在数据输入上远低于 <code>scanf</code>，这不是<code>c++</code>比 <code>c</code> 低级，而是 <code>C++</code>  为了兼容<code>C</code> 而采取的保守措施。</p><p>标准 <code>C++</code> 流与标准 <code>C </code>流在每次输入&#x2F;输出操作后同步，同步的 <code>C++</code> 流为无缓冲，而每次 <code>C++</code> 流上的 <code>I/O</code> 都立即应用到对应 <code>C</code> 流的缓冲区。这使得能<strong>自由地混合 <code>C++</code> 与 <code>C I/O</code></strong> 。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>解除绑定后不要混用 <code>cin</code> 与 <code>scanf</code></li></ul><h1 id="二、快速读入函数"><a href="#二、快速读入函数" class="headerlink" title="二、快速读入函数"></a>二、快速读入函数</h1><h2 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h2><p><code>C++</code>输入输出中处理字符串的效率是处理数字的效率的不知多少倍(为什么现在还不知道，别问我，我知道了会改的)</p><h2 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h2><pre class="line-numbers language-none"><code class="language-none">inline int read()&#x2F;&#x2F;inline 为内联关键字&#123;    int x&#x3D;0,w&#x3D;0;    char ch&#x3D;0;    while(!isdigit(ch)) w|&#x3D;ch&#x3D;&#x3D;&#39;-&#39;,ch&#x3D;getchar();    &#x2F;&#x2F;while(isdigit(ch)) x&#x3D;(x&lt;&lt;1)+(x&lt;&lt;3)+(ch^48),ch&#x3D;getchar();以前以为位运算能快点，但问了大佬才发现，其实没啥差别    while(isdigit(ch)) x&#x3D;x*10+ch-&#39;0&#39;,ch&#x3D;getchar();    return w?-x:x;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><pre class="line-numbers language-none"><code class="language-none">inline double  read()&#123;    int w&#x3D;0,y&#x3D;0;    double x&#x3D;0,t&#x3D;0.1;    char ch&#x3D;0;    while(!isdigit(ch)) w|&#x3D;ch&#x3D;&#x3D;&#39;-&#39;,ch&#x3D;getchar();    while(isdigit(ch)) x&#x3D;x*10+(ch^48),ch&#x3D;getchar();    y|&#x3D;ch&#x3D;&#x3D;&#39;.&#39;;    if(y)    &#123;        ch&#x3D;getchar();        while(isdigit(ch)) x+&#x3D;(ch^48)*t,t*&#x3D;0.1,ch&#x3D;getchar();    &#125;    return w?-x:x;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maximum Sum of Minimum</title>
      <link href="/2022/06/05/Maximum%20Sum%20of%20Minimum%E9%A2%98%E8%A7%A3/"/>
      <url>/2022/06/05/Maximum%20Sum%20of%20Minimum%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://atcoder.jp/contests/m-solutions2019/tasks/m_solutions2019_d">题目链接</a></h1><h2 id="题意分析"><a href="#题意分析" class="headerlink" title="题意分析"></a>题意分析</h2><ul><li><p>C 数组中存放点的权值（<strong>从小到大排序</strong>）</p></li><li><p>边的权值<br>$$<br>L&#x3D;min(C_i,C_j)<br>$$</p><blockquote><p><code>C[i] C[j]</code>为 L 的两个端点值</p></blockquote></li></ul><p>易知<code>C[1]</code>相连的边，其权值均为<code> C[1]</code></p><p>由贪心策略易知，越权值小的点，其相连边权值越小，因此应<strong>尽量减少其相连边</strong>，理想情况为将其填入叶子节点中。</p><h2 id="样例分析"><a href="#样例分析" class="headerlink" title="样例分析"></a>样例分析</h2><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206051658410.png" alt="img"></p><p>如图所示，在 4 号节点填入 C[1] 后，3-4 这条边已经确定权值了<strong>，我们可以将它删去</strong>，则 3 号节点成为了<strong>一个新的叶子节点</strong></p><p>在 3 号节点填入 C[2] 后，3-2 这条边已经确定权值了，我们可以将它删去</p><p>在 5 号节点填入 C[3] 后，5-2 这条边已经确定权值了，我们可以将它删去</p><p>后续操作不进行赘述。</p><p>基于上述操作方法，我们做到每一个当前情况下的最小点，均填入当前情况下的叶子节点中，从而使边权值最大。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>$$<br>Ans&#x3D;\sum {C_i}-C_{max}<br>$$</p><p>即<strong>每个点（除了最大点）的值均为一条边的权值</strong>。</p><p>要满足这个情况只需要使：<strong>只要子节点的值小于父节点的值即可</strong></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h3><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206051726435.jpg" alt="img"></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;采用按层填充#include&lt;bits&#x2F;stdc++.h&gt;using namespace std;const int maxn&#x3D;1e4+7;int C[maxn],N,Ans,ans[maxn];vector &lt;int&gt; T[maxn];void BFS(int root)&#123;    queue&lt;int&gt;Q;    int cnt&#x3D;N;    int l&#x3D;T[root].size();    for(int i&#x3D;0; i&lt;l; ++i)    &#123;        Q.push(T[root][i]);    &#125;    ans[root]&#x3D;C[cnt--];    while(!Q.empty())    &#123;        root&#x3D;Q.front();        Q.pop();        if(ans[root]) continue;        ans[root]&#x3D;C[cnt--];        l&#x3D;T[root].size();        for(int i&#x3D;0; i&lt;l; ++i)        &#123;            Q.push(T[root][i]);        &#125;    &#125;&#125;int main()&#123;    int a,b;    cin&gt;&gt;N;    for(int i&#x3D;1; i&lt;&#x3D;N-1; ++i)    &#123;        cin&gt;&gt;a&gt;&gt;b;        T[a].push_back(b);        T[b].push_back(a);    &#125;    for(int i&#x3D;1; i&lt;&#x3D;N; ++i)    &#123;        cin&gt;&gt;C[i];        Ans+&#x3D;C[i];    &#125;    sort(C+1,C+1+N);    Ans-&#x3D;C[N];&#x2F;&#x2F;最大值计算    BFS(1);    cout&lt;&lt;Ans&lt;&lt;endl;    for(int i&#x3D;1; i&lt;&#x3D;N; ++i)    &#123;        cout&lt;&lt;ans[i]&lt;&lt;&quot; &quot;;    &#125;    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="DFS"><a href="#DFS" class="headerlink" title="DFS"></a>DFS</h3><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206051727532.jpg" alt="img"></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;仿照后序遍历的方式进行节点填充#include&lt;bits&#x2F;stdc++.h&gt;using namespace std;const int maxn&#x3D;1e4+7;int C[maxn],N,Ans,ans[maxn],cnt,vis[maxn];vector &lt;int&gt; T[maxn];void DFS(int root)&#123;    vis[root]&#x3D;1;    for(int i&#x3D;0; i&lt;T[root].size(); ++i)    &#123;        int v&#x3D;T[root][i];        if(vis[v]) continue;        DFS(v);    &#125;    ans[root]&#x3D;C[++cnt];    Ans+&#x3D;ans[root];&#125;int main()&#123;    int a,b;    cin&gt;&gt;N;    for(int i&#x3D;1; i&lt;&#x3D;N-1; ++i)    &#123;        cin&gt;&gt;a&gt;&gt;b;        T[a].push_back(b);        T[b].push_back(a);    &#125;    for(int i&#x3D;1; i&lt;&#x3D;N; ++i)        cin&gt;&gt;C[i];    sort(C+1,C+1+N);    DFS(1);    cout&lt;&lt;Ans&lt;&lt;endl;    for(int i&#x3D;1; i&lt;&#x3D;N; ++i)    &#123;        cout&lt;&lt;ans[i]&lt;&lt;&quot; &quot;;    &#125;    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AtCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中文文案排版指南</title>
      <link href="/2022/06/05/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%88%E6%8E%92%E7%89%88%E6%8C%87%E5%8D%97/"/>
      <url>/2022/06/05/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%88%E6%8E%92%E7%89%88%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h2 id="空格规则"><a href="#空格规则" class="headerlink" title="空格规则"></a>空格规则</h2><h3 id="中英文之间需要增加空格"><a href="#中英文之间需要增加空格" class="headerlink" title="中英文之间需要增加空格"></a>中英文之间需要增加空格</h3><p>正确 ：学习 Markdown 是非常重要的</p><p>错误 ：学习 markdown是非常重要的 or 学习markdown是非常重要的</p><h3 id="中文与数字之间需要增加空格"><a href="#中文与数字之间需要增加空格" class="headerlink" title="中文与数字之间需要增加空格"></a>中文与数字之间需要增加空格</h3><p>正确： 今天我花了 100 元</p><p>错误： 今天我花了100元</p><h3 id="数字与单位之间无需增加空格（PS：中文单位不符合此规则）"><a href="#数字与单位之间无需增加空格（PS：中文单位不符合此规则）" class="headerlink" title="数字与单位之间无需增加空格（PS：中文单位不符合此规则）"></a>数字与单位之间无需增加空格（PS：中文单位不符合此规则）</h3><p>正确：汽车的速度是 10m&#x2F;s </p><p>错误：汽车的速度是 10 m&#x2F;s</p><h3 id="全角标点与其他字符之间不加空格"><a href="#全角标点与其他字符之间不加空格" class="headerlink" title="全角标点与其他字符之间不加空格"></a>全角标点与其他字符之间不加空格</h3><h4 id="全角标点：需要手动切换，个人默认为半角"><a href="#全角标点：需要手动切换，个人默认为半角" class="headerlink" title="全角标点：需要手动切换，个人默认为半角"></a>全角标点：需要手动切换，个人默认为半角</h4><p>正确：今天买了一把手机，真开心！</p><p>错误：今天买了一把手机　，真开心　！</p><h2 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h2><h3 id="不重复使用标点符号"><a href="#不重复使用标点符号" class="headerlink" title="不重复使用标点符号"></a>不重复使用标点符号</h3><p>即不出现！！！这种连续使用，当然！？！？这种也不可以</p><h3 id="使用全角中文标点（使用中文输入法）"><a href="#使用全角中文标点（使用中文输入法）" class="headerlink" title="使用全角中文标点（使用中文输入法）"></a>使用全角中文标点（使用中文输入法）</h3><p>正确：今天真开心！</p><p>错误：今天真开心!</p><h3 id="数字使用半角字符"><a href="#数字使用半角字符" class="headerlink" title="数字使用半角字符"></a>数字使用半角字符</h3><p>正确：这个 100  元。</p><p>错误：这个 １００ 元。</p><p>例外：在设计稿、宣传海报中如出现极少量数字的情形时，为方便文字对齐，是可以使用全角数字的。（这句copy的）</p><h3 id="遇到完整的英文整句、特殊名词，其內容使用半角标点"><a href="#遇到完整的英文整句、特殊名词，其內容使用半角标点" class="headerlink" title="遇到完整的英文整句、特殊名词，其內容使用半角标点"></a>遇到完整的英文整句、特殊名词，其內容使用半角标点</h3><p>正确：乔布斯那句话是怎么说的？「Stay hungry, stay foolish.」</p><p>错误：乔布斯那句话是怎么说的？「Stay hungry，stay foolish．」</p><h2 id="名词"><a href="#名词" class="headerlink" title="名词"></a>名词</h2><h3 id="专有名词使用正确的大小写"><a href="#专有名词使用正确的大小写" class="headerlink" title="专有名词使用正确的大小写"></a>专有名词使用正确的大小写</h3><p>正确：使用 GitHub 登录</p><p>错误：使用 github 登录</p><h3 id="不要使用不地道的缩写"><a href="#不要使用不地道的缩写" class="headerlink" title="不要使用不地道的缩写"></a>不要使用不地道的缩写</h3><p>正确：你是会 JavaScript 吗？</p><p>错误：你是会 JS 吗？</p><h3 id="链接之间增加空格"><a href="#链接之间增加空格" class="headerlink" title="链接之间增加空格"></a>链接之间增加空格</h3><h3 id="简体中文使用直角引号"><a href="#简体中文使用直角引号" class="headerlink" title="简体中文使用直角引号"></a>简体中文使用直角引号</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 未分类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 安装笔记</title>
      <link href="/2022/06/04/Ubuntu%20%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/06/04/Ubuntu%20%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="SSH-远程链接"><a href="#SSH-远程链接" class="headerlink" title="SSH 远程链接"></a>SSH 远程链接</h2><ol><li><p>安装软件 Xshell</p></li><li><p>服务器上重置密码</p></li><li><p>在防火墙上添加白名单</p><img src="C:\Users\Anubis\AppData\Roaming\Typora\typora-user-images\image-20220428171853388.png" alt="image-20220428171853388" style="zoom:200%;" /></li><li><p>在主机的位置填入服务器公网 ip</p><p><img src="C:\Users\Anubis\AppData\Roaming\Typora\typora-user-images\image-20220428172446474.png" alt="image-20220428172446474"></p></li><li><p><img src="C:\Users\Anubis\AppData\Roaming\Typora\typora-user-images\image-20220428172144825.png" alt="image-20220428172144825"></p></li></ol><h2 id="换源加速-Centos"><a href="#换源加速-Centos" class="headerlink" title="换源加速 (Centos)"></a>换源加速 (Centos)</h2><pre class="line-numbers language-none"><code class="language-none"># 对于 CentOS 7sudo sed -e &#39;s|^mirrorlist&#x3D;|#mirrorlist&#x3D;|g&#39; \         -e &#39;s|^#baseurl&#x3D;http:&#x2F;&#x2F;mirror.centos.org|baseurl&#x3D;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn|g&#39; \         -i.bak \         &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-*.repo         sudo yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="换源加速-Ubuntu"><a href="#换源加速-Ubuntu" class="headerlink" title="换源加速 (Ubuntu)"></a>换源加速 (Ubuntu)</h2><ol><li><p>对系统给的镜像源进行备份，以防出问题</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> /etc/apt/sources.list /etc/apt/sources.list.backup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除镜像源文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">rm</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>重新建立镜像源文件并编辑</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">nano</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>复制某种镜像源到 sources.list 中，按 ctrl+o 保存，按 ctrl+x退出，现在会自动保存</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu</a></p></li><li><p>执行系统更新命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>更新所有软件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="取得-root-权限"><a href="#取得-root-权限" class="headerlink" title="取得 root 权限"></a>取得 root 权限</h2><pre class="line-numbers language-none"><code class="language-none">sudo -i<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="yum-工具安装"><a href="#yum-工具安装" class="headerlink" title="yum 工具安装"></a>yum 工具安装</h2><p>1、首先检测是否安装了 build-essential 程序包</p><pre class="line-numbers language-none"><code class="language-none">apt-get install build-essential<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、安装 yum</p><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install yum<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Ps:Ubuntu20 之后不支持安装 yum</p><h2 id="安装中文字体及设置"><a href="#安装中文字体及设置" class="headerlink" title="安装中文字体及设置"></a><strong>安装中文字体及设置</strong></h2><ol><li><p>先安装中文语言包</p><pre class="line-numbers language-none"><code class="language-none">sudo apt install language-pack-zh-hans -ysudo apt install fonts-wqy-zenhei -ysudo nano .profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>然后在文末输入</p><pre class="line-numbers language-none"><code class="language-none">export LANG&#x3D;&quot;zh_CN.UTF-8&quot;export LC_ALL&#x3D;&quot;zh_CN.UTF-8&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>保存后执行</p><pre class="line-numbers language-none"><code class="language-none">sudo dpkg-reconfigure locales<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="C:\Users\Anubis\AppData\Roaming\Typora\typora-user-images\image-20220428181208512.png" alt="image-20220428181208512"></p><p><img src="C:\Users\Anubis\AppData\Roaming\Typora\typora-user-images\image-20220428181228341.png" alt="image-20220428181228341"></p></li><li><p>安装完成后重启系统就好了。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速幂</title>
      <link href="/2022/06/04/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
      <url>/2022/06/04/%E5%BF%AB%E9%80%9F%E5%B9%82/</url>
      
        <content type="html"><![CDATA[<h1 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>一个数 k 均可以转换为二进制</p><p>如<code>10 (10)= 1010 (2)</code></p><p>即<code>10 = 2 + 8=2^1+2^3</code></p><p>经一般化处理可看出对于整数 a , b</p><p>有 <code>a^b=a^x[0]+a^x[1]+a^[2]+··· </code></p><p>如此可以大量减少乘法操作</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">long long pow(long long a,long long b,long long p)&#x2F;&#x2F;a^b (mod p)&#123;long long ans&#x3D;1;a%&#x3D;p;&#x2F;&#x2F;如果 a 大于 p，则必须进行取模for(; b; b&gt;&gt;&#x3D;1)&#123;if(b&amp;1&#x3D;&#x3D;1)&#x2F;&#x2F;此位为1         ans*&#x3D;(A%p);A&#x3D;(A*A)%p;&#125;return ans;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>注册表清理</title>
      <link href="/2022/06/04/%E6%B3%A8%E5%86%8C%E8%A1%A8%E6%B8%85%E7%90%86/"/>
      <url>/2022/06/04/%E6%B3%A8%E5%86%8C%E8%A1%A8%E6%B8%85%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>　伴随着系统运行时间不断增长，我们的电脑 注册表  中累积了许多垃圾文件。这些垃圾文件都是我们平常安装与卸载程序所留下的无用注册表信息，时间一长，垃圾文件与信息越来越多，我们电脑的运行速度越来越慢。</p><p>​而且部分软件由于删除方式不对，导致一些残留注册表未被删除，会出现明明删除了，但是软件列表中仍然存在这个软件的现象。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="1-个人手动清除注册表（极其不推荐）"><a href="#1-个人手动清除注册表（极其不推荐）" class="headerlink" title="1.个人手动清除注册表（极其不推荐）"></a>1.个人手动清除注册表（极其不推荐）</h3><ol><li>​<code>win+R</code> 输入 <code>regedit</code></li><li>选择 <code>HKEY_CURRENT_USER\SOFTWARE</code></li><li>里面的就是你软件的注册表了</li></ol><hr><p>注册表是 Windows 系统的重要数据库，其中存放着重要的系统与程序配置、文件传输信息，因此随意改动注册表容易导致严重的错误，说不定你电脑就崩了呢，所以不推荐手动清理注册表。</p><h3 id="2-使用软件清理（推荐）"><a href="#2-使用软件清理（推荐）" class="headerlink" title="2. 使用软件清理（推荐）"></a>2. 使用软件清理（推荐）</h3><ol><li><a href="https://www.iobit.com/en/advanceduninstaller.php?utm_source=enmedia&utm_campaign=engetproductkeyiu">IObit Uninstaller</a></li><li>360安全卫士（软件确实变味了，但是注册表清理的功能还是比较好用的）</li></ol>]]></content>
      
      
      <categories>
          
          <category> Windows相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图床</title>
      <link href="/2022/06/04/%E5%9B%BE%E5%BA%8A/"/>
      <url>/2022/06/04/%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="一、什么是图床"><a href="#一、什么是图床" class="headerlink" title="一、什么是图床"></a>一、什么是图床</h1><p>图床其实是互联网中存储图片的空间，作为一个人的云端图片链接</p><h1 id="二、为什么要图床"><a href="#二、为什么要图床" class="headerlink" title="二、为什么要图床"></a>二、为什么要图床</h1><p>​大部分人写博客都用<code>markdown</code>，而<code>markdown</code>的图片是通过链接的方式进行传输的的，因此，如果是在本电脑上直接嵌入的文件没办法在网络上访问（除非你把电脑长时间开机并且开放~极其危险）。</p><p>​因此一个云图片链接就很有必要了，而网上直接找到的链接不具有可靠性，可能哪天就挂了（自己搭图床也不知道什么时候挂），因此搭建自己的图床还是很有必要的。</p><h1 id="三、怎么搭建图床"><a href="#三、怎么搭建图床" class="headerlink" title="三、怎么搭建图床"></a>三、怎么搭建图床</h1><p>​大家可以使用一些免费（必须）的图床</p><p>​这里选择的是通过<code>GitHub</code>来搭建个人图床（珍惜<code>GitHub</code>吧，它已经被开发了很多奇怪的用法）</p><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h2><blockquote><p>一个 Github 账号</p></blockquote><h2 id="2-搭建工作"><a href="#2-搭建工作" class="headerlink" title="2. 搭建工作"></a>2. 搭建工作</h2><ol><li><p>登录你的 Github 之后，创建一个新的仓库</p><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041529014.png" alt="img"></p></li><li><p>填写仓库先关资料，一般只需要选一个合适的仓库名，然后确保仓库为 <code>public</code> 其他的保持默认就好；</p><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041530184.jpeg" alt="img"></p></li><li><p>一般创建成功之后，会出现如下界面，至此，我们的图床算是创建好了，接下来就是如何上传图片了；</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041530476.jpeg" alt="preview"></p><h2 id="3-上传图片"><a href="#3-上传图片" class="headerlink" title="3.上传图片"></a>3.上传图片</h2><p>通过上面的步骤，我们的图床时搭建好了，但是通过传统的方法向 Github 上传图片太麻烦了，这里我们推荐使用一个开源图床工具 <a href="https://link.zhihu.com/?target=https://molunerfinn.com/PicGo/">PicGo</a> （windows 系统下载<code>.exe</code>）来作为我们的图片上传工具；</p><p>安装完成后，主界面如下：</p><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041531333.jpeg" alt="preview"></p><ol><li><h3 id="GitHub-生成令牌"><a href="#GitHub-生成令牌" class="headerlink" title="GitHub 生成令牌"></a>GitHub 生成令牌</h3><ul><li>跳转网址</li></ul><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;github.com&#x2F;settings&#x2F;tokens<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>生成令牌</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041534520.png" alt="img"></p><p>勾选信息并生成令牌</p><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041535126.jpeg" alt="img"></p><p><code>token</code> 生成，注意它只会显示一次，所以你最好把它复制下来到你的备忘录存好，方便下次使用，否则下次有需要重新新建；</p><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041536806.jpeg" alt="img"></p></li><li><p>配置 <code>PicGo</code></p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041538365.png" alt="屏幕截图 2022-06-04 153819"></p><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041539297.jpeg" alt="img"></p><ul><li>自定义域名（cdn）加速，在自定义域名处填写</li></ul><blockquote><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;用户名&#x2F;仓库名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><h2 id="4-常见问题"><a href="#4-常见问题" class="headerlink" title="4.常见问题"></a>4.常见问题</h2><h4 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h4>]]></content>
      
      
      
        <tags>
            
            <tag> 经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 个人博客搭建及美化</title>
      <link href="/2022/06/04/hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E7%BE%8E%E5%8C%96/"/>
      <url>/2022/06/04/hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E7%BE%8E%E5%8C%96/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客功能添加及优化</title>
      <link href="/2022/06/04/%E5%8D%9A%E5%AE%A2%E5%8A%9F%E8%83%BD%E6%B7%BB%E5%8A%A0%E5%8F%8A%E4%BC%98%E5%8C%96/"/>
      <url>/2022/06/04/%E5%8D%9A%E5%AE%A2%E5%8A%9F%E8%83%BD%E6%B7%BB%E5%8A%A0%E5%8F%8A%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="功能添加"><a href="#功能添加" class="headerlink" title="功能添加"></a>功能添加</h1><h2 id="1-配置音乐播放器"><a href="#1-配置音乐播放器" class="headerlink" title="1.配置音乐播放器"></a>1.配置音乐播放器</h2><p>要支持音乐播放，在<strong>主题</strong>的 <code>_config.yml</code> 配置文件中激活 music 配置即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 是否在首页显示音乐</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span>         <span class="token comment"># 非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">server</span><span class="token punctuation">:</span> netease   <span class="token comment"># require music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment"># require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">503838841</span>     <span class="token comment"># require song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token comment"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>   <span class="token comment"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 列表默认折叠</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，<code>playlist</code>的<code>id</code></p><p>即为这串数字。</p></blockquote><h2 id="2-添加博客首页搜索功能"><a href="#2-添加博客首页搜索功能" class="headerlink" title="2. 添加博客首页搜索功能"></a>2. 添加博客首页搜索功能</h2><h3 id="2-1-安装插件"><a href="#2-1-安装插件" class="headerlink" title="2.1. 安装插件"></a>2.1. 安装插件</h3><pre class="line-numbers language-bashb" data-language="bashb"><code class="language-bashb">npm install hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-2-在-Hexo-根目录下的-config-yml-文件中，新增以下的配置项："><a href="#2-2-在-Hexo-根目录下的-config-yml-文件中，新增以下的配置项：" class="headerlink" title="2.2 在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项："></a>2.2 在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</h3><pre class="line-numbers language-none"><code class="language-none"># Search of Indexsearch:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="博客优化"><a href="#博客优化" class="headerlink" title="博客优化"></a>博客优化</h1><h2 id="使用-gulp-压缩博客静态资源"><a href="#使用-gulp-压缩博客静态资源" class="headerlink" title="使用 gulp 压缩博客静态资源"></a>使用 gulp 压缩博客静态资源</h2><h3 id="gulp-介绍"><a href="#gulp-介绍" class="headerlink" title="gulp 介绍"></a>gulp 介绍</h3><p><a href="https://www.gulpjs.com.cn/">gulp</a> 能够帮助用户自动压缩静态资源，配合各类下属插件，能够压缩包括<code>css</code>、<code>js</code>、<code>html</code>乃至各类格式的图片文件。</p><h3 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h3><p>在这使用<a href="https://npm.taobao.org/">taobao cnpm</a>加快安装速度</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npmmirror.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li><p>全局安装 gulp 指令集</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> --global gulp-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><p> 此后均在<strong>博客根目录</strong>下操作</p></li><li><p>安装 gulp 插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> gulp --save <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>安装各个下属插件以实现对各类静态资源的压缩</p><ul><li>压缩 HTML：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> gulp-htmlclean --save-devcnpm <span class="token function">install</span> gulp-html-minifier-terser --save-dev<span class="token comment"># 用gulp-html-minifier-terser可以压缩HTML中的ES6语法</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p>压缩 CSS：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> gulp-clean-css --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>压缩 JS</p><p><a href="https://github.com/duan602728596/gulp-terser">gulp-terser</a> 只会直接压缩 js 代码，所以不存在因为语法变动导致的错误 。事实上，当我们使用 <code>jsdelivr</code> 的 <code>CDN</code> 服务时，只需要在 <code>css </code>或者 <code>js</code> 的后缀前添加 <code>.min</code> ,例如 <code>example.js-&gt;example.min.js</code> ,<code>JsDelivr</code> 就会自动使用 <code>terser</code> 帮我们压缩好代码。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> gulp-terser --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>压缩字体包</p><p>font-min 可以遍历博客内用到的字符，并将字体包内这些字符的字体样式提取出来输出为新的字体包。</p><blockquote><p>font-min 仅支持压缩 ttf 格式的字体包</p></blockquote><p>[^字体包]:  字体文件作为最让人又爱又恨的静态资源，为了保证站点文字匹配，全字库字体包往往超过 15 MB，这对博客的加载速度造成了巨大压力。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> gulp-fontmin --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>为Gulp创建 <code>gulpfile.js</code> 任务脚本。在博客根目录下新建 <code>gulpfile.js</code> ,打开<code>[Blogroot]\gulpfile.js</code>,输入以下内容：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//用到的各个插件</span><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> cleanCSS <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-clean-css'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-html-minifier-terser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlclean'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> fontmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-fontmin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// gulp-tester</span><span class="token keyword">var</span> terser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-terser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩 js</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'compress'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>  gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/*.js'</span><span class="token punctuation">,</span> <span class="token string">'!./public/**/*.min.js'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">terser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//压缩 css</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/*.css'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleanCSS</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">compatibility</span><span class="token operator">:</span> <span class="token string">'ie11'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//压缩 html</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-html'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">removeComments</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//清除html注释</span>            <span class="token literal-property property">collapseWhitespace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩html</span>            <span class="token literal-property property">collapseBooleanAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token comment">//省略布尔属性的值，例如：&lt;input checked="true"/> ==> &lt;input /></span>            <span class="token literal-property property">removeEmptyAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token comment">//删除所有空格作属性值，例如：&lt;input id="" /> ==> &lt;input /></span>            <span class="token literal-property property">removeScriptTypeAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token comment">//删除&lt;script>的type="text/javascript"</span>            <span class="token literal-property property">removeStyleLinkTypeAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token comment">//删除&lt;style>和&lt;link>的 type="text/css"</span>            <span class="token literal-property property">minifyJS</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩页面 JS</span>            <span class="token literal-property property">minifyCSS</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩页面 CSS</span>            <span class="token literal-property property">minifyURLs</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token comment">//压缩页面URL</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//压缩字体</span><span class="token keyword">function</span> <span class="token function">minifyFont</span><span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/fonts/*.ttf'</span><span class="token punctuation">)</span> <span class="token comment">//原字体所在目录</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">fontmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">text</span><span class="token operator">:</span> text    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/fontsdest/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//压缩后的输出目录</span>    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'end'</span><span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'mini-font'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> buffers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//HTML文件所在目录请根据自身情况修改</span>    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      buffers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>contents<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'end'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> text <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>buffers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">minifyFont</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//gulp 4.0 以上版本可用</span><span class="token comment">// 运行 gulp 命令时依次执行以下任务</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span>  <span class="token string">'compress'</span><span class="token punctuation">,</span> <span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token string">'minify-html'</span><span class="token punctuation">,</span><span class="token string">'mini-font'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至此 gulp 的安装与配置便结束了</p></li><li><p>在每次运行完 <code>hexo generate</code> 生成静态页面后，运行 <code>gulp</code> 对其进行压缩。指令流程如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cleanhexo ggulphexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li>本文优化部分参考自：<a href="https://akilar.top/posts/49b73b87/">使用gulp压缩博客静态资源</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国剩余定理</title>
      <link href="/2022/06/04/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
      <url>/2022/06/04/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h1><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041914847.jpg" alt="中国剩余定理证明"></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int ExGcd(int a,int b,int &amp;x,int &amp;y)&#123;if(b&#x3D;&#x3D;0)&#123;x&#x3D;1,y&#x3D;0;return a;&#125;int ans&#x3D;ExGcd(b,a%b,x,y);int t&#x3D;y;y&#x3D;x-(a&#x2F;b)*y;x&#x3D;t;return ans;&#125;int inv(int a,int p)&#x2F;&#x2F;无解返回 -1 &#123;int x,y;if(ExGcd(a,p,x,y)!&#x3D;1) return -1;return (x%p+p)%p;&#x2F;&#x2F;正数化 &#125;int CRT(int a[],int m[],int n)&#123;int N&#x3D;1,x&#x3D;0;for(int i&#x3D;1;i&lt;&#x3D;n;++i) N*&#x3D;m[i];for(int i&#x3D;1;i&lt;&#x3D;n;++i)&#123;int r&#x3D;N&#x2F;m[i];x+&#x3D;(r * inv( r , m[i] ) * a[i])%N;&#125;return x%N;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cdn</title>
      <link href="/2022/06/04/cdn/"/>
      <url>/2022/06/04/cdn/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>npm-错误码及其解决方法</title>
      <link href="/2022/06/04/npm-%E9%94%99%E8%AF%AF%E7%A0%81%E5%8F%8A%E5%85%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2022/06/04/npm-%E9%94%99%E8%AF%AF%E7%A0%81%E5%8F%8A%E5%85%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="128"><a href="#128" class="headerlink" title="128"></a>128</h2><p>执行如下命令：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">git config <span class="token operator">--</span>global http<span class="token punctuation">.</span>sslverify <span class="token string">"false"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再执行 </p><pre class="line-numbers language-none"><code class="language-none">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 就可以了</p><p>如果上述命令执行完后，还是报那个错误，请继续执行如下命令，亲测有效</p><pre class="line-numbers language-none"><code class="language-none">git config --global url.&quot;https:&#x2F;&#x2F;&quot;.insteadOf git:&#x2F;&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
