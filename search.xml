<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>素数筛法</title>
      <link href="/4be0696.html"/>
      <url>/4be0696.html</url>
      
        <content type="html"><![CDATA[<h2 id="欧拉筛法">欧拉筛法</h2><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int prime[MAXN];bool vis[MAXN];int cnt&#x3D;0;void Euler_prime(int n)&#123;for(int i&#x3D;2;i&lt;&#x3D;n;++i)&#123;if(!vis[i])&#123;prime[cnt++]&#x3D;i;vis[i]&#x3D;true;&#125;&#x2F;&#x2F;vis[i]置为true或不置true都可以for(int j&#x3D;0;j&lt;cnt;++j)&#123;if(i*prime[j]&gt;n)&#x2F;&#x2F;判断是否越界break;vis[i*prime[j]]&#x3D;true;&#x2F;&#x2F;筛数if(i%prime[j]&#x3D;&#x3D;0)&#x2F;&#x2F;时间复杂度为O(n)的关键！break;&#125;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分解质因数</title>
      <link href="/ece2ea76.html"/>
      <url>/ece2ea76.html</url>
      
        <content type="html"><![CDATA[<p>1</p><h2 id="原理部分">原理部分</h2><p>由于时间限制，后续会补充学习</p><h2 id="代码实现-4">代码实现</h2><h3 id="PollardRho（-时间复杂度O-n1-4-）">PollardRho（ 时间复杂度<em>O</em>(<em>n</em>1/4) ）</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;iostream&gt;#include&lt;cstdio&gt;#include&lt;cstring&gt;#include&lt;algorithm&gt;#include&lt;cstdlib&gt;#include&lt;cmath&gt;#include&lt;ctime&gt;typedef long long ll;typedef unsigned long long ull;typedef long double lb;using namespace std;int n;ll ans,m;&#x2F;&#x2F;ll cnt[100000],num;用于记录质因子 inline ll Abs(ll x)&#123;return x&lt;0?-x:x;&#125;inline ll gcd(ll a,ll b)&#123;ll c;while(b)&#123;c&#x3D;a;a&#x3D;b;b&#x3D;c%b;&#125;return a;&#125;inline ll ksc(ull x,ull y,ll p) &#x2F;&#x2F;O(1)快速乘（防爆long long）&#123;return (x*y-(ull)((lb)x&#x2F;p*y)*p+p)%p;&#125;inline long long ksm(long long a, long long k, long long p)   &#x2F;&#x2F; a 底数， k 指数， 求 a^k mod p&#123;long long res &#x3D; 1;a%&#x3D;p;while(k &gt; 0)&#123;if (k &amp; 1) res &#x3D;ksc(res,a,p);a &#x3D; ksc(a,a,p);k &gt;&gt;&#x3D; 1;&#125;return res;&#125;inline bool mr(ll x,ll p) &#x2F;&#x2F;mille rabin判质数&#123;if(ksm(x,p-1,p)!&#x3D;1) return 0;&#x2F;&#x2F;费马小定理ll y&#x3D;p-1,z;while(!(y&amp;1)) &#x2F;&#x2F;二次探测&#123;y&gt;&gt;&#x3D;1;z&#x3D;ksm(x,y,p);if(z!&#x3D;1&amp;&amp;z!&#x3D;p-1)return 0;if(z&#x3D;&#x3D;p-1)return 1;&#125;return 1;&#125;inline bool prime(ll x)&#x2F;&#x2F;用于判断是否为质数&#123;if(x&lt;2)return 0;&#x2F;&#x2F;mille rabin判质数if(x&#x3D;&#x3D;2||x&#x3D;&#x3D;3||x&#x3D;&#x3D;5||x&#x3D;&#x3D;7||x&#x3D;&#x3D;43) return 1;return mr(2,x)&amp;&amp;mr(3,x)&amp;&amp;mr(5,x)&amp;&amp;mr(7,x)&amp;&amp;mr(43,x);&#125;inline ll rho(ll p) &#x2F;&#x2F;求出p的非平凡因子&#123;ll x,y,z,c,g;int i,j;&#x2F;&#x2F;先摆出来（z用来存（y-x）的乘积）while(1) &#x2F;&#x2F;保证一定求出一个因子来&#123;y&#x3D;x&#x3D;rand()%p;&#x2F;&#x2F;随机初始化z&#x3D;1;c&#x3D;rand()%p;&#x2F;&#x2F;初始化i&#x3D;0,j&#x3D;1;&#x2F;&#x2F;倍增初始化while(++i) &#x2F;&#x2F;开始玄学生成&#123;x&#x3D;(ksc(x,x,p)+c)%p;&#x2F;&#x2F;可能要用快速乘z&#x3D;ksc(z,Abs(y-x),p);&#x2F;&#x2F;我们将每一次的（y-x）都累乘起来if(x&#x3D;&#x3D;y||!z)break;&#x2F;&#x2F;如果跑完了环就再换一组试试（注意当z&#x3D;0时，继续下去是没意义的）if(!(i%127)||i&#x3D;&#x3D;j) &#x2F;&#x2F;我们不仅在等127次之后gcd我们还会倍增的来gcd&#123;g&#x3D;gcd(z,p);if(g&gt;1)return g;if(i&#x3D;&#x3D;j)y&#x3D;x,j&lt;&lt;&#x3D;1;&#x2F;&#x2F;维护倍增正确性，并判环（一箭双雕）&#125;&#125;&#125;&#125;inline void prho(ll p) &#x2F;&#x2F;不断的找他的质因子,如果要记录质因子在此处添加&#123;if(p&lt;&#x3D;ans)return ;&#x2F;&#x2F;最优性剪纸if(prime(p))&#123;ans&#x3D;p;&#x2F;&#x2F;cnt[++num]&#x3D;p;记录质因子 return;&#125;ll pi&#x3D;rho(p);&#x2F;&#x2F;我们一次必定能求的出一个因子，所以不用whilewhile(p%pi&#x3D;&#x3D;0)p&#x2F;&#x3D;pi;&#x2F;&#x2F;记得要除尽return prho(pi),prho(p);&#x2F;&#x2F;分开继续分解质因数&#125;int main()&#123;&#x2F;&#x2F;freopen(&quot;in.txt&quot;,&quot;r&quot;,stdin);cin&gt;&gt;n;srand(time(0));&#x2F;&#x2F;随机数生成必备！！！for(int i&#x3D;1; i&lt;&#x3D;n; ++i)&#123;ans&#x3D;1;cin&gt;&gt;m;prho(m);if(ans&#x3D;&#x3D;m) cout&lt;&lt;&quot;Prime&quot;&lt;&lt;endl;else cout&lt;&lt;ans&lt;&lt;endl;&#125;return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="应用场景">应用场景</h2><h3 id="1-大数因子求解">1.大数因子求解</h3>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2158 [SDOI2008] 仪仗队</title>
      <link href="/7143db0c.html"/>
      <url>/7143db0c.html</url>
      
        <content type="html"><![CDATA[<h2 id="前置知识">前置知识</h2><p><a href="https://anubis.cafe/f60286b9.html">欧拉定理</a></p><h2 id="题意简析">题意简析</h2><p>题目可以简化为求斜率个数（同一斜率上的点只能看到一个）</p><p>由 <strong>k=y/x</strong> 可知 <strong>k=y/x=p<em>y/p</em>x</strong><br>则已知 互质的 x,y 可以得出一个新的 k<br>则题意转化为求 <strong>gcd(x,y)=1</strong> 的个数</p><p><img src="https://images-of-ansubis.oss-cn-hangzhou.aliyuncs.com/202207231055111.jpg" alt=""></p><p>此处有几个坑点：</p><ol><li><strong>观察者所处未知为（0，0）则边界应为 n-1</strong></li><li><strong>边界还有两个斜率未被纳入计算</strong></li><li><strong>k=1 的斜率被重复计算，需要被减去 1</strong></li></ol><h2 id="代码实现">代码实现</h2><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;iostream&gt;#include&lt;cstdio&gt;#include&lt;cstring&gt;#include&lt;algorithm&gt;#include&lt;cstdlib&gt;#include&lt;cmath&gt;#include&lt;map&gt;#include&lt;set&gt;#include&lt;queue&gt;using namespace std;const long long maxn&#x3D;16+7;long long f[maxn];&#x2F;&#x2F;f[i]指 ψ(i)long long p[maxn],cnt;&#x2F;&#x2F;p[i]用于存储第i格质数,cnt用于统计素数个数long long tag[maxn];&#x2F;&#x2F;tag[i] 用于记录i是否是素数long long euler(long long n)&#x2F;&#x2F;欧拉函数&#123;long long ans&#x3D;n;for(long long i&#x3D;2; i*i&lt;&#x3D;n; ++i)if(n%i&#x3D;&#x3D;0)&#123;ans&#x3D;ans-ans&#x2F;i;while(n%i&#x3D;&#x3D;0)  n&#x2F;&#x3D;i;&#125;if(n&gt;1)  ans&#x3D;ans-ans&#x2F;n;return ans;&#125;int main()&#123;long long n;cin&gt;&gt;n;if(n&#x3D;&#x3D;1) &#x2F;&#x2F;n&#x3D;1 无观察对象&#123;cout&lt;&lt;0;return 0;&#125;long long Ans&#x3D;0;for(long long i&#x3D;1; i&lt;&#x3D;n-1; ++i)&#123;Ans+&#x3D;euler(i);&#125;Ans&#x3D;Ans*2+1;&#x2F;&#x2F;Ans*2+2-1cout&lt;&lt;Ans;return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>欧拉定理</title>
      <link href="/b43957a0.html"/>
      <url>/b43957a0.html</url>
      
        <content type="html"><![CDATA[<h2 id="前置知识-6">前置知识</h2><h3 id="欧拉函数"><a href="https://anubis.cafe/f60286b9.html">欧拉函数</a></h3><h2 id="原理-5">原理</h2><p><img src="https://images-of-ansubis.oss-cn-hangzhou.aliyuncs.com/202207231111817.png" alt=""></p><h2 id="代码实现-7">代码实现</h2><p>快速幂+欧拉函数</p><h2 id="应用场景-3">应用场景</h2><h3 id="1-大数降幂法">1.大数降幂法</h3><p><img src="https://images-of-ansubis.oss-cn-hangzhou.aliyuncs.com/202207232203118.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欧拉函数</title>
      <link href="/f60286b9.html"/>
      <url>/f60286b9.html</url>
      
        <content type="html"><![CDATA[<h2 id="原理简介">原理简介</h2><p>欧拉函数：对正整数 n ，欧拉函数是<strong>小于等于</strong> n 的数中与 n 互质的数的<strong>数目</strong></p><h3 id="性质">性质</h3><ol><li>若 a 为质数，则 <strong><em>ψ</em>(<em>a</em>)=<em>a</em>−1</strong></li><li>若 a,b 互质，则 <em><em><em>ψ</em>(<em>a∗b)=ψ</em>(<em>a</em>)∗</em>ψ</em>(<em>b)</em>* （欧拉函数是积性函数）</li><li>若 b 为 a 的倍数，则  <em><em><em>ψ</em>(<em>a∗b)=a∗</em>ψ</em>(<em>b)</em></em></li><li>若 p 为素数，则  *<em><em>ψ</em>(p^a)=(p-1)<em>p^(a-1)</em></em></li><li>由 3 可得：设 <code>n=p1^a1 * p2^a2 * ··· *pn^an</code> 为正整数 n 的<strong>素数幂乘积</strong>表达式，则 <code>ψ(n)=n*(1-1/p1)*(1-1/p2)*(1-1/p3*···)</code></li></ol><h2 id="代码实现-6">代码实现</h2><h3 id="单个求解">单个求解</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">long long euler(long long n)&#x2F;&#x2F;欧拉函数  &#123;      long long ans&#x3D;n;      for(long long i&#x3D;2;i*i&lt;&#x3D;n;++i)          if(n%i&#x3D;&#x3D;0)          &#123;              ans&#x3D;ans-ans&#x2F;i;              while(n%i&#x3D;&#x3D;0)  n&#x2F;&#x3D;i;           &#125;      if(n&gt;1)  ans&#x3D;ans-ans&#x2F;n;      return ans;  &#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="连续求解（O-n-ln-ln-n-）">连续求解（O(n*ln ln n)）</h3><pre class="line-numbers language-none"><code class="language-none">const long long maxn&#x3D;16+7;long long f[maxn];&#x2F;&#x2F;f[i]指 ψ(i)long long p[maxn],cnt;&#x2F;&#x2F;p[i]用于存储第i格质数,cnt用于统计素数个数long long tag[maxn];&#x2F;&#x2F;tag[i] 用于记录i是否是素数void euler(long long n)&#x2F;&#x2F;线性筛选素数,求出 2-n 的所有欧拉函数值&#123;f[1]&#x3D;1;for(long long i&#x3D;2; i&lt;&#x3D;n; ++i)&#123;if(!tag[i])&#123;p[++cnt]&#x3D;i;f[i]&#x3D;i-1;&#x2F;&#x2F;若 a 为质数，则ψ(a)&#x3D;a-1&#125;for(long long j&#x3D;1; j&lt;&#x3D;cnt&amp;&amp;i*p[j]&lt;&#x3D;n; j++)&#123;long long v&#x3D;i*p[j];tag[v]&#x3D;1;if(i%p[j]&#x3D;&#x3D;0)&#123;f[v]&#x3D;f[i]*p[j];&#x2F;&#x2F;性质3 若 b 为 a 的倍数，则  ψ(a*b)&#x3D;a*ψ(b)break;&#125;&#x2F;&#x2F;p[j]的因数只有1和它本身，所以p[j]与i互质，符合性质2f[v]&#x3D;f[i]*f[p[j]];&#x2F;&#x2F;性质2&#125;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="应用场景-2">应用场景</h2><h3 id="1-gcd-求和">1. gcd 求和</h3><p><img src="https://images-of-ansubis.oss-cn-hangzhou.aliyuncs.com/202207222025548.png" alt=""></p><h2 id="例题">例题</h2><h3 id="P2303-SDOI2012-Longge-的问题"><a href="https://www.luogu.com.cn/problem/P2303">P2303  [SDOI2012] Longge 的问题</a></h3><h3 id="P2158-SDOI2008-仪仗队"><a href="https://www.luogu.com.cn/problem/P2158">P2158   [SDOI2008] 仪仗队   </a></h3>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java快速复习笔记</title>
      <link href="/76138d27.html"/>
      <url>/76138d27.html</url>
      
        <content type="html"><![CDATA[<h1>Java 快速复习笔记</h1><h2 id="复习重点">复习重点</h2><ul><li>优先级</li><li>变量大小</li></ul><h2 id="基本语法">基本语法</h2><h3 id="编写规范">编写规范</h3><p>编写 Java 程序时，应注意以下几点：</p><ul><li>​<strong>大小写敏感</strong>：Java 是大小写敏感的，这就意味着标识符 Hello 与 hello 是不同的。</li><li>​<strong>类名</strong>：对于所有的类来说，类名的<strong>首字母应该大写</strong>。如果类名由若干单词组成，那么每个单词的首字母应该大写，例如 <strong>MyFirstJavaClass</strong> 。</li><li>​<strong>方法名</strong>：所有的方法名都应该以小写字母开头。如果方法名含有若干单词，则后面的每个单词首字母大写。</li><li>​<strong>源文件名</strong>：源文件名必须和类名相同。当保存文件的时候，你应该使用类名作为文件名保存（切记 Java 是大小写敏感的），文件名的后缀为 <strong>.java</strong>。（如果文件名和类名不相同则会导致编译错误）。</li><li>​<strong>主方法入口</strong>：所有的 Java 程序由 <strong><code>public static void main(String[] args)</code></strong> 方法开始执行。</li></ul><h3 id="标识符">标识符</h3><p>Java 所有的组成部分都需要名字。类名、变量名以及方法名都被称为标识符。</p><p>关于 Java 标识符，有以下几点需要注意：</p><ul><li>​所有的标识符都应该以字母（A-Z 或者 a-z）,美元符（$）、或者下划线（_）开始</li><li>​首字符之后可以是字母（A-Z 或者 a-z）,美元符（$）、下划线（_）或数字的任何字符组合</li><li>​关键字不能用作标识符</li><li>​标识符是大小写敏感的</li><li>​合法标识符举例：age、$salary、_value、__1_value</li><li>​非法标识符举例：123abc、-salary</li></ul><h3 id="修饰符">修饰符</h3><h3 id="变量">变量</h3><p>Java 中主要有如下几种类型的变量</p><ul><li><p>​<strong>局部变量</strong>：在方法、构造方法或者语句块中定义的变量被称为局部变量。变量声明和初始化都是在方法中，方法结束后，变量就会自动销毁。（<strong>局部变量是没有默认值的</strong>）</p></li><li><h2 id="实例变量">实例变量</h2><ul><li>​实例变量也称为成员变量</li><li>​实例变量声明在一个类中，但在方法、构造方法和语句块之外；</li><li>​当一个对象被实例化之后，每个实例变量的值就跟着确定；</li><li>​实例变量在对象创建的时候创建，在对象被销毁的时候销毁；</li><li>​实例变量的值应该至少被一个方法、构造方法或者语句块引用，使得外部能够通过这些方式获取实例变量信息；</li><li>​实例变量可以声明在使用前或者使用后；</li><li>​访问修饰符可以修饰实例变量；</li><li>​实例变量对于类中的方法、构造方法或者语句块是可见的。一般情况下应该把实例变量设为私有。通过使用访问修饰符可以使实例变量对子类可见；</li><li>​实例变量具有默认值。数值型变量的<strong>默认值是0</strong>，布尔型变量的默认值是false，引用类型变量的默认值是null。变量的值可以在声明时指定，也可以在构造方法中指定；</li><li>​实例变量可以直接通过变量名访问。但在静态方法以及其他类中，就应该使用完全限定名：<code>ObjectReference.VariableName</code>。</li></ul></li><li><h2 id="类变量（静态变量）">类变量（静态变量）</h2><ul><li>​类变量也称为静态变量，在类中以 static 关键字声明，但必须在方法之外。</li><li>​无论一个类创建了多少个对象，类只拥有类变量的一份拷贝。</li><li>​静态变量除了被声明为常量外很少使用，静态变量是指声明为 public/private，final 和 static 类型的变量。静态变量初始化后不可改变。</li><li>​静态变量储存在静态存储区。经常被声明为常量，很少单独使用 static 声明变量。</li><li>​静态变量在第一次被访问时创建，在程序结束时销毁。</li><li>​与实例变量具有相似的可见性。但为了对类的使用者可见，大多数静态变量声明为 public 类型。</li><li>​默认值和实例变量相似。数值型变量默认值是 0，布尔型默认值是 false，引用类型默认值是 null。变量的值可以在声明的时候指定，也可以在构造方法中指定。此外，静态变量还可以在静态语句块中初始化。</li><li>​静态变量可以通过：<em>ClassName.VariableName</em>的方式访问。</li><li>​类变量被声明为 public static final 类型时，类变量名称一般建议使用大写字母。如果静态变量不是 public 和 final 类型，其命名方式与实例变量以及局部变量的命名方式一致。</li></ul></li></ul><h3 id="数组">数组</h3><h3 id="枚举">枚举</h3><h3 id="关键字">关键字</h3><p>下面列出了 Java 关键字。这些保留字不能用于常量、变量、和任何标识符的名称。</p><table><thead><tr><th>类别</th><th>关键字</th><th>说明</th></tr></thead><tbody><tr><td>访问控制</td><td>private</td><td>私有的</td></tr><tr><td></td><td>protected</td><td>受保护的</td></tr><tr><td></td><td>public</td><td>公共的</td></tr><tr><td></td><td>default</td><td>默认</td></tr><tr><td>类、方法和变量修饰符</td><td>abstract</td><td>声明抽象</td></tr><tr><td></td><td>class</td><td>类</td></tr><tr><td></td><td>extends</td><td>扩充,继承</td></tr><tr><td></td><td>final</td><td>最终值,不可改变的</td></tr><tr><td></td><td>implements</td><td>实现（接口）</td></tr><tr><td></td><td>interface</td><td>接口</td></tr><tr><td></td><td>native</td><td>本地，原生方法（非 Java 实现）</td></tr><tr><td></td><td>new</td><td>新,创建</td></tr><tr><td></td><td>static</td><td>静态</td></tr><tr><td></td><td>strictfp</td><td>严格,精准</td></tr><tr><td></td><td>synchronized</td><td>线程,同步</td></tr><tr><td></td><td>transient</td><td>短暂</td></tr><tr><td></td><td>volatile</td><td>易失</td></tr><tr><td>程序控制语句</td><td>break</td><td>跳出循环</td></tr><tr><td></td><td>case</td><td>定义一个值以供 switch 选择</td></tr><tr><td></td><td>continue</td><td>继续</td></tr><tr><td></td><td>default</td><td>默认</td></tr><tr><td></td><td>do</td><td>运行</td></tr><tr><td></td><td>else</td><td>否则</td></tr><tr><td></td><td>for</td><td>循环</td></tr><tr><td></td><td>if</td><td>如果</td></tr><tr><td></td><td>instanceof</td><td>实例</td></tr><tr><td></td><td>return</td><td>返回</td></tr><tr><td></td><td>switch</td><td>根据值选择执行</td></tr><tr><td></td><td>while</td><td>循环</td></tr><tr><td>错误处理</td><td>assert</td><td>断言表达式是否为真</td></tr><tr><td></td><td>catch</td><td>捕捉异常</td></tr><tr><td></td><td>finally</td><td>有没有异常都执行</td></tr><tr><td></td><td>throw</td><td>抛出一个异常对象</td></tr><tr><td></td><td>throws</td><td>声明一个异常可能被抛出</td></tr><tr><td></td><td>try</td><td>捕获异常</td></tr><tr><td>包相关</td><td>import</td><td>引入</td></tr><tr><td>package</td><td>包</td><td></td></tr><tr><td>基本类型</td><td>boolean</td><td>布尔型</td></tr><tr><td></td><td>byte</td><td>字节型</td></tr><tr><td></td><td>char</td><td>字符型</td></tr><tr><td></td><td>double</td><td>双精度浮点</td></tr><tr><td></td><td>float</td><td>单精度浮点</td></tr><tr><td></td><td>int</td><td>整型</td></tr><tr><td></td><td>long</td><td>长整型</td></tr><tr><td></td><td>short</td><td>短整型</td></tr><tr><td>变量引用</td><td>super</td><td>父类,超类</td></tr><tr><td></td><td>this</td><td>本类</td></tr><tr><td></td><td>void</td><td>无返回值</td></tr><tr><td>保留关键字</td><td>goto</td><td>是关键字，但不能使用</td></tr><tr><td></td><td>const</td><td>是关键字，但不能使用</td></tr></tbody></table><p>**注意：**Java 的 <strong>null 不是关键字</strong>，类似于 true 和 false，它是一个字面常量，不允许作为标识符使用。</p><h3 id="继承">继承</h3><p>在 Java 中，一个类可以由其他类派生。如果你要创建一个类，而且已经存在一个类具有你所需要的属性或方法，那么你可以将新创建的类继承该类。</p><p>利用继承的方法，可以重用已存在类的方法和属性，而不用重写这些代码。被继承的类称为超类（super class），派生类称为子类（sub class）。</p><hr><h3 id="接口">接口</h3><p>在 Java 中，接口可理解为对象间相互通信的协议。接口在继承中扮演着很重要的角色。</p><p>接口只定义派生要用到的方法，但是方法的具体实现完全取决于派生类。</p><h2 id="基本数据类型">基本数据类型</h2><h3 id="内置数据类型">内置数据类型</h3><p>Java语言提供了八种基本类型。六种数字类型（四个整数型，两个浮点型），一种字符类型，还有一种布尔型。</p><p><strong>byte：</strong></p><ul><li>​byte 数据类型是8位、有符号的，以二进制补码表示的整数；</li><li>​最小值是 -128（-2^7）；</li><li>​最大值是 127（2^7-1）；</li><li>​默认值是 0；</li><li>​byte 类型用在大型数组中节约空间，主要代替整数，因为 byte 变量占用的空间只有 int 类型的四分之一；</li><li>​例子：byte a = 100，byte b = -50。</li></ul><p><strong>short：</strong></p><ul><li>​short 数据类型是 16 位、有符号的以二进制补码表示的整数</li><li>​最小值是 -32768（-2^15）；</li><li>​最大值是 32767（2^15 - 1）；</li><li>​Short 数据类型也可以像 byte 那样节省空间。一个short变量是int型变量所占空间的二分之一；</li><li>​默认值是 0；</li><li>​例子：short s = 1000，short r = -20000。</li></ul><p><strong>int：</strong></p><ul><li>​int 数据类型是32位、有符号的以二进制补码表示的整数；</li><li>​最小值是 -2,147,483,648（-2^31）；</li><li>​最大值是 2,147,483,647（2^31 - 1）；</li><li>​一般地整型变量默认为 int 类型；</li><li>​默认值是 0 ；</li><li>​例子：int a = 100000, int b = -200000。</li></ul><p><strong>long：</strong></p><ul><li>​long 数据类型是 64 位、有符号的以二进制补码表示的整数；</li><li>​最小值是 -9,223,372,036,854,775,808（-2^63）；</li><li>​最大值是 9,223,372,036,854,775,807（2^63 -1）；</li><li>​这种类型主要使用在需要比较大整数的系统上；</li><li>​默认值是 0L；</li><li>​例子： long a = 100000L，long b = -200000L。<br>&quot;L&quot;理论上不分大小写，但是若写成&quot;l&quot;容易与数字&quot;1&quot;混淆，不容易分辩。所以最好大写。</li></ul><p><strong>float：</strong></p><ul><li>​float 数据类型是单精度、32位、符合IEEE 754标准的浮点数；</li><li>​float 在储存大型浮点数组的时候可节省内存空间；</li><li>​默认值是 0.0f；</li><li>​浮点数不能用来表示精确的值，如货币；</li><li>​例子：float f1 = 234.5f。</li></ul><p><strong>double：</strong></p><ul><li><p>​double 数据类型是双精度、64 位、符合 IEEE 754 标准的浮点数；</p></li><li><p>​浮点数的默认类型为 double 类型；</p></li><li><p>​double类型同样不能表示精确的值，如货币；</p></li><li><p>​默认值是 0.0d；</p></li><li><p>例子：</p><pre class="line-numbers language-none"><code class="language-none">double   d1  &#x3D; 7D ;double   d2  &#x3D; 7.; double   d3  &#x3D;  8.0; double   d4  &#x3D;  8.D; double   d5  &#x3D;  12.9867; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>7 是一个 int 字面量，而 7D，7. 和 8.0 是 double 字面量。</p></li></ul><p><strong>boolean：</strong></p><ul><li>​boolean数据类型表示一位的信息；</li><li>​只有两个取值：true 和 false；</li><li>​这种类型只作为一种标志来记录 true/false 情况；</li><li>​默认值是 false；</li><li>​例子：boolean one = true。</li></ul><p><strong>char：</strong></p><ul><li>​char 类型是一个单一的 16 位 Unicode 字符；</li><li>​<strong>最小值是 \u0000（十进制等效值为 0）；</strong></li><li>​<strong>最大值是 \uffff（即为 65535）；</strong></li><li>​char 数据类型可以储存任何字符；</li><li>​例子：char letter = ‘A’;。</li></ul><h3 id="类型默认值">类型默认值</h3><p>下表列出了 Java 各个类型的默认值：</p><table><thead><tr><th><strong>数据类型</strong></th><th><strong>默认值</strong></th></tr></thead><tbody><tr><td>byte</td><td>0</td></tr><tr><td>short</td><td>0</td></tr><tr><td>int</td><td>0</td></tr><tr><td>long</td><td>0L</td></tr><tr><td>float</td><td>0.0f</td></tr><tr><td>double</td><td>0.0d</td></tr><tr><td>char</td><td>‘u0000’</td></tr><tr><td>String (or any object)</td><td>null</td></tr><tr><td>boolean</td><td>false</td></tr></tbody></table><h3 id="引用类型">引用类型</h3><ul><li>​在Java中，引用类型的变量非常类似于C/C++的指针。引用类型指向一个对象，指向对象的变量是引用变量。这些变量在声明时被指定为一个特定的类型，比如 Employee、Puppy 等。变量一旦声明后，类型就不能被改变了。</li><li>​<strong>除了内置数据类型外均为引用数据类型。</strong></li><li>​所有引用类型的默认值都是null。</li><li>​一个引用变量可以用来引用任何与之兼容的类型。</li><li>​例子：Site site = new Site(“Runoob”)。</li></ul><h3 id="常量">常量</h3><p>常量在程序运行时是不能被修改的。</p><p>在 Java 中使用 <strong>final</strong> 关键字（不能使用 <code>const</code>）来修饰常量，声明方式和变量类似：</p><pre class="line-numbers language-none"><code class="language-none">final double PI &#x3D; 3.1415927;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>虽然常量名也可以用小写，但为了便于识别，通常使用大写字母表示常量。</p><p>字面量可以赋给任何内置类型的变量。例如：</p><pre class="line-numbers language-none"><code class="language-none">byte a &#x3D; 68;char a &#x3D; &#39;A&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>byte、int、long、和short都可以用十进制、16进制以及8进制的方式来表示。</p><p>当使用字面量的时候，前缀 0 表示 8 进制，而前缀 0x 代表 16 进制, 例如：</p><pre class="line-numbers language-none"><code class="language-none">int decimal &#x3D; 100;int octal &#x3D; 0144;int hexa &#x3D;  0x64;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>和其他语言一样，Java的字符串常量也是包含在两个引号之间的字符序列。下面是字符串型字面量的例子：</p><pre class="line-numbers language-none"><code class="language-none">&quot;Hello World&quot;&quot;two\nlines&quot;&quot;\&quot;This is in quotes\&quot;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>字符串常量和字符变量都可以包含任何 Unicode 字符。例如：</p><pre class="line-numbers language-none"><code class="language-none">char a &#x3D; &#39;\u0001&#39;;String a &#x3D; &quot;\u0001&quot;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="转义字符序列。">转义字符序列。</h3><table><thead><tr><th>符号</th><th>字符含义</th></tr></thead><tbody><tr><td>\n</td><td>换行 (0x0a)</td></tr><tr><td>\r</td><td>回车 (0x0d)</td></tr><tr><td>\f</td><td>换页符(0x0c)</td></tr><tr><td>\b</td><td>退格 (0x08)</td></tr><tr><td>\0</td><td>空字符 (0x0)</td></tr><tr><td>\s</td><td>空格 (0x20)</td></tr><tr><td>\t</td><td>制表符</td></tr><tr><td>&quot;</td><td>双引号</td></tr><tr><td>’</td><td>单引号</td></tr><tr><td>\</td><td>反斜杠</td></tr><tr><td>\ddd</td><td>八进制字符 (ddd)</td></tr><tr><td>\uxxxx</td><td>16进制Unicode字符 (xxxx)</td></tr></tbody></table><h3 id="自动类型转换">自动类型转换</h3><p><strong>整型、实型（常量）、字符型数据可以混合运算。运算中，不同类型的数据先转化为同一类型，然后进行运算。</strong></p><p>转换从低级到高级。</p><pre class="line-numbers language-none"><code class="language-none">低  ------------------------------------&gt;  高byte,short,char—&gt; int —&gt; long—&gt; float —&gt; double <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>数据类型转换必须满足如下规则：</p><ol><li><p>不能对boolean类型进行类型转换。</p></li><li><p>不能把对象类型转换成不相关类的对象。</p></li><li><p>在把容量大的类型转换为容量小的类型时必须使用强制类型转换。</p></li><li><p>转换过程中可能导致溢出或损失精度，例如：</p><pre class="line-numbers language-none"><code class="language-none">int i &#x3D;128;   byte b &#x3D; (byte)i;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>因为 byte 类型是 8 位，最大值为127，所以当 int 强制转换为 byte 类型时，值 128 时候就会导致溢出。</p></li></ol><ul><li><p>浮点数到整数的转换是通过<strong>舍弃小数</strong>得到，而不是四舍五入，例如：</p><pre class="line-numbers language-none"><code class="language-none">(int)23.7 &#x3D;&#x3D; 23;        (int)-45.89f &#x3D;&#x3D; -45<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><p>隐含强制类型转换</p><ul><li>整数的默认类型是 int。</li><li>小数默认是 double 类型浮点型，在定义 float 类型时必须在数字后面跟上 F 或者 f。</li><li>对 <code>long </code>类型的数据进行赋值时，若所赋值超过<code>int</code>范围，则需要在末尾加<code>l</code>或<code>L</code></li></ul><h2 id="数组-2">数组</h2><h3 id="声明">声明</h3><pre class="line-numbers language-none"><code class="language-none">dataType[] arrayRefVar;   &#x2F;&#x2F; 首选的方法 或 dataType arrayRefVar[];  &#x2F;&#x2F; 效果相同，但不是首选方法<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建">创建</h3><pre class="line-numbers language-none"><code class="language-none">dataType[] arrayRefVar &#x3D; new dataType[arraySize];或dataType[] arrayRefVar &#x3D; &#123;value0, value1, ..., valuek&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在数组创建后，系统会自动赋予对应的初始值</p><h3 id="实例-5">实例</h3><pre class="line-numbers language-none"><code class="language-none">public class TestArray &#123;   public static void main(String[] args) &#123;      &#x2F;&#x2F; 数组大小      int size &#x3D; 10;      &#x2F;&#x2F; 定义数组      double[] myList &#x3D; new double[size];      myList[0] &#x3D; 5.6;      myList[1] &#x3D; 4.5;      myList[2] &#x3D; 3.3;      myList[3] &#x3D; 13.2;      myList[4] &#x3D; 4.0;      myList[5] &#x3D; 34.33;      myList[6] &#x3D; 34.0;      myList[7] &#x3D; 45.45;      myList[8] &#x3D; 99.993;      myList[9] &#x3D; 11123;      &#x2F;&#x2F; 计算所有元素的总和      double total &#x3D; 0;      for (int i &#x3D; 0; i &lt; size; i++) &#123;         total +&#x3D; myList[i];      &#125;      System.out.println(&quot;总和为： &quot; + total);   &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="遍历数组">遍历数组</h3><h4 id="for-循环">for 循环</h4><h4 id="or-Each-循环">or-Each 循环</h4><p>实例</p><pre class="line-numbers language-none"><code class="language-none">public class TestArray &#123;   public static void main(String[] args) &#123;      double[] myList &#x3D; &#123;1.9, 2.9, 3.4, 3.5&#125;;       &#x2F;&#x2F; 打印所有数组元素      for (double element: myList) &#123;         System.out.println(element);      &#125;   &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="多维数组">多维数组</h3><p>多维数组可以看成是数组的数组，比如二维数组就是一个特殊的一维数组，其每一个元素都是一个一维数组，例如：</p><p>String[][] str = new String[3][4];</p><h4 id="多维数组的动态初始化（以二维数组为例）">多维数组的动态初始化（以二维数组为例）</h4><p>\1. 直接为每一维分配空间，格式如下：</p><pre class="line-numbers language-none"><code class="language-none">type[][] typeName &#x3D; new type[typeLength1][typeLength2];<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例如：</p><pre class="line-numbers language-none"><code class="language-none">int[][] a &#x3D; new int[2][3];<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解析：</p><p>二维数组 a 可以看成一个两行三列的数组。</p><p>\2. 从最高维开始，分别为每一维分配空间，例如：</p><pre class="line-numbers language-none"><code class="language-none">String[][] s &#x3D; new String[2][];s[0] &#x3D; new String[2];s[1] &#x3D; new String[3];s[0][0] &#x3D; new String(&quot;Good&quot;);s[0][1] &#x3D; new String(&quot;Luck&quot;);s[1][0] &#x3D; new String(&quot;to&quot;);s[1][1] &#x3D; new String(&quot;you&quot;);s[1][2] &#x3D; new String(&quot;!&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解析：</p><p><strong>s[0]=new String[2]</strong> 和 <strong>s[1]=new String[3]</strong> 是为最高维分配引用空间，也就是为最高维限制其能保存数据的最长的长度，然后再为其每个数组元素单独分配空间 <strong>s0=new String(“Good”)</strong> 等操作。</p><h4 id="多维数组的引用（以二维数组为例）">多维数组的引用（以二维数组为例）</h4><p>对二维数组中的每个元素，引用方式为 <strong><code>arrayName[ index1 ][index2]</code></strong>，例如：<code>num[1][0]</code></p><h2 id="运算符">运算符</h2><h3 id="算术运算符">算术运算符</h3><p>表格中的实例假设整数变量A的值为10，变量B的值为20：</p><table><thead><tr><th>操作符</th><th style="text-align:center">描述</th><th>例子</th></tr></thead><tbody><tr><td>+</td><td style="text-align:center">加法 - 相加运算符两侧的值</td><td>A + B 等于 30</td></tr><tr><td>-</td><td style="text-align:center">减法 - 左操作数减去右操作数</td><td>A – B 等于 -10</td></tr><tr><td>*</td><td style="text-align:center">乘法 - 相乘操作符两侧的值</td><td>A * B等于200</td></tr><tr><td>/</td><td style="text-align:center">除法 - 左操作数除以右操作数</td><td>B / A等于2</td></tr><tr><td>％</td><td style="text-align:center">取余 - 左操作数除以右操作数的余数</td><td>B%A等于0</td></tr><tr><td>++</td><td style="text-align:center">自增: 操作数的值增加1</td><td>B++ 或 ++B 等于 21（区别）</td></tr><tr><td>–</td><td style="text-align:center">自减: 操作数的值减少1</td><td>B-- 或 --B 等于 19（区别详见下文）</td></tr></tbody></table><ol><li><strong>前缀自增自减法(++a,–a):</strong> 先进行自增或者自减运算，再进行表达式运算。</li><li><strong>后缀自增自减法(a++,a–):</strong> 先进行表达式运算，再进行自增或者自减运算</li></ol><h3 id="关系运算符">关系运算符</h3><p>表格中的实例整数变量A的值为10，变量B的值为20：</p><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>==</td><td>检查如果两个操作数的值是否相等，如果相等则条件为真。</td><td>（A == B）为假。</td></tr><tr><td>!=</td><td>检查如果两个操作数的值是否相等，如果值不相等则条件为真。</td><td>(A != B) 为真。</td></tr><tr><td>&gt;</td><td>检查左操作数的值是否大于右操作数的值，如果是那么条件为真。</td><td>（A&gt; B）为假。</td></tr><tr><td>&lt;</td><td>检查左操作数的值是否小于右操作数的值，如果是那么条件为真。</td><td>（A &lt;B）为真。</td></tr><tr><td>&gt;=</td><td>检查左操作数的值是否大于或等于右操作数的值，如果是那么条件为真。</td><td>（A&gt; = B）为假。</td></tr><tr><td>&lt;=</td><td>检查左操作数的值是否小于或等于右操作数的值，如果是那么条件为真。</td><td>（A &lt;= B）为真。</td></tr></tbody></table><h3 id="位运算符">位运算符</h3><p>表格中的实例整数变量A的值为10，变量B的值为20：</p><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>==</td><td>检查如果两个操作数的值是否相等，如果相等则条件为真。</td><td>（A == B）为假。</td></tr><tr><td>!=</td><td>检查如果两个操作数的值是否相等，如果值不相等则条件为真。</td><td>(A != B) 为真。</td></tr><tr><td>&gt;</td><td>检查左操作数的值是否大于右操作数的值，如果是那么条件为真。</td><td>（A&gt; B）为假。</td></tr><tr><td>&lt;</td><td>检查左操作数的值是否小于右操作数的值，如果是那么条件为真。</td><td>（A &lt;B）为真。</td></tr><tr><td>&gt;=</td><td>检查左操作数的值是否大于或等于右操作数的值，如果是那么条件为真。</td><td>（A&gt; = B）为假。</td></tr><tr><td>&lt;=</td><td>检查左操作数的值是否小于或等于右操作数的值，如果是那么条件为真。</td><td>（A &lt;= B）为真。</td></tr></tbody></table><h3 id="逻辑运算符">逻辑运算符</h3><p>表格中的实例整数变量A的值为10，变量B的值为20：</p><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>==</td><td>检查如果两个操作数的值是否相等，如果相等则条件为真。</td><td>（A == B）为假。</td></tr><tr><td>!=</td><td>检查如果两个操作数的值是否相等，如果值不相等则条件为真。</td><td>(A != B) 为真。</td></tr><tr><td>&gt;</td><td>检查左操作数的值是否大于右操作数的值，如果是那么条件为真。</td><td>（A&gt; B）为假。</td></tr><tr><td>&lt;</td><td>检查左操作数的值是否小于右操作数的值，如果是那么条件为真。</td><td>（A &lt;B）为真。</td></tr><tr><td>&gt;=</td><td>检查左操作数的值是否大于或等于右操作数的值，如果是那么条件为真。</td><td>（A&gt; = B）为假。</td></tr><tr><td>&lt;=</td><td>检查左操作数的值是否小于或等于右操作数的值，如果是那么条件为真。</td><td>（A &lt;= B）为真。</td></tr></tbody></table><h3 id="短路逻辑运算符">短路逻辑运算符</h3><p>当使用与逻辑运算符时，在两个操作数都为 true 时，结果才为true，但是当得到第一个操作为 false 时，其结果就必定是 false，这时候就不会再判断第二个操作了。</p><p>当使用或逻辑运算符时，在两个操作数有一个为 true 时，结果即为true，当得到第一个操作为 true 时，其结果就必定是 true，这时候就不会再判断第二个操作了。</p><h3 id="赋值运算符">赋值运算符</h3><p>下面是Java语言支持的赋值运算符：</p><table><thead><tr><th>操作符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>=</td><td>简单的赋值运算符，将右操作数的值赋给左侧操作数</td><td>C = A + B将把A + B得到的值赋给C</td></tr><tr><td>+ =</td><td>加和赋值操作符，它把左操作数和右操作数相加赋值给左操作数</td><td>C + = A等价于C = C + A</td></tr><tr><td>- =</td><td>减和赋值操作符，它把左操作数和右操作数相减赋值给左操作数</td><td>C - = A等价于C = C - A</td></tr><tr><td>* =</td><td>乘和赋值操作符，它把左操作数和右操作数相乘赋值给左操作数</td><td>C * = A等价于C = C * A</td></tr><tr><td>/ =</td><td>除和赋值操作符，它把左操作数和右操作数相除赋值给左操作数</td><td>C / = A，C 与 A 同类型时等价于 C = C / A</td></tr><tr><td>（％）=</td><td>取模和赋值操作符，它把左操作数和右操作数取模后赋值给左操作数</td><td>C％= A等价于C = C％A</td></tr><tr><td>&lt;&lt; =</td><td>左移位赋值运算符</td><td>C &lt;&lt; = 2等价于C = C &lt;&lt; 2</td></tr><tr><td>&gt;&gt; =</td><td>右移位赋值运算符</td><td>C &gt;&gt; = 2等价于C = C &gt;&gt; 2</td></tr><tr><td>＆=</td><td>按位与赋值运算符</td><td>C＆= 2等价于C = C＆2</td></tr><tr><td>^ =</td><td>按位异或赋值操作符</td><td>C ^ = 2等价于C = C ^ 2</td></tr><tr><td>| =</td><td>按位或赋值操作符</td><td></td></tr></tbody></table><h3 id="条件运算符（-）">条件运算符（?:）</h3><p>条件运算符也被称为三元运算符。该运算符有3个操作数，并且需要判断布尔表达式的值。该运算符的主要是决定哪个值应该赋值给变量。</p><pre class="line-numbers language-none"><code class="language-none">variable x &#x3D; (expression) ? value if true : value if false<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="instanceof-运算符">instanceof 运算符</h3><p>该运算符用于操作对象实例，检查该对象是否是一个特定类型（类类型或接口类型）。</p><p>instanceof运算符使用格式如下：</p><pre class="line-numbers language-none"><code class="language-none">( Object reference variable ) instanceof  (class&#x2F;interface type)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果运算符左侧变量所指的对象，是操作符右侧类或接口(class/interface)的一个对象，那么结果为真。</p><p>下面是一个例子：</p><pre class="line-numbers language-none"><code class="language-none">String name &#x3D; &quot;James&quot;;boolean result &#x3D; name instanceof String; &#x2F;&#x2F; 由于 name 是 String 类型，所以返回真<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果被比较的对象兼容于右侧类型，该运算符仍然返回 true。</p><h3 id="运算符优先级">运算符优先级</h3><p>下表中具有最高优先级的运算符在的表的最上面，最低优先级的在表的底部。</p><table><thead><tr><th>类别</th><th>操作符</th><th>关联性</th></tr></thead><tbody><tr><td>后缀</td><td>() [] . (点操作符)</td><td>左到右</td></tr><tr><td>一元</td><td>expr++  expr–</td><td>从左到右</td></tr><tr><td>一元</td><td>++expr --expr + - ～ ！</td><td>从右到左</td></tr><tr><td>乘性</td><td>* /％</td><td>左到右</td></tr><tr><td>加性</td><td>+ -</td><td>左到右</td></tr><tr><td>移位</td><td>&gt;&gt; &gt;&gt;&gt;  &lt;&lt;</td><td>左到右</td></tr><tr><td>关系</td><td>&gt;  &gt;=  &lt;  &lt;=</td><td>左到右</td></tr><tr><td>相等</td><td>== !=</td><td>左到右</td></tr><tr><td>按位与</td><td>＆</td><td>左到右</td></tr><tr><td>按位异或</td><td>^</td><td>左到右</td></tr><tr><td>按位或</td><td>|</td><td>左到右</td></tr><tr><td>逻辑与</td><td>&amp;&amp;</td><td>左到右</td></tr><tr><td>逻辑或</td><td>| |</td><td>左到右</td></tr><tr><td>条件</td><td>？：</td><td>从右到左</td></tr><tr><td>赋值</td><td>= + = - = * = / =％= &gt;&gt; = &lt;&lt; =＆= ^ = | =</td><td>从右到左</td></tr><tr><td>逗号</td><td>，</td><td>左到右</td></tr></tbody></table><h3 id="算术运算的精度">算术运算的精度</h3><p>精度从低到高排序是</p><pre class="line-numbers language-none"><code class="language-none">byte short charint long float double<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li>按照最高精度进行运算。</li><li>如果最高精度低于 <code>int</code>则使用 int 的精度进行运算</li></ol><p>java 允许把不超出 <code>byte</code>、<code>short</code>、<code>char</code>的取值范围的 值赋给对应类型的变量：</p><p>正确</p><pre class="line-numbers language-none"><code class="language-none">byte x&#x3D;(byte)20+&#39;a&#39;;&#x2F;&#x2F;(byte)127<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>错误</p><pre class="line-numbers language-none"><code class="language-none">byte x&#x3D;(byte)40+&#39;a&#39;;&#x2F;&#x2F;(byte)137 已经超出127   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="循环结构">循环结构</h2><h2 id="条件语句">条件语句</h2><h3 id="if…else语句">if…else语句</h3><h3 id="switch-case-语句">switch case 语句</h3><p>switch case 语句有如下规则：</p><ul><li>switch 语句中的变量类型可以是： byte、short、int 或者 char。从 Java SE 7 开始，switch 支持字符串 String 类型了，同时 case 标签必须为字符串常量或字面量。</li><li>switch 语句可以拥有多个 case 语句。每个 case 后面跟一个要比较的值和冒号。</li><li>case 语句中的值的数据类型必须与变量的数据类型相同，而且只能是常量或者字面常量。</li><li>当变量的值与 case 语句的值相等时，那么 case 语句之后的语句开始执行，直到 break 语句出现才会跳出 switch 语句。</li><li>当遇到 break 语句时，switch 语句终止。程序跳转到 switch 语句后面的语句执行。case 语句不必须要包含 break 语句。如果没有 break 语句出现，<strong>程序会继续执行下一条 case 语句，直到出现 break 语句。</strong></li><li>switch 语句可以包含一个 default 分支，该分支一般是 switch 语句的最后一个分支（可以在任何位置，但建议在最后一个）。default 在没有 case 语句的值和变量值相等的时候执行。default 分支不需要 break 语句。</li></ul><p><strong>switch case 执行时，一定会先进行匹配，匹配成功返回当前 case 的值，再根据是否有 break，判断是否继续输出，或是跳出判断。</strong></p><h2 id="String-类">String 类</h2><h3 id="创建字符串">创建字符串</h3><p>创建字符串最简单的方式如下:</p><pre class="line-numbers language-none"><code class="language-none">String str &#x3D; &quot;Runoob&quot;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在代码中遇到字符串常量时，这里的值是 “<strong>Runoob</strong>”，编译器会使用该值创建一个 String 对象。</p><p>和其它对象一样，可以使用关键字和构造方法来创建 String 对象。</p><p>用构造函数创建字符串：</p><pre class="line-numbers language-none"><code class="language-none">String str2&#x3D;new String(&quot;Runoob&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>String 创建的字符串存储在公共池中，而 new 创建的字符串对象在堆上：</p><pre class="line-numbers language-none"><code class="language-none">String s1 &#x3D; &quot;Runoob&quot;;              &#x2F;&#x2F; String 直接创建 String s2 &#x3D; &quot;Runoob&quot;;              &#x2F;&#x2F; String 直接创建 String s3 &#x3D; s1;                    &#x2F;&#x2F; 相同引用 String s4 &#x3D; new String(&quot;Runoob&quot;);   &#x2F;&#x2F; String 对象创建 String s5 &#x3D; new String(&quot;Runoob&quot;);   &#x2F;&#x2F; String 对象创建<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>String 类有 11 种构造方法，这些方法提供不同的参数来初始化字符串，比如提供一个字符数组参数:</p><pre class="line-numbers language-none"><code class="language-none">public class StringDemo&#123;   public static void main(String args[])&#123;      char[] helloArray &#x3D; &#123; &#39;r&#39;, &#39;u&#39;, &#39;n&#39;, &#39;o&#39;, &#39;o&#39;, &#39;b&#39;&#125;;      String helloString &#x3D; new String(helloArray);        System.out.println( helloString );   &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意:<strong>String 类是</strong>不可改变的</strong>（与 c++ 的<code>string</code>不同），所以你一旦创建了 String 对象，那它的值就无法改变了（详看笔记部分解析）。</p><h3 id="字符串长度">字符串长度</h3><pre class="line-numbers language-none"><code class="language-none">public class StringDemo &#123;    public static void main(String args[]) &#123;        String site &#x3D; &quot;www.runoob.com&quot;;        int len &#x3D; site.length();        System.out.println( &quot;菜鸟教程网址长度 : &quot; + len );   &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="连接字符串">连接字符串</h3><p>String 类提供了连接两个字符串的方法：</p><pre class="line-numbers language-none"><code class="language-none">string1.concat(string2);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>返回 string2 连接 string1 的新字符串。也可以对字符串常量使用 concat() 方法，如：</p><pre class="line-numbers language-none"><code class="language-none">&quot;我的名字是 &quot;.concat(&quot;Runoob&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更常用的是使用’+'操作符来连接字符串，如：</p><pre class="line-numbers language-none"><code class="language-none">&quot;Hello,&quot; + &quot; runoob&quot; + &quot;!&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>结果如下:</p><pre class="line-numbers language-none"><code class="language-none">&quot;Hello, runoob!&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="String-方法">String 方法</h3><p>下面是 String 类支持的方法，更多详细，参看 <a href="https://www.runoob.com/manual/jdk11api/java.base/java/lang/String.html">Java String API</a> 文档:</p><table><thead><tr><th>SN(序号)</th><th>方法描述</th></tr></thead><tbody><tr><td>1</td><td><a href="https://www.runoob.com/java/java-string-charat.html">char charAt(int index)</a>  返回指定索引处的 char 值。</td></tr><tr><td>2</td><td><a href="https://www.runoob.com/java/java-string-compareto.html">int compareTo(Object o)</a>  把这个字符串和另一个对象比较。</td></tr><tr><td>3</td><td><a href="https://www.runoob.com/java/java-string-compareto.html">int compareTo(String anotherString)</a>  按字典顺序比较两个字符串。</td></tr><tr><td>4</td><td><a href="https://www.runoob.com/java/java-string-comparetoignorecase.html">int compareToIgnoreCase(String str)</a>  按字典顺序比较两个字符串，不考虑大小写。</td></tr><tr><td>5</td><td><a href="https://www.runoob.com/java/java-string-concat.html">String concat(String str)</a>  将指定字符串连接到此字符串的结尾。</td></tr><tr><td>6</td><td><a href="https://www.runoob.com/java/java-string-contentequals.html">boolean contentEquals(StringBuffer sb)</a>  当且仅当字符串与指定的StringBuffer有相同顺序的字符时候返回真。</td></tr><tr><td>7</td><td>[static String copyValueOf(char<a href="https://www.runoob.com/java/java-string-copyvalueof.html">] data)</a>  返回指定数组中表示该字符序列的 String。</td></tr><tr><td>8</td><td>[static String copyValueOf(char<a href="https://www.runoob.com/java/java-string-copyvalueof.html">] data, int offset, int count)</a>  返回指定数组中表示该字符序列的 String。</td></tr><tr><td>9</td><td><a href="https://www.runoob.com/java/java-string-endswith.html">boolean endsWith(String suffix)</a>  测试此字符串是否以指定的后缀结束。</td></tr><tr><td>10</td><td><a href="https://www.runoob.com/java/java-string-equals.html">boolean equals(Object anObject)</a>  将此字符串与指定的对象比较。</td></tr><tr><td>11</td><td><a href="https://www.runoob.com/java/java-string-equalsignorecase.html">boolean equalsIgnoreCase(String anotherString)</a>  将此 String 与另一个 String 比较，不考虑大小写。</td></tr><tr><td>12</td><td>[byte<a href="https://www.runoob.com/java/java-string-getbytes.html">] getBytes()</a>   使用平台的默认字符集将此 String 编码为 byte 序列，并将结果存储到一个新的 byte 数组中。</td></tr><tr><td>13</td><td>[byte<a href="https://www.runoob.com/java/java-string-getbytes.html">] getBytes(String charsetName)</a>  使用指定的字符集将此 String 编码为 byte 序列，并将结果存储到一个新的 byte 数组中。</td></tr><tr><td>14</td><td>[void getChars(int srcBegin, int srcEnd, char<a href="https://www.runoob.com/java/java-string-getchars.html">] dst, int dstBegin)</a>  将字符从此字符串复制到目标字符数组。</td></tr><tr><td>15</td><td><a href="https://www.runoob.com/java/java-string-hashcode.html">int hashCode()</a>  返回此字符串的哈希码。</td></tr><tr><td>16</td><td><a href="https://www.runoob.com/java/java-string-indexof.html">int indexOf(int ch)</a>  返回指定字符在此字符串中第一次出现处的索引。</td></tr><tr><td>17</td><td><a href="https://www.runoob.com/java/java-string-indexof.html">int indexOf(int ch, int fromIndex)</a>  返回在此字符串中第一次出现指定字符处的索引，从指定的索引开始搜索。</td></tr><tr><td>18</td><td><a href="https://www.runoob.com/java/java-string-indexof.html">int indexOf(String str)</a>   返回指定子字符串在此字符串中第一次出现处的索引。</td></tr><tr><td>19</td><td><a href="https://www.runoob.com/java/java-string-indexof.html">int indexOf(String str, int fromIndex)</a>  返回指定子字符串在此字符串中第一次出现处的索引，从指定的索引开始。</td></tr><tr><td>20</td><td><a href="https://www.runoob.com/java/java-string-intern.html">String intern()</a>   返回字符串对象的规范化表示形式。</td></tr><tr><td>21</td><td><a href="https://www.runoob.com/java/java-string-lastindexof.html">int lastIndexOf(int ch)</a>   返回指定字符在此字符串中最后一次出现处的索引。</td></tr><tr><td>22</td><td><a href="https://www.runoob.com/java/java-string-lastindexof.html">int lastIndexOf(int ch, int fromIndex)</a>  返回指定字符在此字符串中最后一次出现处的索引，从指定的索引处开始进行反向搜索。</td></tr><tr><td>23</td><td><a href="https://www.runoob.com/java/java-string-lastindexof.html">int lastIndexOf(String str)</a>  返回指定子字符串在此字符串中最右边出现处的索引。</td></tr><tr><td>24</td><td><a href="https://www.runoob.com/java/java-string-lastindexof.html">int lastIndexOf(String str, int fromIndex)</a>   返回指定子字符串在此字符串中最后一次出现处的索引，从指定的索引开始反向搜索。</td></tr><tr><td>25</td><td><a href="https://www.runoob.com/java/java-string-length.html">int length()</a>  返回此字符串的长度。</td></tr><tr><td>26</td><td><a href="https://www.runoob.com/java/java-string-matches.html">boolean matches(String regex)</a>  告知此字符串是否匹配给定的正则表达式。</td></tr><tr><td>27</td><td><a href="https://www.runoob.com/java/java-string-regionmatches.html">boolean regionMatches(boolean ignoreCase, int toffset, String other, int ooffset, int len)</a>  测试两个字符串区域是否相等。</td></tr><tr><td>28</td><td><a href="https://www.runoob.com/java/java-string-regionmatches.html">boolean regionMatches(int toffset, String other, int ooffset, int len)</a>  测试两个字符串区域是否相等。</td></tr><tr><td>29</td><td><a href="https://www.runoob.com/java/java-string-replace.html">String replace(char oldChar, char newChar)</a>  返回一个新的字符串，它是通过用 newChar 替换此字符串中出现的所有 oldChar 得到的。</td></tr><tr><td>30</td><td><a href="https://www.runoob.com/java/java-string-replaceall.html">String replaceAll(String regex, String replacement)</a>  使用给定的 replacement 替换此字符串所有匹配给定的正则表达式的子字符串。</td></tr><tr><td>31</td><td><a href="https://www.runoob.com/java/java-string-replacefirst.html">String replaceFirst(String regex, String replacement)</a>   使用给定的 replacement 替换此字符串匹配给定的正则表达式的第一个子字符串。</td></tr><tr><td>32</td><td>[String<a href="https://www.runoob.com/java/java-string-split.html">] split(String regex)</a>  根据给定正则表达式的匹配拆分此字符串。</td></tr><tr><td>33</td><td>[String<a href="https://www.runoob.com/java/java-string-split.html">] split(String regex, int limit)</a>  根据匹配给定的正则表达式来拆分此字符串。</td></tr><tr><td>34</td><td><a href="https://www.runoob.com/java/java-string-startswith.html">boolean startsWith(String prefix)</a>  测试此字符串是否以指定的前缀开始。</td></tr><tr><td>35</td><td><a href="https://www.runoob.com/java/java-string-startswith.html">boolean startsWith(String prefix, int toffset)</a>  测试此字符串从指定索引开始的子字符串是否以指定前缀开始。</td></tr><tr><td>36</td><td><a href="https://www.runoob.com/java/java-string-subsequence.html">CharSequence subSequence(int beginIndex, int endIndex)</a>   返回一个新的字符序列，它是此序列的一个子序列。</td></tr><tr><td>37</td><td><a href="https://www.runoob.com/java/java-string-substring.html">String substring(int beginIndex)</a>  返回一个新的字符串，它是此字符串的一个子字符串。</td></tr><tr><td>38</td><td><a href="https://www.runoob.com/java/java-string-substring.html">String substring(int beginIndex, int endIndex)</a>  返回一个新字符串，它是此字符串的一个子字符串。</td></tr><tr><td>39</td><td>[char<a href="https://www.runoob.com/java/java-string-tochararray.html">] toCharArray()</a>  将此字符串转换为一个新的字符数组。</td></tr><tr><td>40</td><td><a href="https://www.runoob.com/java/java-string-tolowercase.html">String toLowerCase()</a>  使用默认语言环境的规则将此 String 中的所有字符都转换为小写。</td></tr><tr><td>41</td><td><a href="https://www.runoob.com/java/java-string-tolowercase.html">String toLowerCase(Locale locale)</a>   使用给定 Locale 的规则将此 String 中的所有字符都转换为小写。</td></tr><tr><td>42</td><td><a href="https://www.runoob.com/java/java-string-tostring.html">String toString()</a>   返回此对象本身（它已经是一个字符串！）。</td></tr><tr><td>43</td><td><a href="https://www.runoob.com/java/java-string-touppercase.html">String toUpperCase()</a>  使用默认语言环境的规则将此 String 中的所有字符都转换为大写。</td></tr><tr><td>44</td><td><a href="https://www.runoob.com/java/java-string-touppercase.html">String toUpperCase(Locale locale)</a>  使用给定 Locale 的规则将此 String 中的所有字符都转换为大写。</td></tr><tr><td>45</td><td><a href="https://www.runoob.com/java/java-string-trim.html">String trim()</a>  返回字符串的副本，忽略前导空白和尾部空白。</td></tr><tr><td>46</td><td><a href="https://www.runoob.com/java/java-string-valueof.html">static String valueOf(primitive data type x)</a>  返回给定data type类型x参数的字符串表示形式。</td></tr><tr><td>47</td><td><a href="https://www.runoob.com/java/java-string-contains.html">contains(CharSequence chars)</a>  判断是否包含指定的字符系列。</td></tr><tr><td>48</td><td><a href="https://www.runoob.com/java/java-string-isempty.html">isEmpty()</a>  判断字符串是否为空。</td></tr></tbody></table><p>​</p><h2 id="Scanner-类">Scanner 类</h2><p>下面是创建 Scanner 对象的基本语法：</p><pre class="line-numbers language-none"><code class="language-none">Scanner s &#x3D; new Scanner(System.in);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来我们演示一个最简单的数据输入，并通过 Scanner 类的 next() 与 nextLine() 方法获取输入的字符串，在读取前我们一般需要 使用 hasNext 与 hasNextLine 判断是否还有输入的数据：</p><h3 id="使用-next-方法：">使用 next 方法：</h3><pre class="line-numbers language-none"><code class="language-none">import java.util.Scanner;  public class ScannerDemo &#123;    public static void main(String[] args) &#123;        Scanner scan &#x3D; new Scanner(System.in);        &#x2F;&#x2F; 从键盘接收数据         &#x2F;&#x2F; next方式接收字符串        System.out.println(&quot;next方式接收：&quot;);        &#x2F;&#x2F; 判断是否还有输入        if (scan.hasNext()) &#123;            String str1 &#x3D; scan.next();            System.out.println(&quot;输入的数据为：&quot; + str1);        &#125;        scan.close();    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用-nextLine-方法：">使用 nextLine 方法：</h3><pre class="line-numbers language-none"><code class="language-none">import java.util.Scanner; public class ScannerDemo &#123;    public static void main(String[] args) &#123;        Scanner scan &#x3D; new Scanner(System.in);        &#x2F;&#x2F; 从键盘接收数据         &#x2F;&#x2F; nextLine方式接收字符串        System.out.println(&quot;nextLine方式接收：&quot;);        &#x2F;&#x2F; 判断是否还有输入        if (scan.hasNextLine()) &#123;            String str2 &#x3D; scan.nextLine();            System.out.println(&quot;输入的数据为：&quot; + str2);        &#125;        scan.close();    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="next-与-nextLine-区别">next() 与 nextLine() 区别</h3><p>next():</p><ul><li>1、一定要读取到有效字符后才可以结束输入。</li><li>2、对输入有效字符之前遇到的空白，next() 方法会自动将其去掉。</li><li>3、只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。</li><li><strong>next() 不能得到带有空格的字符串。</strong></li></ul><p>nextLine()：</p><ul><li>1、以Enter为结束符,也就是说 nextLine() 方法返回的是输入回车之前的所有字符。</li><li><strong>2、可以获得空白。</strong></li></ul><h2 id="方法（函数）">方法（函数）</h2><p>一般情况下，定义一个方法包含以下语法：</p><pre class="line-numbers language-none"><code class="language-none">修饰符 返回值类型 方法名(参数类型 参数名)&#123;    ...    方法体    ...    return 返回值;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方法包含一个方法头和一个方法体。下面是一个方法的所有部分：</p><ul><li>**修饰符：**修饰符，这是可选的，告诉编译器如何调用该方法。定义了该方法的访问类型。</li><li><strong>返回值类型 ：<strong>方法可能会返回值。returnValueType 是方法返回值的数据类型。有些方法执行所需的操作，但没有返回值。在这种情况下，returnValueType 是关键字</strong>void</strong>。</li><li>**方法名：**是方法的实际名称。方法名和参数表共同构成方法签名。</li><li>**参数类型：**参数像是一个占位符。当方法被调用时，传递值给参数。这个值被称为实参或变量。参数列表是指方法的参数类型、顺序和参数的个数。参数是可选的，方法可以不包含任何参数。</li><li>**方法体：**方法体包含具体的语句，定义该方法的功能。</li></ul><h3 id="通过值传递参数">通过值传递参数</h3><h3 id="方法的重载">方法的重载</h3><p>实例：</p><pre class="line-numbers language-none"><code class="language-none">public static double max(double num1, double num2) &#123;  if (num1 &gt; num2)    return num1;  else    return num2;&#125;public static int max(int num1, int num2) &#123;  if (num1 &gt; num2)    return num1;  else    return num2;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果你调用max方法时传递的是int型参数，则 int型参数的max方法就会被调用；</p><p>如果传递的是double型参数，则double类型的max方法体会被调用，这叫做方法重载；</p><p>就是说一个类的两个方法<strong>拥有相同的名字，但是有不同的参数列表</strong>。</p><h3 id="构造方法">构造方法</h3><p>不管你是否自定义构造方法，所有的类都有构造方法，因为 Java 自动提供了一个默认构造方法，默认构造方法的访问修饰符和类的访问修饰符相同(类为 public，构造函数也为 public；类改为 protected，构造函数也改为 protected)。</p><p>实例</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 一个简单的构造函数class MyClass &#123;  int x;   &#x2F;&#x2F; 以下是构造函数  MyClass() &#123;    x &#x3D; 10;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：在你使用自定义构造方法后，Java 自带的构造方法就不可用</p><h3 id="可变参数">可变参数</h3><p>JDK 1.5 开始，Java支持传递同类型的可变参数给一个方法。</p><p>方法的可变参数的声明如下所示：</p><pre class="line-numbers language-none"><code class="language-none">typeName... parameterName<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在方法声明中，在指定参数类型后加一个省略号(…) 。</p><p>一个方法中只能指定一个可变参数，它必须是方法的最后一个参数。任何普通的参数必须在它之前声明。</p><p>实例：</p><pre class="line-numbers language-none"><code class="language-none">public class VarargsDemo &#123;    public static void main(String[] args) &#123;        &#x2F;&#x2F; 调用可变参数的方法        printMax(34, 3, 3, 2, 56.5);        printMax(new double[]&#123;1, 2, 3&#125;);    &#125;     public static void printMax( double... numbers) &#123;        if (numbers.length &#x3D;&#x3D; 0) &#123;            System.out.println(&quot;No argument passed&quot;);            return;        &#125;         double result &#x3D; numbers[0];         for (int i &#x3D; 1; i &lt;  numbers.length; i++)&#123;            if (numbers[i] &gt;  result) &#123;                result &#x3D; numbers[i];            &#125;        &#125;        System.out.println(&quot;The max value is &quot; + result);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="引用类型传值">引用类型传值</h3><p>对应一个引用型变量 A 传值，会生成一个引用型参数 B，修改引用型参数 B 对应实体，其对应的 A 所对应实体也会改变。</p><p>但是如果是修改 B 对 A 无影响</p><p>实例</p><pre class="line-numbers language-none"><code class="language-none">public class Solution &#123;    static void Test(int[] b) &#123;        b &#x3D; null;    &#125;    public static void main(String[] args) &#123;        int[] a &#x3D; &#123;1, 2, 3&#125;;        System.out.println(a);        Test(a);        System.out.println(a);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="对象和类">对象和类</h2><h3 id="定义-2">定义</h3><ul><li>​<strong>对象</strong>：对象是类的一个<strong>实例</strong>（<strong>对象不是找个女朋友</strong>），有状态和行为。可以理解为是套用模板的具体实物。</li><li>​<strong>类</strong>：类是一个模板，它描述一类对象的行为和状态。可以理解为是一种模板。</li></ul><p><img src="https://www.runoob.com/wp-content/uploads/2013/12/20210105-java-object-1.png" alt="img"></p><p>一个类可以包含以下类型变量：</p><ul><li><p>​<strong>局部变量</strong>：在方法、构造方法或者语句块中定义的变量被称为局部变量。变量声明和初始化都是在方法中，<strong>方法结束后，变量就会自动销毁。</strong></p></li><li><p>​<strong>成员变量</strong>：成员变量是定义在类中，方法体之外的变量。<strong>这种变量在创建对象的时候实例化</strong>。<strong>成员变量可以被类中方法、构造方法和特定类的语句块访问。</strong></p></li><li><p>​<strong>类变量</strong>：类变量也声明<strong>在类中，方法体之外，但必须声明为 static 类型。</strong></p><pre class="line-numbers language-none"><code class="language-none">public class Test&#123;static int num;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="构造方法-2">构造方法</h3><p>每个类<strong>都有</strong>构造方法。如果没有显式地为类定义构造方法，Java 编译器将会为该类提供一个默认构造方法。</p><p>在创建一个对象的时候，至少要调用一个构造方法。构造方法的名称必须与类同名，一个类可以有多个构造方法。</p><p>下面是一个构造方法示例：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Puppy</span><span class="token punctuation">&#123;</span>    <span class="token comment">//在使用自构造函数后，原本的空构造函数会消失，因此有需要的话需要再次定义空构造函数</span>    <span class="token keyword">public</span> <span class="token class-name">Puppy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token class-name">Puppy</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 这个构造器仅有一个参数：name</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建对象">创建对象</h3><p>对象是根据类创建的。在Java中，使用关键字 new 来创建一个新的对象。创建对象需要以下三步：</p><ul><li>​<strong>声明</strong>：声明一个对象，包括对象名称和对象类型。</li><li>​<strong>实例化</strong>：使用关键字 new 来创建一个对象。</li><li>​<strong>初始化</strong>：使用 new 创建对象时，会调用构造方法初始化对象。</li></ul><p>下面是一个创建对象的例子：</p><pre class="line-numbers language-none"><code class="language-none">public class Puppy&#123;   public Puppy(String name)&#123;      &#x2F;&#x2F;这个构造器仅有一个参数：name      System.out.println(&quot;小狗的名字是 : &quot; + name );    &#125;   public static void main(String[] args)&#123;      &#x2F;&#x2F; 下面的语句将创建一个Puppy对象      Puppy myPuppy &#x3D; new Puppy( &quot;tommy&quot; );   &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译并运行上面的程序，会打印出下面的结果：</p><pre class="line-numbers language-none"><code class="language-none">小狗的名字是 : tommy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="访问实例变量和方法">访问实例变量和方法</h3><p>通过已创建的对象来访问成员变量和成员方法，如下所示：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;* 实例化对象 *&#x2F;Object referenceVariable &#x3D; new Constructor();&#x2F;&#x2F;Object 是 java.lang 中的一个包，是所有没有明确父类的类的父类&#x2F;* 访问类中的变量 *&#x2F;referenceVariable.variableName;&#x2F;* 访问类中的方法 *&#x2F;referenceVariable.methodName();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="实例-6">实例</h3><p>下面的例子展示如何访问实例变量和调用成员方法：</p><h3 id="源文件声明规则">源文件声明规则</h3><ul><li>​一个源文件中只能有一个 public 类</li><li>​一个源文件可以有多个非 public 类</li><li>​源文件的名称应该和 public 类的类名保持一致。例如：源文件中 public 类的类名是 Employee，那么源文件应该命名为Employee.java。</li><li>​如果一个类定义在某个包中，那么 package 语句应该在源文件的首行。</li><li>​如果源文件包含 import 语句，那么应该放在 package 语句和类定义之间。如果没有 package 语句，那么 import 语句应该在源文件中最前面。</li><li>​import 语句和 package 语句对源文件中定义的所有类都有效。在同一源文件中，不能给不同的类不同的包声明。</li></ul><h2 id="抽象类">抽象类</h2><p>抽象类除了不能实例化对象之外，类的其它功能依然存在，成员变量、成员方法和构造方法的访问方式和普通类一样。</p><p>由于抽象类不能实例化对象，所以<strong>抽象类必须被继承</strong>，才能被使用。</p><p>在 Java 中抽象类表示的是一种继承关系，<strong>一个类只能继承一个抽象类</strong>，而<strong>一个类却可以实现多个接口</strong>。</p><p>示例：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//抽象类</span><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span><span class="token punctuation">&#123;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token keyword">int</span> number<span class="token punctuation">;</span>   <span class="token keyword">public</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> address<span class="token punctuation">,</span> <span class="token keyword">int</span> number<span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Constructing an Employee"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>address <span class="token operator">=</span> address<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>number <span class="token operator">=</span> number<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">computePay</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Inside Employee computePay"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token number">0.0</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mailCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Mailing a check to "</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name       <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> name <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> address <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> number<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> name<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> address<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token class-name">String</span> newAddress<span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>      address <span class="token operator">=</span> newAddress<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>     <span class="token keyword">return</span> number<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//继承</span><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span><span class="token punctuation">&#123;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token keyword">int</span> number<span class="token punctuation">;</span>   <span class="token keyword">public</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> address<span class="token punctuation">,</span> <span class="token keyword">int</span> number<span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Constructing an Employee"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>address <span class="token operator">=</span> address<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>number <span class="token operator">=</span> number<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">computePay</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Inside Employee computePay"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token number">0.0</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mailCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Mailing a check to "</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name       <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> name <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> address <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> number<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> name<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> address<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token class-name">String</span> newAddress<span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>      address <span class="token operator">=</span> newAddress<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>     <span class="token keyword">return</span> number<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="抽象方法">抽象方法</h3><p>如果你想设计这样一个类，该类包含一个特别的成员方法，该方法的具体实现由它的子类确定，那么你可以在父类中声明该方法为抽象方法。</p><p>Abstract 关键字同样可以用来声明抽象方法，抽象方法只包含一个方法名，而没有方法体。</p><p>抽象方法没有定义，方法名后面直接跟一个分号，而不是花括号。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span><span class="token punctuation">&#123;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token keyword">int</span> number<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">double</span> <span class="token function">computePay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//其余代码</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>声明抽象方法会造成以下<strong>两个结果</strong>：</p><ul><li>​如果一个类包<strong>含抽象方法</strong>，那么该类必须是抽象类。</li><li>​任何<strong>子类必须重写父类的抽象方法</strong>，<strong>或</strong>者<strong>声明自身为抽象类</strong>。</li></ul><p>即无论有几重子类，最后必须有一个子类实现抽象方法</p><h3 id="抽象类总结规定">抽象类总结规定</h3><ul><li>抽象类不能被实例化(初学者很容易犯的错)，如果被实例化，就会报错，编译无法通过。只有抽象类的非抽象子类可以创建对象。</li><li>抽象类中不一定包含抽象方法，但是有抽象方法的类必定是抽象类。</li><li>抽象类中的抽象方法只是声明，不包含方法体，就是不给出方法的具体实现也就是方法的具体功能。</li><li>构造方法，类方法（用 static 修饰的方法）不能声明为抽象方法。</li><li>抽象类的子类必须给出抽象类中的抽象方法的具体实现，除非该子类也是抽象类。</li></ul><h2 id="接口-2">接口</h2><blockquote><p>关于接口的知识，根据版本的不同有所变化</p></blockquote><p>一个抽象类型，是<strong>抽象方法的集合</strong>，接口通常以<code>interface</code>来声明。一个类通过继承接口的方式，从而来继承接口的抽象方法。</p><h3 id="接口与类相似点：">接口与类相似点：</h3><ul><li>​一个接口可以有多个方法。</li><li>​接口文件保存在 .java 结尾的文件中，文件名使用接口名。</li><li>​接口的字节码文件保存在 .class 结尾的文件中。</li><li>​接口相应的字节码文件必须在与包名称相匹配的目录结构中。</li></ul><h3 id="接口与类的区别：">接口与类的区别：</h3><ul><li>​接口<strong>不能用于实例化对象</strong>。</li><li>​接口<strong>没有构造方法</strong>。</li><li>​接口中<strong>所有的方法必须是抽象方法</strong>，Java 8 之后 接口中可以使用 default 关键字修饰的非抽象方法。</li><li>​接口不能包含成员变量，除了 static 和 final 变量。</li><li>​接口不是被类继承了，而是要被类实现。</li><li>​接口支持多继承。</li></ul><h3 id="接口特性">接口特性</h3><ul><li>接口中每一个方法也是隐式抽象的,接口中的方法会被隐式的指定为 <strong>public abstract</strong>（只能是  public abstract，其他修饰符都会报错）。</li><li>接口中可以含有变量，但是接口中的变量会被隐式的指定为 <strong>public static final</strong> 变量（并且只能是 public，用 private 修饰会报编译错误）。</li><li>接口中的方法是不能在接口中实现的，只能由实现接口的类来实现接口中的方法。</li></ul><h3 id="抽象类和接口的区别">抽象类和接口的区别</h3><ol><li><p>抽象类中的方法可以有方法体，就是能实现方法的具体功能，但是接口中的方法不行。</p></li><li><p>抽象类中的成员变量可以是各种类型的，而接口中的成员变量只能是 <strong>public static final</strong> 类型的。</p></li><li><p>接口中不能含有静态代码块以及静态方法(用 static 修饰的方法)，而抽象类是可以有静态代码块和静态方法。</p></li><li><p>一个类只能继承一个抽象类，而一个类却可以实现多个接口。</p></li></ol><h2 id="接口的声明">接口的声明</h2><p>接口的声明语法格式如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">[</span>可见度<span class="token punctuation">]</span> <span class="token keyword">interface</span> 接口名称 <span class="token punctuation">[</span><span class="token keyword">extends</span> 其他的接口名<span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 声明变量        // 抽象方法 &#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Interface关键字用来声明一个接口。下面是接口声明的一个简单例子。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token comment">//引入包</span> <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">NameOfInterface</span><span class="token punctuation">&#123;</span>   <span class="token comment">//任何类型 final, static 字段</span>   <span class="token comment">//抽象方法</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接口有以下特性：</p><ul><li>​接口是隐式抽象的，当声明一个接口的时候，不必使用<strong>abstract</strong>关键字。</li><li>​接口中每一个方法也是隐式抽象的，声明时同样不需要<strong>abstract</strong>关键字。</li><li>​接口中的方法都是公有的。</li></ul><h2 id="接口的实现">接口的实现</h2><p>当类实现接口的时候，类要实现接口中所有的方法。否则，类必须声明为抽象的类。</p><p>类使用implements关键字实现接口。在类声明中，Implements关键字放在class声明后面。</p><p>实现一个接口的语法，可以使用这个公式：</p><h2 id="接口语法：">接口语法：</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">implements</span> 接口名称<span class="token punctuation">[</span><span class="token punctuation">,</span> 其他接口名称<span class="token punctuation">,</span> 其他接口名称<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="实例-7">实例</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/* 文件名 : MammalInt.java */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MammalInt</span> <span class="token keyword">implements</span> <span class="token class-name">Animal</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Mammal eats"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">travel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Mammal travels"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">noOfLegs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">MammalInt</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MammalInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      m<span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      m<span class="token punctuation">.</span><span class="token function">travel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上实例编译运行结果如下:</p><pre class="line-numbers language-none"><code class="language-none">Mammal eatsMammal travels<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>重写接口中声明的方法时，需要注意以下规则：</p><ul><li>​类在实现接口的方法时，不能抛出强制性异常，只能在接口中，或者继承接口的抽象类中抛出该强制性异常。</li><li>​类在重写方法时要保持一致的方法名，并且应该保持相同或者相兼容的返回值类型。</li><li>​如果实现接口的类是抽象类，那么就没必要实现该接口的方法。</li></ul><p>在实现接口的时候，也要注意一些规则：</p><ul><li>​一个类可以同时实现多个接口。</li><li>​一个类只能继承一个类，但是能实现多个接口。</li><li>​一个接口能继承另一个接口，这和类之间的继承比较相似。</li></ul><hr><h3 id="接口的继承">接口的继承</h3><p>一个接口能继承另一个接口，和类之间的继承方式比较相似。接口的继承使用extends关键字，子接口继承父接口的方法。</p><p>下面的Sports接口被Hockey和Football接口继承：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 文件名: Sports.java</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Sports</span><span class="token punctuation">&#123;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHomeTeam</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVisitingTeam</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token comment">// 文件名: Football.java</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Football</span> <span class="token keyword">extends</span> <span class="token class-name">Sports</span><span class="token punctuation">&#123;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">homeTeamScored</span><span class="token punctuation">(</span><span class="token keyword">int</span> points<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">visitingTeamScored</span><span class="token punctuation">(</span><span class="token keyword">int</span> points<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">endOfQuarter</span><span class="token punctuation">(</span><span class="token keyword">int</span> quarter<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token comment">// 文件名: Hockey.java</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Hockey</span> <span class="token keyword">extends</span> <span class="token class-name">Sports</span><span class="token punctuation">&#123;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">homeGoalScored</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">visitingGoalScored</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">endOfPeriod</span><span class="token punctuation">(</span><span class="token keyword">int</span> period<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">overtimePeriod</span><span class="token punctuation">(</span><span class="token keyword">int</span> ot<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Hockey接口自己声明了四个方法，从Sports接口继承了两个方法，这样，实现Hockey接口的类需要实现六个方法。</p><p>相似的，实现Football接口的类需要实现五个方法，其中两个来自于Sports接口。</p><hr><h3 id="接口的多继承">接口的多继承</h3><p>在Java中，类的多继承是不合法，但接口允许多继承。</p><p>在接口的多继承中extends关键字只需要使用一次，在其后跟着继承接口。 如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Hockey</span> <span class="token keyword">extends</span> <span class="token class-name">Sports</span><span class="token punctuation">,</span> <span class="token class-name">Event</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上的程序片段是合法定义的子接口，与类不同的是，接口允许多继承，而 Sports及  Event 可以定义或是继承相同的方法</p><hr><h3 id="标记接口">标记接口</h3><p>最常用的继承接口是没有包含任何方法的接口。</p><p>标记接口是没有任何方法和属性的接口.它仅仅表明它的类属于一个特定的类型,供其他代码来测试允许做一些事情。</p><p>标记接口作用：简单形象的说就是给某个对象打个标（盖个戳），使对象拥有某个或某些特权。</p><p>例如：java.awt.event 包中的 MouseListener 接口继承的 java.util.EventListener 接口定义如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">java<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">EventListener</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>没有任何方法的接口被称为标记接口。标记接口主要用于以下两种目的：</p><ul><li><p>建立一个公共的父接口：</p><p>正如EventListener接口，这是由几十个其他接口扩展的Java API，你可以使用一个标记接口来建立一组接口的父接口。例如：当一个接口继承了EventListener接口，Java虚拟机(JVM)就知道该接口将要被用于一个事件的代理方案。</p></li><li><p>向一个类添加数据类型：</p><p>这种情况是标记接口最初的目的，实现标记接口的类不需要定义任何接口方法(因为标记接口根本就没有方法)，但是该类通过多态性变成一个接口类型。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="/518e617c.html"/>
      <url>/518e617c.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令</title>
      <link href="/82734d8.html"/>
      <url>/82734d8.html</url>
      
        <content type="html"><![CDATA[<p>本文根据博主学习进度更新</p><h2 id="工作目录切换命令">工作目录切换命令</h2><ol><li><p><strong>pwd</strong></p><p><strong>pwd</strong> 命令用于显示用户当前所处的工作目录，格式为**<code>pwd [选项]</code>**。</p></li><li><p><strong>cd</strong></p><p>cd 命令用于切换工作路径，格式为<code>cd [目录名称]</code>。</p><p>常用命令：</p><table><thead><tr><th>cd …</th><th>返回上级目录</th></tr></thead><tbody><tr><td><strong>cd</strong> -</td><td><strong>返回上次访问目录</strong></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table></li><li><p><strong>ls</strong></p><p><strong>ls</strong> 命令用于显示目录中的文件信息，格式为**<code>ls [选项] [文件] </code>**。</p><table><thead><tr><th><strong>ls</strong></th><th><strong>仅显示文件名和文件夹名（不含隐藏文件）</strong></th></tr></thead><tbody><tr><td><strong>ls -a</strong></td><td><strong>看到全部文件（含隐藏文件）</strong></td></tr><tr><td><strong>ls -l</strong></td><td><strong>查看文件的属性、大小等详细信息</strong></td></tr><tr><td><strong>ls -al</strong></td><td><strong>查看当前目录中的所有文件并输出这些文件的属性信息</strong></td></tr></tbody></table></li><li></li></ol><h2 id="文本文件编辑命令">文本文件编辑命令</h2><ol><li><p>cat</p><p><strong>cat</strong> 命令用于查看纯文本文件（<strong>内容较少的</strong>），格式为**<code>cat [选项] [文件]</code>**。如果需要显示行号，可在末尾加 <code>-n</code></p></li><li><p>more</p><p>more 命令用于查看纯文本文件（内容较多的），格式为<code>more [选项]文件</code>。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刻录光盘</title>
      <link href="/ff678a2a.html"/>
      <url>/ff678a2a.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目链接"><a href="https://www.luogu.com.cn/problem/P2835">题目链接</a></h2><h2 id="题目分析">题目分析</h2><p>裸的<a href="https://anubis.cafe/48720ec7.html">缩点</a>，不理解请学习完缩点再做这题。QAQ</p><h2 id="代码-2">代码</h2><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;iostream&gt;#include&lt;vector&gt;using namespace std;const int maxn&#x3D;1e6+7;&#x2F;&#x2F;链式前向星struct Edge&#123;int v, next;&#125; E[4 * maxn];int Head[maxn], num_edge;void Add(int u, int v)&#123;E[++num_edge].next&#x3D;Head[u];E[num_edge].v&#x3D;v;Head[u]&#x3D;num_edge;&#125;&#x2F;&#x2F;缩点vector &lt;int&gt; S;int DFN[maxn],LOW[maxn],idx[maxn];bool vis[maxn],cd[maxn];int N,cnt,num;&#x2F;&#x2F;cnt代表强连通分量个数,num表示DFN顺序void Tarjan(int x)&#x2F;&#x2F;求缩点&#123;DFN[x]&#x3D;LOW[x]&#x3D;++num;S.push_back(x);vis[x]&#x3D;true;for(int i&#x3D;Head[x]; i; i&#x3D;E[i].next)&#123;int v&#x3D;E[i].v;if(DFN[v]&#x3D;&#x3D;0)&#x2F;&#x2F;未搜索过&#123;Tarjan(v);LOW[x]&#x3D;min(LOW[x],LOW[v]);&#125;else if(vis[v])&#x2F;&#x2F;节点v在栈中&#123;LOW[x]&#x3D;min(LOW[x],LOW[v]);&#125;&#125;if(LOW[x]&#x3D;&#x3D;DFN[x])&#123;++cnt;while(S.back()!&#x3D;x)&#123;vis[S.back()]&#x3D;false;&#x2F;&#x2F;出栈idx[S.back()]&#x3D;cnt;S.pop_back();&#125;vis[S.back()]&#x3D;false;&#x2F;&#x2F;出栈idx[S.back()]&#x3D;cnt;S.pop_back();&#125;&#125;int main()&#123;cin &gt;&gt; N;for (int i &#x3D; 1; i &lt;&#x3D; N; ++i)&#123;int v;while (1)&#123;cin &gt;&gt; v;if (v &#x3D;&#x3D; 0) break;Add(i, v);&#125;&#125;for(int i&#x3D;1; i&lt;&#x3D;N; ++i)&#x2F;&#x2F;需要对每个点求强连通分量，当然已经搜索过的点就不用了&#123;if(DFN[i]) continue;Tarjan(i);&#125;for(int i&#x3D;1; i&lt;&#x3D;cnt; ++i) cd[i]&#x3D;true; &#x2F;&#x2F;表示第i组强连通分量需要光盘for(int u&#x3D;1; u&lt;&#x3D;N; ++u)&#123;for(int i&#x3D;Head[u]; i; i&#x3D;E[i].next)&#123;int v&#x3D;E[i].v;if(idx[v]!&#x3D;idx[u]) cd[idx[v]]&#x3D;false;&#x2F;&#x2F;idx[u]能给idx[v]光盘，所以idx[v]不需要光盘了&#125;&#125;int ans&#x3D;0;for(int i&#x3D;1; i&lt;&#x3D;cnt; ++i) if(cd[i]) ans++; &#x2F;&#x2F;统计需要的光盘数量cout&lt;&lt;ans;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tarjan </tag>
            
            <tag> 强连通分量 </tag>
            
            <tag> 图论 </tag>
            
            <tag> 缩点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DAG</title>
      <link href="/89085679.html"/>
      <url>/89085679.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Tarjan算法</title>
      <link href="/2fe8c294.html"/>
      <url>/2fe8c294.html</url>
      
        <content type="html"><![CDATA[<h2 id="前置知识-3">前置知识</h2><h3 id="强连通分量（SCC）-2"><a href="https://anubis.cafe/4b4a3d7.html">强连通分量（SCC）</a></h3><h2 id="算法原理">算法原理</h2><p>通过 DFS 把该有向图当中的一个子图作为一颗树来进行搜索，把每一个<strong>没有被搜索过</strong>的点入栈，回溯时判断栈顶到栈底的节点是不是一个强连通分量。</p><h2 id="时间复杂度：O-N-M">时间复杂度：O(N+M)</h2><h2 id="算法演示">算法演示</h2><ul><li><p>DFN[i]：DFS 的顺序</p></li><li><p>LOW[i]：表示 i 通过<strong>非父子关系</strong>所能够回到的节点中最小的 LOW[i]</p><blockquote><p>判断方法：参见算法图解第 3 步</p></blockquote></li><li><p>idx[i]：表示强连通分量的序号（可以用染色来理解）</p></li><li><p>当遍历到的节点满足<code> DFN[i]=LOW[i]</code>时，从栈底取出，直到取完 i 节点为止，取出节点组成强连通分量</p></li></ul><h3 id="算法图解">算法图解</h3><ol><li><p>从节点1 开始 DFS，把遍历到的节点加入栈中。搜索到节点 u=6时，无路可走，开始回退。此时，<strong>DFN[6]=LOW[6]</strong>，找到了一个强连通分量，{6} 为一个强连通分量。</p><blockquote><p>此时每一个新入栈的节点，其下一个节点均不存在于栈中，则 <strong>LOW[i]=DFN[i]</strong></p></blockquote><p><img src="https://s2.loli.net/2022/06/28/DtPwhpMW6Qv7fr9.png" alt=""></p></li><li><p>此时，<strong>DFN[5]=LOW[5]</strong>，找到了一个强连通分量，{5} 为一个强连通分量。</p><p><img src="https://s2.loli.net/2022/06/28/sqJbBitypWLFjXH.png" alt=""></p></li><li><p>此时节点 3 还有剩余的边可以进行搜索，搜索到节点 1 时发现，<strong>节点 1 已经在栈中</strong>，则意味着 {1,3,4} 构成一个回路，即 {1,3,4} 为一个强连通分量，即<code> LOW[1]=LOW[3]=LOW[4]=1</code>。</p><blockquote><p>算法的要求是对未搜索过的点进行入栈，由于此时节点 6 已经搜索过，则跳过 4-&gt;6这条边</p></blockquote><p><img src="https://s2.loli.net/2022/06/28/rwKRkNeblZazs8G.png" alt=""></p></li><li><p>继续回到节点 1，最后访问节点 2。访问边 2-&gt;4，结点 4 还在栈中，所以 LOW[2]=DFN[4]=5，返回1后，发现 DFN[1]=LOW[1]，把栈中节点全部取出，组成一个连通分量{1,3,4,2}。<img src="https://img2018.cnblogs.com/blog/1463706/201909/1463706-20190926183944133-878030512.png" alt=""></p></li></ol><h2 id="代码-3">代码</h2><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;cstdio&gt;#include&lt;iostream&gt;#include&lt;algorithm&gt;#include&lt;cstring&gt;#include&lt;vector&gt;using namespace std;struct Edge&#123;int v,next;&#125; E[8010];int T[3010];int Head[3010],idx[3010],num,num_Edge,depth;int N,M,P,Ans&#x3D;0;int in[3010],V[3010];&#x2F;&#x2F;vector&lt;int&gt;Path,Root;vector&lt;int&gt;S;void Add_Edge(int from,int v)&#123;++num_Edge;E[num_Edge].next&#x3D;Head[from];E[num_Edge].v&#x3D;v;Head[from]&#x3D;num_Edge;&#125;int DFN[3010],LOW[3010];bool vis[3010];void Tarjan(int x)&#123;DFN[x]&#x3D;LOW[x]&#x3D;++num;S.push_back(x);&#x2F;&#x2F;此节点未被搜索过，入栈vis[x]&#x3D;true;&#x2F;&#x2F;此节点在栈中for(int i&#x3D;Head[x]; i; i&#x3D;E[i].next)&#123;int v&#x3D;E[i].v;if(DFN[v]&#x3D;&#x3D;-1)&#x2F;&#x2F;下一个节点未搜索&#123;Tarjan(v);LOW[x]&#x3D;min(LOW[v],LOW[x]);&#x2F;&#x2F;在不通过父子关系 回溯的情况下，所能取到的最小LOW&#125;else if(vis[v])&#123;LOW[x]&#x3D;min(LOW[v],LOW[x]);&#x2F;&#x2F;在不通过父子关系 回溯的情况下，所能取到的最小LOW&#125;&#125;if(LOW[x]&#x3D;&#x3D;DFN[x])&#x2F;&#x2F;构成强连通分量&#123;++depth;&#x2F;&#x2F;第几个强连通分量while(S.back()!&#x3D;x)&#123;idx[S.back()]&#x3D;depth;vis[S.back()]&#x3D;false;&#x2F;&#x2F;出栈V[depth]&#x3D;min(V[depth],T[S.back()]);S.pop_back();&#125;idx[S.back()]&#x3D;depth;vis[S.back()]&#x3D;false;&#x2F;&#x2F;出栈V[depth]&#x3D;min(V[depth],T[S.back()]);S.pop_back();&#125;&#125;int main(void)&#123;memset(idx,-1,sizeof(idx));memset(DFN,-1,sizeof(DFN));scanf(&quot;%d&quot;,&amp;N);scanf(&quot;%d&quot;,&amp;P);for(int i&#x3D;1; i&lt;&#x3D;N; ++i) V[i]&#x3D;1e9+7,T[i]&#x3D;1e9+7;for(int i&#x3D;1; i&lt;&#x3D;P; ++i)&#123;int t;scanf(&quot;%d&quot;,&amp;t );scanf(&quot;%d&quot;,&amp;T[t]);&#125;scanf(&quot;%d&quot;,&amp;M);for(int i&#x3D;1; i&lt;&#x3D;M; ++i)&#123;int u,v;scanf(&quot;%d%d&quot;,&amp;u,&amp;v);Add_Edge(u,v);&#125;for(int i&#x3D;1; i&lt;&#x3D;N; ++i)if( DFN[i]&#x3D;&#x3D;-1&amp;&amp;T[i]!&#x3D;1e9+7) Tarjan(i);&#x2F;&#x2F;Gabow(i);for(int i&#x3D;1; i&lt;&#x3D;N; ++i)&#123;if(DFN[i]&#x3D;&#x3D;-1)&#123;printf(&quot;NO\n%d&quot;,i);return 0;&#125;&#125;for(int i&#x3D;1; i&lt;&#x3D;depth; ++i) in[i]&#x3D;true;for(int i&#x3D;1; i&lt;&#x3D;N; ++i)for(int j&#x3D;Head[i]; j; j&#x3D;E[j].next)if(idx[i]!&#x3D;idx[E[j].v]) in[idx[E[j].v]]&#x3D;false;for(int i&#x3D;1; i&lt;&#x3D;depth; ++i)if(in[i]&amp;&amp;V[i]!&#x3D;1e9+7) Ans+&#x3D;V[i];printf(&quot;YES\n%d&quot;,Ans);return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="应用-2">应用</h2><h3 id="缩点"><a href="https://anubis.cafe/48720ec7.html">缩点</a></h3><h3 id="LCA">LCA</h3>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>缩点</title>
      <link href="/48720ec7.html"/>
      <url>/48720ec7.html</url>
      
        <content type="html"><![CDATA[<h2 id="前置知识-2">前置知识</h2><h3 id="强连通分量（SCC）"><a href="https://anubis.cafe/4b4a3d7.html">强连通分量（SCC）</a></h3><h3 id="Tarjan算法"><a href="https://anubis.cafe/2fe8c294.html">Tarjan算法</a></h3><h3 id="Gabow算法">Gabow算法</h3><h2 id="定义">定义</h2><p>简单来理解，就算把强连通分量当成一个点，从而实现简化图的目的。</p><p><img src="https://s2.loli.net/2022/06/28/HiAkBcrOUSptoD1.png" alt=""></p><p>缩点后的图要保留<strong>所有</strong>不在分量里的边，而且缩点后的图是一个有向无环图(DAG)，也就是说可以进行拓扑排序。</p><h2 id="应用">应用</h2><h3 id="标准问法">标准问法</h3><p>给你一张有向图，每个点都有一个点权（<strong>不是边权了！！！</strong>），且每一个点都可以经过任意多次，但是<strong>点权只能加一次</strong>，求这张图的<strong>最大权值</strong></p><h3 id="问题解析">问题解析</h3><p>此处不能使用最短路进行修改求最长路（<strong>会进入死循环！！！</strong>）</p><p>正解：缩点得出DAG+动态规划求最大值</p><h2 id="配套题目">配套题目</h2><h3 id="刻录光盘"><a href="https://www.luogu.org/problem/P2835">刻录光盘</a></h3><h3 id="间谍网络"><a href="https://www.luogu.org/problem/P1262">间谍网络</a></h3><h3 id="受欢迎的牛"><a href="https://www.luogu.com.cn/problem/P2341">受欢迎的牛</a></h3><h3 id="校园网Network-of-Schools"><a href="https://www.luogu.com.cn/problem/P2746">校园网Network of Schools</a></h3><h3 id="校园网络"><a href="https://www.luogu.com.cn/problem/P2812">校园网络</a></h3><h3 id="有机化学之神偶尔会做作弊"><a href="https://www.luogu.com.cn/problem/P2783">有机化学之神偶尔会做作弊</a></h3><h3 id="最大半连通子图"><a href="https://www.luogu.com.cn/problem/P2272">最大半连通子图</a></h3><h3 id="抢掠计划"><a href="https://www.luogu.com.cn/problem/P3627">抢掠计划</a></h3><h3 id="稳定婚姻"><a href="https://www.luogu.com.cn/problem/P1407">稳定婚姻</a></h3><h3 id="所驼门王的宝藏"><a href="https://www.luogu.com.cn/problem/P2403">所驼门王的宝藏</a></h3><h3 id="连通数"><a href="https://www.luogu.com.cn/problem/P4306">连通数</a></h3>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>强连通分量（SCC）</title>
      <link href="/4b4a3d7.html"/>
      <url>/4b4a3d7.html</url>
      
        <content type="html"><![CDATA[<h2 id="强联通">强联通</h2><blockquote><p>强连通（Strongly Connected）是指一个有向图（Directed Graph）中任意两点 v1、v2 间存在 v1 到 v2 的路径（path）及 v2 到 v1 的路径。</p></blockquote><h2 id="强连通图">强连通图</h2><p>如果 在一个<strong>有向图</strong>G中，<strong>任意两个点</strong>都强连通，我们就叫这个图，强连通图。</p><h2 id="强连通分量">强连通分量</h2><p>在一个有向图G中，有一个<strong>子图</strong>，这个子图是一个强连通图，我们就叫这个子图叫做<strong>强连通分量</strong>。</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206281908796.png" alt="如图[1,2,3]构成的子图是强连通分量"></p><h2 id="算法">算法</h2><h3 id="Tarjan"><a href="https://anubis.cafe/48720ec7.html">Tarjan</a></h3><h2 id="应用-3">应用</h2><h3 id="缩点-2"><a href="https://anubis.cafe/48720ec7.html">缩点</a></h3>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>microsoft store打开缓慢解决方法</title>
      <link href="/5e40ac1a.html"/>
      <url>/5e40ac1a.html</url>
      
        <content type="html"><![CDATA[<p>本文转载自：<a href="https://zhuanlan.zhihu.com/p/469585538">Windows 应用商店(Microsoft store)打不开？100% 解决方法-兼容 Win10、Win11</a></p><h2 id="问题情况">问题情况</h2><p>Microsoft store 页面无法打开，提示需要联网或刷新。大多数文章都将原因归咎于系统更新或 DNS 设置，但真实原因是 <strong>IE 设置太旧了</strong>。（ IE 已经入土了，请大家不要再鞭尸了 ）</p><p><img src="https://pic4.zhimg.com/v2-4cf6e83984ecea2841054923b6dd4d37_b.jpg" alt=""></p><p>特别是国内的网银用户，<strong>每次登录建行，U 盾都会修改 Internet 选项</strong>，导致 TLS 版本过低，无法连接应用商店。</p><h2 id="解决方法-3">解决方法</h2><ol><li>开始菜单-搜索栏，搜索「Internet 选项」。</li></ol><p><img src="https://s2.loli.net/2022/06/26/EKIDQgns9flW7SF.jpg" alt=""></p><ol start="2"><li>进入 Internet 高级设置。</li></ol><p><img src="https://s2.loli.net/2022/06/26/iPf4IQ7DZsyw8AE.jpg" alt=""></p><ol start="3"><li><p>勾选「使用 TLS 1.2」和「使用 TLS 1.3」。</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206261221429.jpeg" alt=""></p></li><li><p>网银用户会重复出现该问题，重新勾选 TLS 即可解决。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows设置开机自启动</title>
      <link href="/2b66f3e.html"/>
      <url>/2b66f3e.html</url>
      
        <content type="html"><![CDATA[<p>本文介绍了多种设置开机自启动的方法，同样适用于关闭开机自启动。下载了p2p下崽器的同学，一定要看本文！！！</p><h2 id="1-设置开机启动项">1.设置开机启动项</h2><ol><li><p>按<code>win+r</code>输入<code>shell:startup</code></p><p><img src="https://s2.loli.net/2022/06/25/mD6pa4IL5it2Shc.png" alt=""></p></li><li><p>拷贝需要开机启动的程序的快捷方式到此文件夹即可</p><p><img src="https://s2.loli.net/2022/06/25/Es4UPMmILotQrVH.png" alt=""></p></li><li><p>打开任务管理器-启动查看启动项。</p><p><img src="https://s2.loli.net/2022/06/25/Pn6isWjtOYNgKvo.png" alt=""></p></li><li><p>这样就设置好了，下次计算机启动时，程序也会自动启动的。</p></li></ol><h2 id="2-使用计划任务自启动">2.使用计划任务自启动</h2><ol><li><p>新建文本文件<code>DebugStart.txt</code>,打开写入以下内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tasklist<span class="token operator">|</span><span class="token function">find</span> /i <span class="token string">"authSender.exe"</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> started <span class="token operator">||</span> start <span class="token string">""</span> <span class="token string">"D:\Debug<span class="token entity" title="\a">\a</span>uthSender.exe"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>这条语句不能换行</p><p>authSender.exe 是程序名</p><p>&quot;D:\Debug\authSender.exe&quot;是此程序所在路径</p><p>tasklist|find /i &quot;authSender.exe&quot;是判断进程是否存在，程序是否已经开启，如未开启才会启动程序</p><p>(可以在每条语句前使用 :: 来注释一条语句)</p><p>这种方法还可以批量启动不同程序，只需要在此文件中再按相同格式另起一行，写第二个要启动的程序对应的语句即可。</p></blockquote></li><li><p>然后改后缀名 .txt 为 .bat，双击即可启动程序</p></li><li><p>按 <code>win+r</code> 输入 <code>compmgmt.msc</code></p></li><li><p>按下图操作</p><ol><li><p><img src="https://s2.loli.net/2022/06/25/w6dJuXjBaIlb9h7.png" alt=""></p></li><li><p><img src="https://s2.loli.net/2022/06/25/ZpkUOyMqRm9H4I3.png" alt=""></p></li><li><p><img src="https://s2.loli.net/2022/06/25/gpsXlzHJOaEQ6DT.png" alt=""></p></li><li><p><img src="https://s2.loli.net/2022/06/25/zodna7L6C5HOtNU.png" alt=""></p></li><li><p>关闭页面，即可做到开机自动启动程序</p></li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>GORM学习</title>
      <link href="/471c01d1.html"/>
      <url>/471c01d1.html</url>
      
        <content type="html"><![CDATA[<h1>GORM学习</h1><h2 id="官方文档-2">官方文档</h2><p><a href="https://gorm.io/zh_CN/docs/">中文文档</a></p><h2 id="依赖包">依赖包</h2><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">import</span> <span class="token boolean">_</span> <span class="token string">"github.com/jinzhu/gorm/dialects/mysql"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="基础使用">基础使用</h2><h3 id="连接数据库">连接数据库</h3><h4 id="MySQL">MySQL</h4><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">import</span> <span class="token punctuation">(</span>  <span class="token string">"gorm.io/driver/mysql"</span>  <span class="token string">"gorm.io/gorm"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 参考 https://github.com/go-sql-driver/mysql#dsn-data-source-name 获取详情</span>  dsn <span class="token operator">:=</span> <span class="token string">"user:pass@tcp(127.0.0.1:3306)/dbname?charset=utf8mb4&amp;parseTime=True&amp;loc=Local"</span>  db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>mysql<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>dsn<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>gorm<span class="token punctuation">.</span>Config<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="模型定义">模型定义</h2><p>模型是标准的 struct，由 Go 的基本数据类型、实现了 <a href="https://pkg.go.dev/database/sql/?tab=doc#Scanner">Scanner</a> 和 <a href="https://pkg.go.dev/database/sql/driver#Valuer">Valuer</a> 接口的自定义类型及其指针或别名组成</p><p>GORM 倾向于约定，而不是配置。默认情况下，GORM 使用 <code>ID</code> 作为主键，使用结构体名的 <code>蛇形复数</code> 作为表名，字段名的 <code>蛇形</code> 作为列名，并使用 <code>CreatedAt</code>、<code>UpdatedAt</code> 字段追踪创建、更新时间</p><h3 id="gorm-Model">gorm.Model</h3><p>GORM 定义一个 <code>gorm.Model</code> 结构体，其包括字段 <code>ID</code>、<code>CreatedAt</code>、<code>UpdatedAt</code>、<code>DeletedAt</code></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; gorm.Model 的定义type Model struct &#123;  ID        uint           &#96;gorm:&quot;primaryKey&quot;&#96;  CreatedAt time.Time  UpdatedAt time.Time  DeletedAt gorm.DeletedAt &#96;gorm:&quot;index&quot;&#96;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以通过嵌入如结构体进行配套调用，并且，您可以使用标签 <code>embeddedPrefix</code> 来为 db 中的字段名添加前缀，例如：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> Blog <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>  ID      <span class="token builtin">int</span>  Author  Author <span class="token string">`gorm:"embedded;embeddedPrefix:author_"`</span>  Upvotes <span class="token builtin">int32</span><span class="token punctuation">&#125;</span><span class="token comment">// 等效于</span><span class="token keyword">type</span> Blog <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>  ID          <span class="token builtin">int64</span>    AuthorName  <span class="token builtin">string</span>    AuthorEmail <span class="token builtin">string</span>  Upvotes     <span class="token builtin">int32</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建记录">创建记录</h2><pre class="line-numbers language-go" data-language="go"><code class="language-go">user <span class="token operator">:=</span> User<span class="token punctuation">&#123;</span>Name<span class="token punctuation">:</span> <span class="token string">"Acce"</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> Birthday<span class="token punctuation">:</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>result <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">// 通过数据的指针来创建</span>user<span class="token punctuation">.</span>ID             <span class="token comment">// 返回插入数据的主键</span>result<span class="token punctuation">.</span>Error        <span class="token comment">// 返回 error</span>result<span class="token punctuation">.</span>RowsAffected <span class="token comment">// 返回插入记录的条数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Gin框架学习</title>
      <link href="/f7701653.html"/>
      <url>/f7701653.html</url>
      
        <content type="html"><![CDATA[<p>1本文档的部分方法并不全面，由于博主本身还在学习，因此学到新的方法后会进行补充，且部分使用方法相较于官方文档可能更优</p><h2 id="官方文档">官方文档</h2><p><a href="https://gin-gonic.com/zh-cn/docs/">中文文档</a></p><h2 id="依赖库">依赖库</h2><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">import</span> <span class="token string">"github.com/gin-gonic/gin"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="HTML渲染">HTML渲染</h2><h3 id="加载模板文件">加载模板文件</h3><h4 id="方式1">方式1</h4><p>相当于直接加载 templates 文件夹</p><p>示例：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">r<span class="token punctuation">.</span><span class="token function">LoadHTMLGlob</span><span class="token punctuation">(</span><span class="token string">"templates/**/*"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="方式2">方式2</h4><p>加载指定的几个 html 文件</p><p>示例：</p><pre class="line-numbers language-none"><code class="language-none">r.LoadHTMLFiles(&quot;templates&#x2F;posts&#x2F;index.html&quot;, &quot;templates&#x2F;users&#x2F;index.html&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="静态文件处理">静态文件处理</h3><p>当我们渲染的HTML文件中引用了静态文件时，我们只需要按照以下方式在渲染页面前调用<code>gin.Static</code>方法即可。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">r<span class="token punctuation">.</span><span class="token function">Static</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>A：在 html 中引用的相对路径</p><p>B：在 系统中 文件的相对位置</p></blockquote><p>示例：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">r<span class="token punctuation">.</span><span class="token function">Static</span><span class="token punctuation">(</span><span class="token string">"/static"</span><span class="token punctuation">,</span> <span class="token string">"./static"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="获取参数">获取参数</h2><h3 id="参数绑定">参数绑定</h3><p>推荐使用此类方法！</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// Binding from JSON</span><span class="token keyword">type</span> Login <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>User     <span class="token builtin">string</span> <span class="token string">`form:"user" json:"user" binding:"required"`</span>Password <span class="token builtin">string</span> <span class="token string">`form:"password" json:"password" binding:"required"`</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 绑定JSON的示例 (&#123;"user": "q1mi", "password": "123456"&#125;)</span>router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/loginJSON"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> login Login<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>login<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"login info:%#v\n"</span><span class="token punctuation">,</span> login<span class="token punctuation">)</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"user"</span><span class="token punctuation">:</span>     login<span class="token punctuation">.</span>User<span class="token punctuation">,</span><span class="token string">"password"</span><span class="token punctuation">:</span> login<span class="token punctuation">.</span>Password<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 绑定form表单示例 (user=q1mi&amp;password=123456)</span>router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/loginForm"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> login Login<span class="token comment">// ShouldBind()会根据请求的Content-Type自行选择绑定器</span><span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>login<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"user"</span><span class="token punctuation">:</span>     login<span class="token punctuation">.</span>User<span class="token punctuation">,</span><span class="token string">"password"</span><span class="token punctuation">:</span> login<span class="token punctuation">.</span>Password<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 绑定QueryString示例 (/loginQuery?user=q1mi&amp;password=123456)</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/loginForm"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> login Login<span class="token comment">// ShouldBind()会根据请求的Content-Type自行选择绑定器</span><span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>login<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"user"</span><span class="token punctuation">:</span>     login<span class="token punctuation">.</span>User<span class="token punctuation">,</span><span class="token string">"password"</span><span class="token punctuation">:</span> login<span class="token punctuation">.</span>Password<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// Listen and serve on 0.0.0.0:8080</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>ShouldBind</code>会按照下面的顺序解析请求中的数据完成绑定：</p><ol><li>如果是 <code>GET</code> 请求，只使用 <code>Form</code> 绑定引擎（<code>query</code>）。</li><li>如果是 <code>POST</code> 请求，首先检查 <code>content-type</code> 是否为 <code>JSON</code> 或 <code>XML</code>，然后再使用 <code>Form</code>（<code>form-data</code>）。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>软件推荐-PixEz Flutter</title>
      <link href="/3ad00374.html"/>
      <url>/3ad00374.html</url>
      
        <content type="html"><![CDATA[<h1>软件推荐-PixEz Flutter</h1><p><img src="https://s2.loli.net/2022/06/24/e39O5aGLvRifdwX.png" alt=""></p><h2 id="功能介绍-5"><strong>功能介绍</strong></h2><h2 id="优点-6">优点</h2><ol><li>支持中国大陆地区直连</li></ol><h2 id="链接-6">链接</h2><p>官网：<a href="https://github.com/Notsfsssf/pixez-flutter">https://github.com/Notsfsssf/pixez-flutter</a></p><table><thead><tr><th>系统</th><th>云盘</th><th>应用市场</th><th>GitHub</th></tr></thead><tbody><tr><td>Android</td><td><a href="https://wwp.lanzout.com/imgJu06vn77a">蓝奏云</a></td><td><a href="https://play.google.com/store/apps/details?id=com.perol.play.pixez">Google Play</a></td><td><a href="https://github.com/Notsfsssf/pixez-flutter/releases">Release</a></td></tr><tr><td>iOS</td><td>/</td><td><a href="https://apps.apple.com/us/app/pixez/id1494435126">App Store(美区)</a></td><td>/</td></tr></tbody></table><blockquote><p>国内推荐用云盘，因为墙的原因，其他几个方法不是很好用</p><p>蓝奏云中为直接转存作者的版本，不存在任何修改 密码:96cd</p></blockquote><h2 id="使用方法-5">使用方法</h2><h3 id="1-基础配置">1.基础配置</h3><p>图床千万<strong>不要选默认！！！</strong></p><p><img src="https://s2.loli.net/2022/06/24/VbfAK9JHlXrDneB.gif" alt=""></p><h3 id="2-登录问题">2.登录问题</h3><p>登录页面加载有点慢，但是能加载出来</p><p>如果接受不了，请安装vpn翻个墙登录一下（<a href="https://tubevpn.cc/?share=MTAyMTc5Mw==">TubeVPN</a>这个可以白嫖一天）,挂上 vpn 后再点击登录，速度就很快了，以后查看也是不需要 vpn 的，只有登录需要一次科学上网</p><p><strong>操作方法如下</strong></p><ol><li>挂上 vpn</li><li><img src="https://s2.loli.net/2022/06/24/6HhWaQtecADYK5d.gif" alt=""></li><li>按照上述方法操作，最后一定重新打开 <strong>SNI</strong>，否则可能导致无法加载图片</li></ol><h3 id="3-基本使用方法">3.基本使用方法</h3><h4 id="1-下载图片">1.下载图片</h4><p>下载按钮不外显，而是通过长按操作来实现。在主界面瀑布流长按对应插画，会自动下载该插画的所有分 p（如有）；而在插画详情界面长按插画，对于多 p 插画则可手动选择想要下载的分 p。</p><h4 id="2-保存格式">2.保存格式</h4><p>在设置页面中点击偏好设置 - 平台特殊设置，便可以看到「保存格式」选项，可以参考下面的参数来修改保存名称。</p><p>e.g. <code>&#123;illust_id&#125;_p&#123;part&#125; </code>即「插画ID_p第几张」</p><h2 id="注意事项-5">注意事项</h2><ol><li>本应用所实现的在墙娘法力范围内直连 pixiv，<strong>并非是使用 / 内置了代理</strong>，而是使用了小技巧瞒天过海躲过了墙娘的 SNI 嗅探。</li><li>图是 R18 的，但是你账号没开查看 R18，就会出现 <img src="https://s2.loli.net/2022/06/24/cW7smREfd5tLzF8.jpg" alt=""></li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>软件推荐-LANDrop</title>
      <link href="/22edf87.html"/>
      <url>/22edf87.html</url>
      
        <content type="html"><![CDATA[<h1>软件推荐-LANDrop</h1><p><img src="https://s2.loli.net/2022/06/22/YpuTfadOJtQIAKj.png" alt=""></p><h2 id="功能介绍-4"><strong>功能介绍</strong></h2><p><strong>LANDrop</strong> 是一款开源免费的支持跨平台的「<strong>局域网文件传输工具</strong>」，能超级快速方便地将 iPhone、iPad、Android 手机/平板；Windows、Mac、Linux 电脑上的照片、视频、文档、文件发送到别的设备去。</p><h2 id="优点-5">优点</h2><ol><li>完善的跨平台、跨设备互传文件</li><li><strong>不限速不耗流量</strong></li><li>安全不怕文件泄露</li><li>零配置，开箱即用！</li></ol><h2 id="链接-5">链接</h2><h3 id="官网">官网</h3><p><a href="https://landrop.app/?utm_source=iplaysoft.com&amp;hmsr=iplaysoft.com">https://landrop.app/?utm_source=iplaysoft.com&amp;hmsr=iplaysoft.com</a></p><h3 id="蓝奏云">蓝奏云</h3><p><a href="https://wwp.lanzout.com/ibHty06syc9a">https://wwp.lanzout.com/ibHty06syc9a</a></p><h3 id="Linux-独立方法">Linux 独立方法</h3><ol><li><p>下载并安装依赖项： <a href="https://www.qt.io/download-qt-installer">Qt </a>和 <a href="https://libsodium.gitbook.io/doc/#downloading-libsodium">libsodium </a></p></li><li><p>如果您使用的是基于 Debian 的发行版，例如 Ubuntu，您可以通过以下方式安装 libsodium</p></li></ol>   <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> libsodium-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li><p>克隆此存储库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://gitclone.com/github.com/LANDrop/LANDrop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>运行以下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> -p LANDrop/build<span class="token builtin class-name">cd</span> LANDrop/buildqmake <span class="token punctuation">..</span>/LANDrop<span class="token function">make</span> -j<span class="token variable"><span class="token variable">$(</span>nproc<span class="token variable">)</span></span><span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>您现在可以通过以下方式运行 LANDrop</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">landrop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="使用方法-4">使用方法</h2><h3 id="Win">Win</h3><h4 id="发送文件">发送文件</h4><p><img src="https://s2.loli.net/2022/06/22/jEAcfYquSTCh5Bb.gif" alt=""></p><h4 id="接受文件">接受文件</h4><p><img src="https://s2.loli.net/2022/06/22/Do4zCjNIxdErksu.gif" alt=""></p><h3 id="Android">Android</h3><h4 id="接受文件-2">接受文件</h4><p><img src="https://s2.loli.net/2022/06/22/BD14EMfsiJ2wzAu.gif" alt=""></p><h4 id="发送文件-2">发送文件</h4><p><img src="https://s2.loli.net/2022/06/22/jEAcfYquSTCh5Bb.gif" alt=""></p><h2 id="注意事项-4">注意事项</h2><ol><li><strong>LANDrop</strong> 在使用前完全<strong>无需任何配置</strong>！在同一个局域网内两台或以上的设备上，直接打开软件 APP 就能「自动发现」局域网的其他设备，选择文件和目标设备即可进行传输。</li></ol><h2 id="常见问题-2">常见问题</h2><ol><li><p><strong>Android 版 LANDrop 的默认文件保存目录：</strong><code>/Android/data/app.landrop.landrop_flutter/files</code></p><p>这是系统目录，默认是隐藏的，需要给予文件管理器权限或使用安卓存储框架去访问才能打开。实测<a href="https://www.iplaysoft.com/go/samsung">三星</a>手机使用 <a href="https://www.iplaysoft.com/cx-file-explorer.html">CX File Explorer</a> 开启显示隐藏文件后，找到此路径可以赋予权限进行读写。</p></li><li><p>手机和电脑互传时，传输失败</p><p>解决方法：传输文件时<strong>手机不能锁屏</strong></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Go 开发环境配置</title>
      <link href="/96d6aa90.html"/>
      <url>/96d6aa90.html</url>
      
        <content type="html"><![CDATA[<h1>Go 开发环境搭建</h1><h2 id="下载-3">下载</h2><p>Go官网下载地址：<a href="https://golang.org/dl/">https://golang.org/dl/</a></p><p>Go官方镜像站（推荐）：<a href="https://golang.google.cn/dl/">https://golang.google.cn/dl/</a></p><h2 id="Windows安装">Windows安装</h2><ol><li><p>版本选择</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206211512613.png" alt=""></p></li><li><p>下载后打开<img src="https://s2.loli.net/2022/06/21/P7MHyrAzCcTIiB3.png" alt=""></p></li><li><p>跟着做就行<img src="https://s2.loli.net/2022/06/21/Lr7Bp9NozWPkmSF.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/21/nPUqoxH7Buw6TFI.png" alt=""><img src="https://s2.loli.net/2022/06/21/VaSwmklxW7NzR6I.png" alt=""></p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206211520385.png" alt="等会就行"></p></li><li><p>环境配置</p><p><code>GOROOT</code>和<code>GOPATH</code>都是环境变量，其中<code>GOROOT</code>是我们安装go开发包的路径，而从Go 1.8版本开始，Go开发包在安装完成后会为<code>GOPATH</code>设置一个默认目录，并且在Go1.14及之后的版本中启用了Go Module模式之后，不一定非要将代码写到GOPATH目录下，所以也就<strong>不需要我们再自己配置GOPATH了，使用默认的即可</strong>。</p></li><li><p>检验安装是否成功</p><ol><li><p><code>win+r </code> 输入<code>cmd</code></p><p><img src="https://s2.loli.net/2022/06/21/9JUPvuz1tFWj4wy.png" alt=""></p></li><li><p>输入<code>go version</code></p><p><img src="C:/Users/Anubis/AppData/Roaming/Typora/typora-user-images/image-20220621153213170.png" alt="image-20220621153213170"></p></li></ol></li></ol><h2 id="Linux下安装">Linux下安装</h2><p>如果不是要在 Linux 平台敲 go 代码就不需要在 Linux 平台安装 Go，我们开发机上写好的 go 代码只需要跨平台编译好之后就可以拷贝到 Linux 服务器上运行了，这也是 go 程序跨平台易部署的优势。</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206211515370.png" alt="一般Linux是没有图形界面的，这里只是放一下"></p><ol><li><p>我们在版本选择页面选择并下载好<code>go1.18.3.linux-amd64.tar.gz</code>文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://dl.google.com/go/go1.18.3.linux-amd64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>后续尽量安装最新版本，此处仅是作为参考，本文写于 2022/6/21</p></blockquote></li><li><p>将下载好的文件解压到<code>/usr/local</code>目录下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">tar</span> -zxvf go1.18.3.linux-amd64.tar.gz -C /usr/local  <span class="token comment"># 解压</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置环境变量： Linux下有两个文件可以配置环境变量，其中<code>/etc/profile</code>是对所有用户生效的；<code>$HOME/.profile</code>是对当前用户生效的，根据自己的情况自行选择一个文件打开，下面以<code>/etc/profile</code>作为示例</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后点击<code>i</code></p><p>在底部插入下列代码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">GOROOT</span><span class="token operator">=</span>/usr/local/go<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$GOROOT</span>/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>保存退出</p><ol><li>按 ESC</li><li><code>Shift+:</code> 输入 <code>wq!</code></li></ol><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206211550078.png" alt=""></p><blockquote><p>此处为了方便演示，使用的是 UbuntuKylin 系统，一般Linux系统是没有桌面的，不用在意桌面的事情。</p></blockquote></li><li><p>修改<code>/etc/profile</code>后要重启生效，修改<code>$HOME/.profile</code>后使用source命令加载<code>$HOME/.profile</code>文件即可生效。</p></li><li><p>检查<code>go version</code></p></li></ol><h2 id="Mac下安装">Mac下安装</h2><p>我真的没这条件 QAQ</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> 环境配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Biorhythms题解</title>
      <link href="/1ebe21c1.html"/>
      <url>/1ebe21c1.html</url>
      
        <content type="html"><![CDATA[<h2 id="分析">分析</h2><p>纯粹的板子题，知识点在这：<a href="https://anubis.cafe/2cf738e6.html">中国剩余定理</a></p><h3 id="注意点">注意点</h3><ul><li>是第一个比 d 大的数，不是最小的数</li><li>注意格式</li><li>如果结果小于 0  ，记得先加上 21252，再减 d</li></ul><h2 id="代码">代码</h2><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;iostream&gt;#include&lt;cstdio&gt;#include&lt;cstring&gt;#include&lt;algorithm&gt;#include&lt;cstdlib&gt;#include&lt;cmath&gt;using namespace std;long long m[]&#x3D; &#123;0,23,28,33&#125;,times&#x3D;1,A[5],d;long long ExGcd(long long a,long long b,long long &amp;x,long long &amp;y)&#123;if(b&#x3D;&#x3D;0)&#123;x&#x3D;1,y&#x3D;0;return a;&#125;long long ans&#x3D;ExGcd(b,a%b,x,y);long long t&#x3D;y;y&#x3D;x-(a&#x2F;b)*y;x&#x3D;t;return ans;&#125;long long inv(long long a,long long p)&#x2F;&#x2F;无解返回 -1&#123;long long x,y;if(ExGcd(a,p,x,y)!&#x3D;1) return -1;return (x%p+p)%p;&#x2F;&#x2F;正数化&#125;long long CRT(long long a[],long long m[],long long n)&#123;long long N&#x3D;1,x&#x3D;0;for(long long i&#x3D;1; i&lt;&#x3D;n; ++i) N*&#x3D;m[i];for(long long i&#x3D;1; i&lt;&#x3D;n; ++i)&#123;long long r&#x3D;N&#x2F;m[i];x+&#x3D;(r * inv( r , m[i] ) * a[i])%N;&#125;if(x&lt;&#x3D;0) x+&#x3D;21252;else x%&#x3D;21252;while(x&lt;d) x+&#x3D;N;return x;&#125;int main()&#123;while(1)&#123;bool flag&#x3D;1;for(long long i&#x3D;1; i&lt;&#x3D;3; ++i)&#123;cin&gt;&gt;A[i];if(A[i]!&#x3D;-1) flag&#x3D;false;&#125;cin&gt;&gt;d;if(d!&#x3D;-1) flag&#x3D;false;if(flag) break;cout&lt;&lt;&quot;Case &quot;&lt;&lt;times++&lt;&lt;&quot;: the next triple peak occurs in &quot;&lt;&lt;CRT(A,m,3)-d&lt;&lt;&quot; days.&quot;&lt;&lt;endl;&#125;return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>中国剩余定理</title>
      <link href="/2cf738e6.html"/>
      <url>/2cf738e6.html</url>
      
        <content type="html"><![CDATA[<h2 id="前置知识-4">前置知识</h2><h3 id="乘法逆元"><a href="https://anubis.cafe/bfaab9bd.html">乘法逆元</a></h3><h2 id="知识浅析">知识浅析</h2><p>**问题：**计算一个整数 x ，使得它满足除以3余2、除以5余3、除以7余2。</p><p>如果能够找到三个整数 x1,x2,x3 ，使得：</p><p>x1  除以3余2、除以5余0、除以7余0；</p><p>x2  除以3余0、除以5余3、除以7余0；</p><p>x3  除以3余0、除以5余0、除以7余2；</p><p>那么令 <code>x=x1+x2+x3</code>,就很容易验证这时的 x 就满足除以3余2、除以5余3、除以7余2。</p><p>分别称找到整数 x1,x2,x3 的问题为<strong>问题1、问题2、问题3</strong>。可以看出这三个问题本质上是类似的。</p><p>下面对<strong>问题1-1</strong>继续分解，如果能够找到一个整数 <strong>y1</strong> 满足 <strong>y1</strong> 除以3余1、除以5余0、除以7余0，那么令 <code>x1=y1*2</code> ，就很容易验证这时的 <strong>x1</strong> 就满足除以3余2、除以5余0、除以7余0。</p><p>因此定义</p><p><strong>问题1</strong>为：寻找整数 <strong>y1</strong> 满足 <strong>y1</strong> 除以3余1、除以5余0、除以7余0；</p><p><strong>问题2</strong>为：寻找整数 <strong>y2</strong> 满足 <strong>y2</strong> 除以3余0、除以5余1、除以7余0；</p><p><strong>问题3</strong>为：寻找整数 <strong>y3</strong> 满足 <strong>y3</strong> 除以3余0、除以5余0、除以7余1。</p><p>这三个问题本质上是相同的。</p><p>如果找到了 <strong>y1,y2,y3</strong> ，那么就可以取 <code>x=2*y1+3*y2+2*y3</code>。</p><p>对<strong>问题1</strong>进行解析</p><p>易知可以通过<a href="https://anubis.cafe/bfaab9bd.html">乘法逆元</a>求解<strong>y1</strong></p><p>则将此方法进行一般性推广，得到下列证明：</p><h2 id="数学证明">数学证明</h2><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206122350263.jpeg" alt="中国剩余定理证明"></p><h2 id="代码-4">代码</h2><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int ExGcd(int a,int b,int &amp;x,int &amp;y)&#123;if(b&#x3D;&#x3D;0)&#123;x&#x3D;1,y&#x3D;0;return a;&#125;int ans&#x3D;ExGcd(b,a%b,x,y);int t&#x3D;y;y&#x3D;x-(a&#x2F;b)*y;x&#x3D;t;return ans;&#125;int inv(int a,int p)&#x2F;&#x2F;无解返回 -1 &#123;int x,y;if(ExGcd(a,p,x,y)!&#x3D;1) return -1;return (x%p+p)%p;&#x2F;&#x2F;正数化 &#125;int CRT(int a[],int m[],int n)&#123;int N&#x3D;1,x&#x3D;0;for(int i&#x3D;1;i&lt;&#x3D;n;++i) N*&#x3D;m[i];for(int i&#x3D;1;i&lt;&#x3D;n;++i)&#123;int r&#x3D;N&#x2F;m[i];x+&#x3D;(r * inv( r , m[i] ) * a[i])%N;&#125;return x%N;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="练手题">练手题</h2><h3 id="UVA756-Biorhythms"><a href="https://www.luogu.com.cn/problem/UVA756">UVA756 Biorhythms</a></h3><h3 id="P1495-【模板】中国剩余定理（CRT）-曹冲养猪"><a href="https://www.luogu.com.cn/problem/P1495">P1495 【模板】中国剩余定理（CRT）/ 曹冲养猪</a></h3>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA中文乱码</title>
      <link href="/48ee18f2.html"/>
      <url>/48ee18f2.html</url>
      
        <content type="html"><![CDATA[<p>原因多种多样，请逐一尝试</p><h2 id="1-JDK版本问题">1.JDK版本问题</h2><p><strong>JDK18</strong> 现在中文支持仍存在问题，切换为 <strong>JDK17</strong> 即可</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206191827255.gif" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JetBrains </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客功能添加及优化</title>
      <link href="/47ff9fc9.html"/>
      <url>/47ff9fc9.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-配置音乐播放器">1.配置音乐播放器</h3><p>要支持音乐播放，在<strong>主题</strong>的 <code>_config.yml</code> 配置文件中激活 music 配置即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 是否在首页显示音乐</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span>         <span class="token comment"># 非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">server</span><span class="token punctuation">:</span> netease   <span class="token comment"># require music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment"># require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">503838841</span>     <span class="token comment"># require song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token comment"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>   <span class="token comment"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 列表默认折叠</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，<code>playlist</code>的<code>id</code></p><p>即为这串数字。</p></blockquote><h3 id="2-添加博客首页搜索功能">2. 添加博客首页搜索功能</h3><h4 id="2-1-安装插件">2.1. 安装插件</h4><pre class="line-numbers language-bashb" data-language="bashb"><code class="language-bashb">cnpm install hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-2-在-Hexo-根目录下的-config-yml-文件中，新增以下的配置项：">2.2 在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</h4><pre class="line-numbers language-none"><code class="language-none"># Search of Indexsearch:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-中文链接转拼音（不建议安装）">3.中文链接转拼音（<strong>不建议安装</strong>）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>但是存在一个致命缺陷，一旦你更改了标题，这篇文章对应的 url 也变化，会导致原来的链接失效。</p><h4 id="安装命令">安装命令</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="在-Hexo-根目录下的-config-yml-文件中，新增以下的配置项：">在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 中文链接转拼音</span><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h4 id="补充">补充</h4><p>这个插件只能实现文章的自动拼音化命名，无法对标签进行拼音化</p><p>为此特别补充标签名和路径名分别设置的方法（也适用于分类）</p><ol><li><p>打开根目录下的<code>_config.yml</code>找到下列代码段</p><pre class="line-numbers language-none"><code class="language-none">tag_map:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在下方进行一一对应即可</p><pre class="line-numbers language-none"><code class="language-none">标签名: 路径名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>实例</p><pre class="line-numbers language-none"><code class="language-none">category_map:编程: programming生活: life其他: other<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="4-添加-RSS-订阅支持">4.添加 RSS 订阅支持</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code></p><h4 id="安装命令-2">安装命令</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="在-Hexo-根目录下的-config-yml-文件中，新增以下的配置项：-2">在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="5-文章字数统计插件">5.文章字数统计插件</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><h4 id="安装命令-3">安装命令</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="然后只需在本主题下的-config-yml-文件中，将各个文章字数相关的配置激活即可：">然后只需在<strong>本主题</strong>下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 发布日期</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 更新日期</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 文章字数统计</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 站点总文章字数</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 文章阅读时长</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 文章阅读次数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="6-评论系统">6.评论系统</h3><p>由于 Hexo 博客系统是静态博客，所以它本身无法支持评论等动态的功能。不过，有很多第三方的评论系统都可以通过添加 JS 代码的方式让 Hexo 博客支持评论功能。</p><p>常见的评论系统包括：Valine、Disqus、Gitment 等等。</p><h4 id="Valine"><a href="https://valine.js.org/">Valine</a></h4><h5 id="注册-LeanCloud">注册 LeanCloud</h5><p>在 <a href="https://www.leancloud.cn">https://www.leancloud.cn</a> 网址注册一个 LeanCloud 账号。</p><p>然后进行验证，验证通过后才可以使用</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206121811424.png" alt="注册一个应用"></p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206121810116.png" alt=""></p><p>接下来配置一下安全域名，输入你的域名来保证其他人就算获取了你的appid也没办法操作你的数据库。<img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206121814109.png" alt="配置安全域名"></p><h5 id="Hexo-配置">Hexo 配置</h5><p>在博客根目录下执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> next-theme/hexo-next-valine<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>没有配置淘宝镜像请看：<a href="https://anubis.cafe/2022/06/09/jing-yan/guo-nei-jing-xiang-jia-su/">国内镜像加速</a></p></blockquote><p>在 _config.yml 文件末尾插入如下内容（可以是 hexo 或 theme 的 _config.yml）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Valine</span><span class="token comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span>valine:  enable: <span class="token boolean">true</span>  appId:  <span class="token comment"># your leancloud application appid</span>  appKey:  <span class="token comment"># your leancloud application appkey</span>  serverURLs: <span class="token comment"># When the custom domain name is enabled, fill it in here</span>  placeholder: Just go go <span class="token comment"># comment box placeholder</span>  avatar: mm <span class="token comment"># gravatar style</span>  meta: <span class="token punctuation">[</span>nick, mail, link<span class="token punctuation">]</span> <span class="token comment"># Custom comment header</span>  pageSize: <span class="token number">10</span> <span class="token comment"># pagination size</span>  visitor: <span class="token boolean">false</span> <span class="token comment"># leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors' for counter compatibility. Article reading statistic https://valine.js.org/visitor.html</span>  comment_count: <span class="token boolean">true</span> <span class="token comment"># If false, comment count will only be displayed in post page, not in home page</span>  recordIP: <span class="token boolean">false</span> <span class="token comment"># Whether to record the commenter IP</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>复制生成的 appId 和 appKey。</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206121821572.png" alt=""></p></blockquote><h5 id="成果展示">成果展示</h5><p>一切顺利的话，你将会在 Hexo 博客文章末尾看到如下评论区。</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206121822213.png" alt=""></p><h5 id="补充-2">补充</h5><p>由于  <strong>Valine</strong> 自带的邮件提醒已经失效，所以此处采取第三方邮件提醒：<a href="https://github.com/zhaojun1998/Valine-Admin">Valine Admin</a></p><p>具体使用流程看<strong>第10条</strong>插件安装！！！</p><h3 id="7-hexo-博文自动分类插件">7.hexo 博文自动分类插件</h3><h4 id="安装-2">安装</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">cnpm install hexo<span class="token punctuation">-</span>auto<span class="token punctuation">-</span>category <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="配置">配置</h4><p>在根目录下的<code>_config.yml</code>中添加</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Generate categories from directory-tree</span><span class="token comment"># Dependencies: https://github.com/xu-song/hexo-auto-category</span><span class="token comment"># depth: the depth of directory-tree you want to generate, should > 0</span><span class="token key atrule">auto_category</span><span class="token punctuation">:</span> <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token key atrule">depth</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token comment">#代表目录深度，比如只想生成一级目录，就填1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="使用-3">使用</h4><p>正常三件套即可</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">hexo cleanhexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="8-Hexo-abbrlink-生成唯一永久文章链接（强烈推荐）">8.Hexo-abbrlink 生成唯一永久文章链接（强烈推荐）</h3><p>hexo-abbrlink 可以为每篇文章生成一个对应的永久链接，并且不随着标题变化而变化，确保了 url 的长期有效性</p><h4 id="安装-3">安装</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> hexo-abbrlink --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="配置-2">配置</h4><p>修改根目录站点配置文件<code>_config.yml</code>，改为：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">permalink</span><span class="token operator">:</span> posts<span class="token operator">/</span><span class="token operator">:</span>abbrlink<span class="token punctuation">.</span>html  # 此处可以自己设置，也可以直接使用 <span class="token operator">:</span><span class="token operator">/</span>abbrlink<span class="token literal-property property">abbrlink</span><span class="token operator">:</span>    <span class="token literal-property property">alg</span><span class="token operator">:</span> crc32   #算法： <span class="token function">crc16</span><span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">)</span> and crc32    <span class="token literal-property property">rep</span><span class="token operator">:</span> hex     #进制： <span class="token function">dec</span><span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">)</span> and hex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-hexo-submit-urls-to-search-engine（必须安装）">9.hexo-submit-urls-to-search-engine（必须安装）</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> --save hexo-submit-urls-to-search-engine<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://cjh0613.com/20200603HexoSubmitUrlsToSearchEngine">中文文档</a></p><h3 id="10-Valine-Admin">10.Valine Admin</h3><h4 id="前置要求：安装-Valine-（参见第6条）">前置要求：安装 Valine （参见第6条）</h4><h4 id="安装流程">安装流程</h4><p>由于leancloud的界面有所变化，因此请以本文为参照</p><ol><li><p>打开leancloud</p></li><li><p>部署 Valine Admin</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206211114311.png" alt=""></p><blockquote><p>由于速度问题，建议使用镜像源，代码如下</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">git clone https<span class="token punctuation">:</span>//gitclone.com/github.com/DesertsP/Valine<span class="token punctuation">-</span>Admin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote></li><li><p>配置环境变量</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206211112036.png" alt=""></p><blockquote><p><strong><a href="https://service.mail.qq.com/cgi-bin/help?subtype=1&amp;&amp;no=166&amp;&amp;id=28">如何打开POP3/SMTP/IMAP功能？</a></strong></p></blockquote><table><thead><tr><th>变量</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>SITE_NAME</td><td>Deserts</td><td>[必填]博客名称</td></tr><tr><td>SITE_URL</td><td><a href="https://panjunwen.com">https://panjunwen.com</a></td><td>[必填]首页地址</td></tr><tr><td><strong>SMTP_SERVICE</strong></td><td>QQ</td><td>[新版支持]邮件服务提供商，支持 QQ、163、126、Gmail 以及 <a href="https://nodemailer.com/smtp/well-known/#supported-services">更多</a></td></tr><tr><td>SMTP_USER</td><td><a href="mailto:xxxxxx@qq.com">xxxxxx@qq.com</a></td><td>[必填]SMTP登录用户</td></tr><tr><td>SMTP_PASS</td><td>ccxxxxxxxxch</td><td>[必填]SMTP登录密码（QQ邮箱需要获取独立密码）</td></tr><tr><td>SENDER_NAME</td><td>Deserts</td><td>[必填]发件人</td></tr><tr><td>SENDER_EMAIL</td><td><a href="mailto:xxxxxx@qq.com">xxxxxx@qq.com</a></td><td>[必填]发件邮箱</td></tr><tr><td>ADMIN_URL</td><td><a href="https://xxx.leanapp.cn/">https://xxx.leanapp.cn/</a></td><td>[建议]Web主机二级域名（云引擎域名），用于自动唤醒</td></tr><tr><td>BLOGGER_EMAIL</td><td><a href="mailto:xxxxx@gmail.com">xxxxx@gmail.com</a></td><td>[可选]博主通知收件地址，默认使用SENDER_EMAIL</td></tr><tr><td>AKISMET_KEY</td><td>xxxxxxxx</td><td>[可选]Akismet Key 用于垃圾评论检测，设为MANUAL_REVIEW开启人工审核，留空不使用反垃圾</td></tr></tbody></table></li></ol><p>​</p><h4 id="定时任务设置">定时任务设置</h4><p>关于自动休眠的官方说法：<a href="https://leancloud.cn/docs/leanengine_plan.html#hash633315134">点击查看</a>。目前实现了两种云函数定时任务来解决云引擎休眠的问题：</p><ul><li>自动唤醒，定时访问Web APP二级域名防止云引擎休眠；</li><li>每天定时检查过去24小时内漏发的邮件通知。</li></ul><p>进入「云引擎-定时任务」，创建两个定时任务。</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206211118687.png" alt=""></p><p>选择self-wake云函数，Cron表达式为<code>0 */30 0-16 * * ?</code>，表示每天早0点到晚16点每隔30分钟访问云引擎。</p><p>选择resend-mails云函数，Cron表达式为<code>0 0 0 * * ?</code>，表示每天0点检查过去24小时内漏发的通知邮件并补发。</p><p><strong>至此，Valine Admin 已经可以正常工作，以下是可选配置。</strong></p><h4 id="更多设置">更多设置</h4><p>请参考<a href="https://github.com/DesertsP/Valine-Admin">官方文档</a></p><h2 id="博客优化">博客优化</h2><h3 id="使用-gulp-压缩博客静态资源">使用 gulp 压缩博客静态资源</h3><h4 id="gulp-介绍">gulp 介绍</h4><p><a href="https://www.gulpjs.com.cn/">gulp</a> 能够帮助用户自动压缩静态资源，配合各类下属插件，能够压缩包括<code>css</code>、<code>js</code>、<code>html</code>乃至各类格式的图片文件。</p><h4 id="安装教程">安装教程</h4><p>在这使用<a href="https://npm.taobao.org/">taobao cnpm</a>加快安装速度</p><ol><li><p>全局安装 gulp 指令集</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> --global gulp-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><p>此后均在<strong>博客根目录</strong>下操作</p></li><li><p>安装 gulp 插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> gulp --save <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>安装各个下属插件以实现对各类静态资源的压缩</p><ul><li>压缩 HTML：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> gulp-htmlclean --save-devcnpm <span class="token function">install</span> gulp-html-minifier-terser --save-dev<span class="token comment"># 用gulp-html-minifier-terser可以压缩HTML中的ES6语法</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p>压缩 CSS：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> gulp-clean-css --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>压缩 JS</p><p><a href="https://github.com/duan602728596/gulp-terser">gulp-terser</a> 只会直接压缩 js 代码，所以不存在因为语法变动导致的错误 。事实上，当我们使用 <code>jsdelivr</code> 的 <code>CDN</code> 服务时，只需要在 <code>css </code>或者 <code>js</code> 的后缀前添加 <code>.min</code> ,例如 <code>example.js-&gt;example.min.js</code> ,<code>JsDelivr</code> 就会自动使用 <code>terser</code> 帮我们压缩好代码。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> gulp-terser --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>压缩字体包</p><p>font-min 可以遍历博客内用到的字符，并将字体包内这些字符的字体样式提取出来输出为新的字体包。</p><blockquote><p>font-min 仅支持压缩 ttf 格式的字体包</p></blockquote><p>[^字体包]:  字体文件作为最让人又爱又恨的静态资源，为了保证站点文字匹配，全字库字体包往往超过 15 MB，这对博客的加载速度造成了巨大压力。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> gulp-fontmin --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>为Gulp创建 <code>gulpfile.js</code> 任务脚本。在博客根目录下新建 <code>gulpfile.js</code> ,打开<code>[Blogroot]\gulpfile.js</code>,输入以下内容：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//用到的各个插件</span><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> cleanCSS <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-clean-css'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-html-minifier-terser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlclean'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> fontmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-fontmin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// gulp-tester</span><span class="token keyword">var</span> terser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-terser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩 js</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'compress'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>  gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/*.js'</span><span class="token punctuation">,</span> <span class="token string">'!./public/**/*.min.js'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">terser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//压缩 css</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/*.css'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleanCSS</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">compatibility</span><span class="token operator">:</span> <span class="token string">'ie11'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//压缩 html</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-html'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">removeComments</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//清除html注释</span>            <span class="token literal-property property">collapseWhitespace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩html</span>            <span class="token literal-property property">collapseBooleanAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token comment">//省略布尔属性的值，例如：&lt;input checked="true"/> ==> &lt;input /></span>            <span class="token literal-property property">removeEmptyAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token comment">//删除所有空格作属性值，例如：&lt;input id="" /> ==> &lt;input /></span>            <span class="token literal-property property">removeScriptTypeAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token comment">//删除&lt;script>的type="text/javascript"</span>            <span class="token literal-property property">removeStyleLinkTypeAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token comment">//删除&lt;style>和&lt;link>的 type="text/css"</span>            <span class="token literal-property property">minifyJS</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩页面 JS</span>            <span class="token literal-property property">minifyCSS</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩页面 CSS</span>            <span class="token literal-property property">minifyURLs</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token comment">//压缩页面URL</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//压缩字体</span><span class="token keyword">function</span> <span class="token function">minifyFont</span><span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/fonts/*.ttf'</span><span class="token punctuation">)</span> <span class="token comment">//原字体所在目录</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">fontmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">text</span><span class="token operator">:</span> text    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/fontsdest/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//压缩后的输出目录</span>    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'end'</span><span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'mini-font'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> buffers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//HTML文件所在目录请根据自身情况修改</span>    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      buffers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>contents<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'end'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> text <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>buffers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">minifyFont</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//gulp 4.0 以上版本可用</span><span class="token comment">// 运行 gulp 命令时依次执行以下任务</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span>  <span class="token string">'compress'</span><span class="token punctuation">,</span> <span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token string">'minify-html'</span><span class="token punctuation">,</span><span class="token string">'mini-font'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至此 gulp 的安装与配置便结束了</p></li><li><p>在每次运行完 <code>hexo generate</code> 生成静态页面后，运行 <code>gulp</code> 对其进行压缩。指令流程如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cleanhexo ggulphexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="参考资料">参考资料</h2><ul><li>本文优化部分参考自：<a href="https://akilar.top/posts/49b73b87/">使用gulp压缩博客静态资源</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件推荐-Qdown</title>
      <link href="/96fea2ff.html"/>
      <url>/96fea2ff.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/06/18/2QnhO36oTDicGpl.png" alt=""></p><h2 id="功能介绍-6"><strong>功能介绍</strong></h2><p><strong>Aria2</strong> 则是一款免费<a href="https://www.iplaysoft.com/tag/%E5%BC%80%E6%BA%90">开源</a>的“命令行下载工具”，虽然下载能力超群，但却没有图形界面，一般人用起来实在太麻烦。</p><p><strong>Qdown</strong> 是一款简单易用的基于 Aria2 内核并集成了 AriaNG 前端管理界面打造的多线程<a href="https://www.iplaysoft.com/tag/%E4%B8%8B%E8%BD%BD">下载</a>利器！可以支持 HTTP、HTTPS、支持迅雷链接、<a href="https://www.iplaysoft.com/tag/bt">BT 种子</a>、磁力下载、FTP、SFTP 等所有主流的下载协议。</p><h2 id="优点-7">优点</h2><ol><li><strong>内存占用低</strong>，在不启动主界面的情况下最多消耗<strong>30M</strong>内存，不卡电脑、不占资源；</li><li>支持<strong>迅雷链接、磁力下载、BT、FTP、SFTP、HTTP、HTTPS</strong>等下载协议；</li><li><strong>免费无广告</strong>；</li><li><strong>界面友好美观</strong>，支持各种浏览器插件；</li><li>支持自动<strong>拉取BT Tracker</strong>服务器列表，实现BT极速下载；</li><li>支持<strong>开机自启</strong>；</li><li>支持<strong>断点续传</strong>；</li><li>支持<strong>上传/下载限速</strong>；</li><li>支持下载完成<strong>自动关机</strong>；</li><li>支持<a href="http://lightzhan.xyz/index.php/2020/04/16/open-upnp-in-qdown/">路由器穿透（UPnP）</a>，局域网也能高速下载；</li></ol><h2 id="链接-7">链接</h2><ul><li><a href="https://lightzhan.xyz/index.php/qdown/?utm_source=iplaysoft.com&amp;hmsr=iplaysoft.com">官网</a></li><li><strong>2.1.0</strong> 稳定版：<a href="https://lightzhan.lanzout.com/b017ozaud%EF%BC%88%E5%AF%86%E7%A0%81%EF%BC%9Affxa%EF%BC%89">https://lightzhan.lanzout.com/b017ozaud（密码：ffxa）</a></li></ul><h2 id="使用方法-6">使用方法</h2><ul><li><a href="http://lightzhan.xyz/index.php/2020/03/21/lightdownloader-manul-tutorial/">基础使用教程</a>（爽快地使用Qdown）</li><li><a href="http://lightzhan.xyz/index.php/2020/03/21/add-download-task-form-chrome-lightdownloader-tutorial/">从浏览器添加下载</a>（更便捷地使用Qdown）</li><li><a href="http://lightzhan.xyz/index.php/2020/03/21/lightdownloader-setup-tutorial/">程序设置说明</a>（简单设置，快捷使用）</li><li><a href="http://lightzhan.xyz/index.php/2020/04/13/bt-download-problems/">BT下载问题排查</a></li><li><a href="http://lightzhan.xyz/index.php/2020/04/16/open-upnp-in-qdown/">开启路由器穿透及其状态查看</a></li><li><a href="http://lightzhan.xyz/?p=449">设置开机自启动和文件关联</a></li><li><a href="https://lightzhan.xyz/index.php/2020/11/21/watching_movies_on_pc/">通过手机/平板观看Qdown下载的电影</a></li></ul><h2 id="常见问题-3">常见问题</h2><ul><li><p><a href="http://lightzhan.xyz/?p=441">为什么我的下载没有速度？</a></p></li><li><p><a href="http://lightzhan.xyz/index.php/2020/03/21/lightdownloader-setup-tutorial/">为什么设置开机自启提示失败？</a></p></li><li><p><a href="http://lightzhan.xyz/index.php/2020/06/05/qdown-blank-interface-solution/">安装过后主界面白屏（无法显示）的解决办法</a></p></li><li><p><strong>出现认证失败/未连接提示</strong></p><p>请重置一下AriaNG的设置，依次点击下图中的1和2，然后在弹出的对话框中确认重置即可！如果重置后依然认证失败，那么需要<a href="http://lightzhan.xyz/index.php/2020/03/21/rpc-secret-setup-tutorial/">更换rpc密钥</a>。</p><p><img src="https://s2.loli.net/2022/06/18/WkUIFhEHM1usjgl.png" alt=""></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度网盘加速下载</title>
      <link href="/4ddc57c3.html"/>
      <url>/4ddc57c3.html</url>
      
        <content type="html"><![CDATA[<p>本文持续更新，只为大家能更好使用百度网盘</p><h2 id="1-AntDownload">1.<a href="https://anubis.cafe/ced57b9f.html">AntDownload</a></h2><h2 id="2-插件-IDM">2.插件+IDM</h2><p>此部分仅为搬运，感谢脚本作者</p><p>博客原地址：<a href="https://www.cnblogs.com/softxmm/p/13972678.html">https://www.cnblogs.com/softxmm/p/13972678.html</a></p><h3 id="插件">插件</h3><h4 id="前提">前提</h4><p>这是一个油猴脚本，安装脚本之前，必须先安装油猴浏览器扩展（如已安装则跳过）：<br><a href="http://1.softxm.vip/bd/images/Tampermonkey.crx">【第一步】下载油猴</a> --&gt; 如有提示安装，则直接安装即可，否则继续执行第二步<br><a href="https://chrome.zzzmh.cn/help?token=setup">【第二步】安装油猴</a> --&gt; 参考其中章节： <em>一、 拖动安装(推荐)</em></p><h4 id="安装“百度网盘简易下载助手”油猴脚本">安装“百度网盘简易下载助手”油猴脚本</h4><p>脚本安装地址：<a href="https://greasyfork.org/zh-CN/scripts/418182">安装地址一（推荐）</a>   <a href="https://files.cnblogs.com/files/softxmm/jyzs.user.js">安装地址二（备用）</a><br>安装之后，打开百度网盘，即会发现多了一个红色按钮“简易下载助手”<br><img src="https://s2.loli.net/2022/06/18/jemnDtVI2GSzuTr.jpg" alt=""></p><p>勾选文件，点击【简易下载助手】，弹出文件下载窗口。<br>下载窗口支持2种下载方式：<br>1、复制直链地址：复制后就可以到IDM中新建下载任务了<br>2、发送至Aria2：点击后直接发送至Aria2中进行下载（可以在Aria2中看到下载状态）</p><p><img src="https://pic.rmb.bdstatic.com/bjh/fb25f157ada0f737eb0557bab1a60ac8.jpeg" alt=""></p><h3 id="下载">下载</h3><h4 id="方式一：IDM">方式一：IDM</h4><p><em>注：如果你已经有IDM了，那用你自己的就行了，无需下载我提供的版本</em><br><strong>IDM下载</strong>：<a href="https://wwx.lanzoux.com/b01nqc7yj">https://wwx.lanzoux.com/b01nqc7yj</a><br>我提供的IDM是绿色版本，解压后，执行“!)绿化.bat”，就可以正常使用了。<br><strong>IDM配置</strong>：设置4线程及修改UA为 <strong>netdisk;3.0.0.112</strong><br><img src="https://s2.loli.net/2022/06/18/38eBkdFyhNJxAVc.jpg" alt=""></p><p><img src="https://s2.loli.net/2022/06/18/t3xAeJgSI9wNcjq.jpg" alt=""></p><h4 id="方式二：Aria2">方式二：Aria2</h4><p><a href="https://anubis.cafe/96fea2ff.html">软件推荐-Qdown</a></p><p>配置脚本中 aria2 路径</p><ol><li><p>​修改 Aria2 地址与 Qdown 中相同</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images//202206190014430.png" alt=""></p></li><li><p>输入token</p><p>在 Qdown 高级设置中获取</p></li><li><p>完整流程</p></li></ol><p><img src="https://s2.loli.net/2022/06/19/lPvBNm9pjJh56ES.gif" alt=""></p><h3 id="下载演示（我的网络：广东移动-300M）">下载演示（我的网络：广东移动 300M）</h3><p><em>注意以下演示动画中，我使用的是最普通的百度帐号（非VIP帐号，就是大家都有的那种帐号）<br>顺便鄙视一下那些用SVIP帐号来忽悠人的脚本 （︶^︶）=凸</em></p><p><img src="https://s2.loli.net/2022/06/18/eoG3w8ErgkijOLB.gif" alt="IDM下载演示图"></p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images//202206190134910.gif" alt="Aria2下载演示图"></p><p>是不是很简单呢~<s>脚本是完全免费使用的</s>~<br>这脚本耗费了脚本作者不少的时间与精力呢，如果大家觉得好用的话，麻烦在油猴脚本反馈里面给个好评哦，支持开源项目，有你一起同行！！！</p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 百度网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>磁盘打不开提示格式化故障</title>
      <link href="/ff89d496.html"/>
      <url>/ff89d496.html</url>
      
        <content type="html"><![CDATA[<h2 id="现象">现象</h2><p><img src="https://www.diskgenius.cn/exp/img/external-hdd-prompt-format.png" alt="打不开提示格式化"></p><h2 id="解决方案-2">解决方案</h2><h3 id="1-如果是移动存储设备，先换台电脑试试能不能打开">1.如果是移动存储设备，先换台电脑试试能不能打开</h3><h3 id="2-使用-DiskGenius-进行数据恢复">2.使用 DiskGenius 进行数据恢复</h3><p>硬盘分区突然打不开提示未被格式化，可能是物理故障，也可能是逻辑损坏。不论是什么原因都可以先按照上面的方法恢复硬盘上的重要数据。DiskGenius恢复数据的过程是只读的，不会对原始数据及硬盘分区进行任何修改，可放心使用。</p><ol><li><p>下载链接</p><ul><li>官网：<a href="https://www.diskgenius.cn/download.php">https://www.diskgenius.cn/download.php</a></li><li>蓝奏云：<a href="https://wwp.lanzout.com/iyYNr06m6tuj">https://wwp.lanzout.com/iyYNr06m6tuj</a></li></ul></li><li><p>打开DiskGenius软件，找到并选择变成未格式化的硬盘分区，右击该分区，然后点击&quot;智能加载当前分区&quot;菜单项。</p><p>智能加载当前分区这个功能对于损坏不太严重的NTFS分区十分有效，可以快速列出该分区里的文件，并且保留文件原始的目前结构。<img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images//202206190030884.png" alt=""></p><p>如果此功能不起作用，请进行下一步。</p></li><li><p>继续选择该硬盘分区，然后点击&quot;恢复文件&quot;按钮。之后，在弹出的恢复文件对话框上点击&quot;开始&quot;按钮，让软件对该分区进行完整扫描。耐心等待扫描完成。</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images//202206190033223.png" alt=""></p></li><li><p>在扫描结果中寻找需要恢复的文件，然后预览文件并确定文件是否可以被正确恢复。在软件右侧的文件列表中双击某个文件，就可以打开文件预览窗口，如下图所示。若文件可以被正常预览，那说明该文件没有损坏，最终可以被正常恢复。</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images//202206190031273.png" alt=""></p></li><li><p>将想要恢复的文件复制到其他分区，完成硬盘恢复。</p><blockquote><p>提醒：复制文件之前需要输入注册码激活软件，否则无法复制全部文件。</p></blockquote><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images//202206190035939.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硬盘安全弹出</title>
      <link href="/365ba366.html"/>
      <url>/365ba366.html</url>
      
        <content type="html"><![CDATA[<p>下面列举了多种方法，建议按顺序尝试</p><h2 id="1-Windows-自带安全弹出">1. Windows 自带安全弹出</h2><p><img src="https://s2.loli.net/2022/06/18/pkVLv6qMY9NhnFZ.png" alt=""></p><h2 id="2-通过资源监视器弹出">2. 通过资源监视器弹出</h2><ol><li><p>进入资源管理器</p><pre class="line-numbers language-none"><code class="language-none">快捷键 Ctrl+Alt+Delete<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>进入资源监视器</p><p><img src="https://s2.loli.net/2022/06/18/SqasTO4gR5env6V.png" alt=""></p></li><li><p>切换至 cpu 界面，搜索需要弹出盘符，结束相关进程</p><p><img src="https://s2.loli.net/2022/06/18/SafEn2uYGPmIZer.png" alt=""></p><blockquote><p>不要结束 explore 的进程，否则会导致资源管理器崩溃。</p><p>等到其他进程结束后再次搜索，explore  的进程就会自动结束了</p></blockquote></li><li><p>待所有进程结束完毕，使用第一种方法弹出即可</p></li></ol><h2 id="3-通过设备管理器弹出">3.通过设备管理器弹出</h2><ol><li><p><code>Win+R</code>打开运行窗口</p></li><li><p>输入<code>devmgmt.msc</code></p></li><li><p>在便携设备中找到要弹出设备，选择禁用设备</p><p><img src="https://s2.loli.net/2022/06/18/TZ8xCy6MN5V3Ymq.png" alt=""></p></li><li><p>接下来采取方法一弹出即可</p></li></ol><h2 id="4-关机">4.关机</h2><p>关机后设备停用，此时直接拔出设备即可</p><hr><h2 id="忠告">忠告</h2><p>移动存储设备千万不要直接拔插，很容易造成设备损坏，如果其中的数据没有备份，那么问题就更大了</p><h3 id="常见问题-4">常见问题</h3><p>1.<a href="https://anubis.cafe/2022/06/18/ci-pan-da-bu-kai-ti-shi-ge-shi-hua-gu-zhang/">磁盘打不开提示格式化故障</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RSSHub使用经验</title>
      <link href="/e5fd8278.html"/>
      <url>/e5fd8278.html</url>
      
        <content type="html"><![CDATA[<h2 id="RSSHub">RSSHub</h2><h3 id="简介">简介</h3><p>你可以用它来给各种社交媒体、新媒体、论坛、博客、直播、大学通知、科学期刊等等奇奇怪怪的页面<strong>生成订阅源</strong></p><p>18年，DIYgod 大佬启动了 RSSHub 这个项目</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206091003682.png" alt="万物皆可 RSS"></p><p>从此我们跨进了 <strong>万物皆可RSS</strong> 的时代</p><h3 id="官方">官方</h3><p>GitHub：<a href="https://github.com/DIYgod/RSSHub">https://github.com/DIYgod/RSSHub</a></p><p>文档：<a href="https://docs.rsshub.app/">https://docs.rsshub.app/</a></p><h3 id="编写源">编写源</h3><h4 id="1-确认是否有必要写新规则">1.确认是否有必要写新规则</h4><p>有的网站是有提供 <strong>RSS</strong> 的，如果你只是需要全文输出可以结合 <a href="https://blog.mjyai.com/2020/03/23/ubuntu-full-text-rss/">full-text-rss</a> 来实现。<br>有的网站已经有 <strong>RSSHub</strong> 规则了，可以通过 <a href="https://github.com/DIYgod/RSSHub-Radar">RSSHub Radar</a>或 <a href="https://github.com/Cay-Zhang/RSSBud">RSSBud</a> 快速发现和订阅。</p><h4 id="2-克隆-RSSHub-项目">2.克隆 RSSHub 项目</h4><pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;gitclone.com&#x2F;github.com&#x2F;DIYgod&#x2F;RSSHub.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>此处通过 <a href="https://www.gitclone.com/">gitclone</a> 进行加速</p></blockquote><h4 id="3-安装-npm-安装过-npm-请跳过">3.安装 npm (安装过 npm 请跳过)</h4><h4 id="4-开启开发环境">4.开启开发环境</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span><span class="token function">npm</span> run dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后浏览器打开<code>http://localhost:1200</code>。<code>dev</code>模式下每次保存项目就会自动重启应用修改，方便实时调试。</p><p><img src="https://s2.loli.net/2022/06/18/uWmadZ5RKep9Dwy.png" alt="看到此界面即为安装成功"></p><h3 id="RSSHub-Rader-2">RSSHub Rader</h3><p>RSSHub Radar 是 RSSHub 的衍生项目，它是一个可以帮助你快速发现和订阅当前网站 RSS 和 RSSHub 的<strong>浏览器扩展</strong>（也是 DIYgod 大佬的作品）</p><p>安装地址：<a href="https://github.com/DIYgod/RSSHub-Radar/">https://github.com/DIYgod/RSSHub-Radar/</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSS </tag>
            
            <tag> RSSHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux换源</title>
      <link href="/18f26aa6.html"/>
      <url>/18f26aa6.html</url>
      
        <content type="html"><![CDATA[<h2 id="Ubuntu">Ubuntu</h2><ol><li><p>对系统给的镜像源进行备份，以防出问题</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> /etc/apt/sources.list /etc/apt/sources.list.backup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除镜像源文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">rm</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>重新建立镜像源文件并编辑</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">nano</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>复制某种镜像源到 sources.list 中，按 ctrl+o 保存，按 ctrl+x退出</p><blockquote><p>清华镜像源：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu</a></p></blockquote></li><li><p>执行系统更新命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>更新所有软件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UbuntuKylin教程</title>
      <link href="/856b8df8.html"/>
      <url>/856b8df8.html</url>
      
        <content type="html"><![CDATA[<h2 id="下载-4">下载</h2><ol><li><p>官网：<a href="https://www.ubuntukylin.com/downloads/osdownload-cn.html">https://www.ubuntukylin.com/downloads/osdownload-cn.html</a></p></li><li><p>版本选择<img src="https://s2.loli.net/2022/06/17/Pic9I2GNj7Ytf5V.png" alt="选择 X86"></p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/295438346#:~:text=RISC-V">RISC-V vs x86</a></p></blockquote></li><li><p>安装：<a href="https://anubis.cafe/5b0d2e62.html">使用教程-VMware</a></p></li><li><h3 id="换源加速：Linux换源">换源加速：<a href="https://anubis.cafe/18f26aa6.html">Linux换源</a></h3></li></ol><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用教程-VMware</title>
      <link href="/5b0d2e62.html"/>
      <url>/5b0d2e62.html</url>
      
        <content type="html"><![CDATA[<h2 id="虚拟机-VMware">虚拟机 VMware</h2><h3 id="下载-2"><strong>下载</strong></h3><p>官网下载地址：<a href="https://www.vmware.com/cn/products/workstation-pro.html">https://www.vmware.com/cn/products/workstation-pro.html</a><br>以下为官网界面</p><ol><li></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206052153634.png" alt="1"></p><ol start="2"><li></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206052153686.png" alt=""></p><h3 id="安装">安装</h3><p>1.前面没啥好讲的，不停下一步就行</p><ol start="2"><li></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206052211221.png" alt="image-20220605221121185"></p><p>为了方便管理，我开辟了一个新的磁盘分区专门来放虚拟机和安装在虚拟机上的系统。比如我电脑中 VMware 的安装位置就是<code>E:\VMware\</code> 。注：虚拟机最好安装在固态硬盘上。</p><p>3.接下来继续无脑下一步就行</p><p>4.等待，等待过程中可能出现鼠标晃动，屏幕闪烁现象，这都是正常的。</p><p>5.安装完成后的第一次启动会需要许可证密钥。（悄悄提示一下，可以百度搜索有效的许可证密钥。）</p><h3 id="创建虚拟机（以-UbuntuKylin-为例子）">创建虚拟机（以 UbuntuKylin 为例子）</h3><p><img src="https://s2.loli.net/2022/06/17/oU2FOXdK4YrJhsD.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/rk1ZGLzdSAM4mcp.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/Zgp3BQATtxE4zmO.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/RPcznxO3qJKpC7Y.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/hpo2mD8WwO7Nfzq.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/BXOYIQRPWM32tAG.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/FtJs6e4wBaQVv2G.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/bgD9PnajT1zim2K.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/MGY3CdO6Wvqpunb.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/3NyZK4TrEPaBCnJ.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/W2O8wfqCR6jy1pd.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/8Pc31aK6mCpnN9g.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/yOf1u9wSWYa5Kvt.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/DgfSt2ZNHQxJyK8.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/7YREsxahmNunPC1.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/5tamXhrcR92lPvb.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/WMrQqlxC8La2H69.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/aGA57UIbR6iqseo.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/X6voYVqKk1dr5xS.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/gGjsL52PiOZQKvE.png" alt="点击开启虚拟机，安装系统"></p><p><img src="https://s2.loli.net/2022/06/17/Udhx2sQjitqOHzG.png" alt="全选中文"></p><p><img src="https://s2.loli.net/2022/06/17/O1SyTheKnHv3ftu.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/xNWnOvbzPAXSuQZ.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/f8MSWJxCr3vwTD2.png" alt="继续"></p><p><img src="https://s2.loli.net/2022/06/17/MfYANadu7WsQvrL.png" alt="地点自定"></p><p><img src="https://s2.loli.net/2022/06/17/y7iqn6lgHZLBQes.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/IgmGf2Cvb1aWsFP.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/zI5BjZYxfeDcnLU.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/17/MZJdy5fECBRSQrh.png" alt="重启即可"></p><p><img src="https://s2.loli.net/2022/06/17/JS8dIsjQXD7xW9m.png" alt="打开终端"></p><h4 id="设置-root-密码">设置 root 密码</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="安装-VMware-Tools（实现本机与虚拟机之间的复制粘贴）">安装 VMware Tools（实现本机与虚拟机之间的复制粘贴）</h4><p><img src="https://s2.loli.net/2022/06/17/cLYelNZqCjIbHVT.png" alt=""></p><h5 id="补充：安装-VMware-tools-成灰色而无法点击安装的问题">补充：安装 VMware-tools 成灰色而无法点击安装的问题</h5><img src="https://s2.loli.net/2022/06/17/hj2VFzGRCaWfNME.png" alt="拷贝1" style="zoom:67%;" /><p><img src="https://s2.loli.net/2022/06/17/a8MdsZenLOHJDEI.png" alt="拷贝2"></p><p><img src="https://s2.loli.net/2022/06/17/AtTnejyx2Q85Z9z.png" alt="拷贝3"></p><p><img src="https://s2.loli.net/2022/06/17/a8MdsZenLOHJDEI.png" alt="拷贝4"></p><p><img src="https://s2.loli.net/2022/06/17/D4xlnMwmZaHRJCo.png" alt="安装1"></p><p><img src="https://s2.loli.net/2022/06/17/YzQT3qsZ7RHUxwI.png" alt="安装2"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">tar</span> -zxvf 文件名 -C /opt/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>文件名视具体文件名而定，举例 VMwareTools-10.3.2-9925305.tar.gz</p></blockquote><p><img src="https://s2.loli.net/2022/06/17/vjkpeiD4PKq7cWz.png" alt="安装3"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /opt/vmware-tools-distrib/<span class="token function">ls</span><span class="token function">sudo</span> ./vmware-install.pl <span class="token function">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>接下来一路回车</p><p><img src="https://s2.loli.net/2022/06/17/MkHVbLy6JFfQrIi.png" alt="安装4"></p><p><img src="https://s2.loli.net/2022/06/17/9eHXcInSjK4PLM3.png" alt="安装完成"></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 使用教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小说推荐</title>
      <link href="/5a181024.html"/>
      <url>/5a181024.html</url>
      
        <content type="html"><![CDATA[<h2 id="无限流">无限流</h2><ol><li>轮回乐园</li><li>无限神座</li><li>征战乐园</li></ol><h2 id="DND">DND</h2><ol><li>深渊主宰</li><li>银龙的黑科技</li><li></li></ol><h2 id="科幻">科幻</h2><ol><li>异常生物见闻录</li><li>千年回溯</li><li>虫族是怎样炼成的</li></ol><h2 id="同人文">同人文</h2><ol><li>美漫世界霸王轨迹</li><li>美漫世界阴影轨迹</li><li>舌尖上的霍格沃兹</li></ol>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件推荐-B23Downloader</title>
      <link href="/ad9e1a96.html"/>
      <url>/ad9e1a96.html</url>
      
        <content type="html"><![CDATA[<h2 id="B23Downloader">B23Downloader</h2><h3 id="功能介绍-2"><strong>功能介绍</strong></h3><p><strong>B23Downloader</strong> 是专门为<strong>下载 B 站视频</strong>资源而生的，复制粘贴网址即可一键下载 B 站的视频，永久保存到你的电脑上。</p><h3 id="优点-3">优点</h3><ol><li>支持在线视频、直播、漫画等多种内容</li><li>软件基于 Qt 6 开发，完全费且开源</li><li>用户无需任何复杂的操作，复制粘贴网址即可一键下载 B 站的视频</li></ol><h3 id="链接-3">链接</h3><p>蓝奏云：<a href="https://wwp.lanzout.com/ikwEm06fbxef">https://wwp.lanzout.com/ikwEm06fbxef</a></p><p><img src="https://s2.loli.net/2022/06/15/qIc2BwgkLljyihC.png" alt=""></p><p><img src="https://s2.loli.net/2022/06/15/yKomzX3i4SxDqMa.png" alt="支持下载 4K 高清、1080P 60 帧等不同清晰度的视频"></p><blockquote><p>不过目前只支持<code>.flv</code>格式，关于这点可以使用视频格式转换器进行切换格式</p></blockquote><p><img src="https://s2.loli.net/2022/06/15/E1CmlWgeT8ridVZ.png" alt="支持批量下载分集/剧集/全集"></p><p><img src="https://s2.loli.net/2022/06/15/zQm7YhXtI4W5LqS.png" alt="支持漫画、直播等资源"></p><h3 id="注意事项-3">注意事项</h3><ol><li>当然了，一些原本需要「<a href="https://www.iplaysoft.com/go/bilibili">B 站大会员</a>」才能观看的独家视频，B23Downloader 同样也需要登录你的会员账号才能下载，点击软件界面左上方的「登录」按钮即可。由于是使用扫码登录，可以免去账号<a href="https://www.iplaysoft.com/tag/%E5%AF%86%E7%A0%81">密码</a>泄露的风险，安全性上基本是没有什么问题的。</li><li>不支持下载收藏夹</li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件推荐 </tag>
            
            <tag> bilibili </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件推荐-Listary Pro</title>
      <link href="/dccb6f1b.html"/>
      <url>/dccb6f1b.html</url>
      
        <content type="html"><![CDATA[<h2 id="功能介绍-3"><strong>功能介绍</strong></h2><p>改善了<code>Windows</code>低效的文件搜索</p><h2 id="优点-4">优点</h2><ol><li>让资源管理器和文件对话框的集成增强，支持超方便的“路径跳转”+“文件快速定位”等功能</li><li>拥有 Everything 般闪电般毫秒级的全盘文件搜索功能 (支持拼音模糊搜索)</li></ol><h2 id="链接-4">链接</h2><p>官网：<a href="https://www.listary.com/?utm_source=iplaysoft.com&amp;hmsr=iplaysoft.com">https://www.listary.com/?utm_source=iplaysoft.com&amp;hmsr=iplaysoft.com</a></p><p>蓝奏云：<a href="https://wwp.lanzout.com/iXRPr06m75zg">https://wwp.lanzout.com/iXRPr06m75zg</a></p><h2 id="使用方法-3">使用方法</h2><ol><li><p>任意界面双击Ctrl打开搜索框<img src="https://s2.loli.net/2022/06/14/zymSqpsE76JuIBY.png" alt=""></p></li><li><p>资源管理器内任意位置输入直接搜索，列表中移动鼠标，资源管理器同步自动定位文件</p><p><img src="https://s2.loli.net/2022/06/14/SFYb7czmiJg4e3O.png" alt=""></p></li><li><p>搜索网络资源，一触即达</p><ul><li>设置网络搜索关键词</li></ul><p><img src="https://s2.loli.net/2022/06/14/1tk7QHz4mFO2TVs.png" alt=""></p><ul><li>任意位置双击Ctrl，激活搜索框，输入关键词+空格，开始搜索</li></ul><p><img src="https://s2.loli.net/2022/06/14/1YABLzS6rbP9Mxq.png" alt=""></p></li><li><p>快速切换定位（核心亮点功能）</p><ul><li>当处于打开、另存为对话框，对话框下方会浮现 Listary 搜索框，你直接搜索文件路径即可。</li><li>如果你要打开、另存为的文件夹已经打开（如果打开多个文件夹，以最后一次激活的文件夹为准），使用Listary的快速切换功能，只需单击Ctrl + G即可立即跳转到目标文件夹。<img src="https://s2.loli.net/2022/06/14/K6rzk8ltnFaO3LR.gif" alt=""></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件推荐-AntDownload</title>
      <link href="/ced57b9f.html"/>
      <url>/ced57b9f.html</url>
      
        <content type="html"><![CDATA[<h1>软件推荐-AntDownload</h1><h2 id="AntDownload">AntDownload</h2><p><img src="https://s2.loli.net/2022/06/14/bSEfJ8zpAaRqMVi.png" alt=""></p><h3 id="功能介绍"><strong>功能介绍</strong></h3><p>可以说是 <strong>Pandown</strong> 的功能简化版，仅支持百度网盘的链接不限速下载</p><h3 id="优点-2">优点</h3><ol><li>相对于 IDM 的方法，可以进行批量下载</li><li>无需登录，免除封号风险</li><li>完全免费、界面无广告</li><li>绿色免安装</li><li>直接复制粘贴网盘分享链接，即可解析并直接下载文件</li><li><strong>下载不限速，支持多线程加速</strong></li><li>可以修改默认下载路径</li></ol><h3 id="链接-2">链接</h3><p>蓝奏云：<a href="https://wwt.lanzouy.com/irpcr05d3iqb">https://wwt.lanzouy.com/irpcr05d3iqb</a></p><h3 id="使用方法-2">使用方法</h3><p>解压即可用</p><p><img src="https://s2.loli.net/2022/06/14/1oSarR2dvqZCNsn.png" alt=""></p><p>下载的文件解压后直接打开exe文件即可使用，需要注意的是，下载器路径中的文件夹<strong>不要带有空格</strong>！否则会初始化失败！打开软件出现初始化成功说明可以用了！</p><p><img src="https://s2.loli.net/2022/06/14/IiHREq52PhSTFGk.png" alt="解压后"></p><p><img src="https://s2.loli.net/2022/06/14/v5bA3tpE49SPm6n.png" alt=""></p><p>软件无需登录毒盘账号，所以无需担心信息泄露问题！复制分享链接，软件会自动读取剪切板并进行解析！</p><p><img src="https://s2.loli.net/2022/06/14/H8Mg1FYnrGUxeBc.png" alt=""></p><p>解析完毕后所有文件出现在左侧列表中，可以选择批量下载！</p><p><img src="https://s2.loli.net/2022/06/14/H8Mg1FYnrGUxeBc.png" alt=""></p><p>如果提示链接不存在，那就检查一下链接，很可能是因为资源是违规的。</p><p><img src="https://s2.loli.net/2022/06/14/75zFIGYLjlDWViT.png" alt=""></p><blockquote><p>比如影视资源等，很容易违规，真让人头疼！这种情况没办法，只能重新寻找资源了！</p></blockquote><h3 id="注意事项-2">注意事项</h3><ol><li><p>尽量不要使用Antdownload下载器下载自己私人的文件，特别是自已的小视频、文档等私密文件，因为它是使用别人的账号来加速下载的。</p></li><li><p>如果速度怎么也起不来，说明这个分享的文件被限速了，那可以试试把这个文件转存到自己的百度网盘里，然后再分享出来下载。</p><blockquote><p>从资源安全的角度来讲，建议大家存到自己网盘里再分享下载</p></blockquote></li><li><p>如果怎么也下载不了，看看是不是初始化没有成功。</p></li><li><p>尽管 <strong>AntDownload</strong> 非常简单好用，但根据实测，该软件在 Windows 11 系统下会被 Windows 安全中心 (Microsoft Defender) 报毒，<strong>添加其文件夹到排除项后可以正常使用</strong>。这类第三方工具经常会有此类问题，所以如果你对软件的安全存在疑虑，那么建议不要使用，入手会员才是王道。</p><p>当然了，确实想要使用它的同学，也可以借助 Parallels Desktop、VMWare 等软件在虚拟机系统里运行，来避免软件风险影响到原机的系统。</p></li></ol><h3 id="常见问题">常见问题</h3><ol><li>如果出现无界面情况，就关闭网络，待出现界面后再次开启网络</li></ol><p>最后，这类第三方工具基本都是作者凭兴趣爱好做出来的作品，不知道哪一天就突然用不了的了，所以还是那一句——且用且珍惜吧！</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 百度网盘 </tag>
            
            <tag> 软件推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>导弹拦截</title>
      <link href="/1fa451f3.html"/>
      <url>/1fa451f3.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目链接-2">题目链接</h2><h3 id="P1020-NOIP1999-普及组-导弹拦截"><a href="https://www.luogu.com.cn/problem/P1020">P1020 [NOIP1999 普及组] 导弹拦截</a></h3><h2 id="解析">解析</h2><p>​这题相信大家应该都做过，只是这题多加了一问。</p><p>​原题是只求最大拦截数，只需求最长不上升子序列。水水的题目，加上另一问求最少需要的系统数，就变成了普及+了。但还是不难，其实只是再求一个最长不下降子序列。</p><p>​真正的难度是他的数据量！！！</p><p>那么如何分析呢？</p><p>见样例：</p><pre class="line-numbers language-none"><code class="language-none">389 207 155 300 299 170 158 65T [1] [2] [3] [4] [5] [6] [7] [8]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>最长不上升子序列：取前面比当前的值大，且长度最长的数；<br>用F[]来表示到取到第i个数所能得到的最大长度，T[]储存原始数值；<br>递归式就是：<code>F[i]=max(F[i],F[j]+1);(T[j]&gt;=T[i]&amp;&amp;j&lt;i)</code></p><h4 id="代码实现-3">代码实现</h4><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">for(i&#x3D;1;i&lt;&#x3D;n;++i)&#x2F;&#x2F;第一问 &#123;F[i]&#x3D;1;&#x2F;&#x2F;每一个序列最少也能拦截一个导弹for(int j&#x3D;1;j&lt;i;++j)if(T[i]&lt;&#x3D;T[j])F[i]&#x3D;max(F[i],F[j]+1);ANS1&#x3D;max(ANS1,F[i]);&#x2F;&#x2F;用ANS1储存第一问的答案&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们看一下样例的拦截个数：</p><p>F [1] [2] [3] [4] [5] [6] [7] [8]</p><p>1　2  3    2 3  4  5  6</p><p>在3 -&gt; 4 的时候 F[i]的值便小了，而T[3]=155,T[4]=300</p><p>好像和所需的系统个数是一样的咧！</p><p>那么遵循“大胆猜测，从不证明的原则” 我们自己手动推测几个数据，发现“k=最长不下降子序列的长度”这一猜想是正确的！！。</p><p>那问题就简单了！我们只需求出最长不下降子序列就可以了！！</p><p>状态转移方程式 F[i]=max(F[i],F[j]+1);(T[i]&lt;T[j]&amp;&amp;j&gt;i)</p><p>代码实现：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">memset(F,0,sizeof(F));&#x2F;&#x2F;要清除一下F[]for(i&#x3D;n;i&gt;&#x3D;1;--i)　　&#x2F;&#x2F;问题二&#123;    F[i]&#x3D;1;for(int j&#x3D;n;j&gt;i;--j)if(T[i]&lt;T[j])F[i]&#x3D;max(F[i],F[j]+1);    ANS2&#x3D;max(ANS2,F[i]); &#x2F;&#x2F;ANS2储存第二问答案&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么完整代码如下：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F; 这个代码可以得100分，总分200分；#include&lt;iostream&gt;  #include&lt;cstring&gt;#include&lt;cstdio&gt;#include&lt;cctype&gt;using namespace std;int T[100000],F[100000];int main(void)&#123;    &#x2F;&#x2F;freopen(&quot;in.txt&quot;,&quot;r&quot;,stdin); &#x2F;&#x2F;在本地测试时使用     int i&#x3D;1;    while(scanf(&quot;%d&quot;,&amp;T[i])&#x3D;&#x3D;1)i++;    int n&#x3D;i-1,ANS1&#x3D;0,ANS2&#x3D;0;    for(i&#x3D;1;i&lt;&#x3D;n;++i)&#x2F;&#x2F;第一问 ，求最长不上升子序列    &#123;        F[i]&#x3D;1;        for(int j&#x3D;1;j&lt;i;++j)if(T[i]&lt;&#x3D;T[j])F[i]&#x3D;max(F[i],F[j]+1);        ANS1&#x3D;max(ANS1,F[i]);    &#125;    memset(F,0,sizeof(F));&#x2F;&#x2F;清除F[]    for(i&#x3D;n;i&gt;&#x3D;1;--i)&#x2F;&#x2F;第二问，求最长不下降子序列    &#123;        F[i]&#x3D;1;        for(int j&#x3D;n;j&gt;i;--j)if(T[i]&lt;T[j])F[i]&#x3D;max(F[i],F[j]+1);        ANS2&#x3D;max(ANS2,F[i]);    &#125;    printf(&quot;%d\n%d&quot;,ANS1,ANS2);&#x2F;&#x2F;输出    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上是普及组需要的程度！！！接下来讲提高组！！！</p><p>这题的数据是加强版的，所以上述方法是不行滴！</p><p>那么要怎么办呢？？？</p><p>此处就需要学习一下树状数组这密西！！！推荐博客：　　<a href="https://blog.csdn.net/bestsort/article/details/80796531"><em><strong>树状数组 数据结构详解与模板(可能是最详细的了)</strong></em></a></p><p>看完树状数组，我们来讲一下具体实现！！！</p><p>先上代码：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;加强版数据 200分#include&lt;algorithm&gt;#include&lt;cstring&gt;#include&lt;cmath&gt;#include&lt;cstdio&gt;#include&lt;iostream&gt;using namespace std;long long w[100008],f[100008], maxn&#x3D;0;inline long long lowbit(long long x)  &#x2F;&#x2F;lowbit函数，具体干嘛详见：https:&#x2F;&#x2F;blog.csdn.net&#x2F;bestsort&#x2F;article&#x2F;details&#x2F;80796531&#123;return x&amp;(-x);&#125;inline void Add_Tree(long long x,long long  y) &#x2F;&#x2F;将当前序列长度插入树状数组中&#123;for(long long i&#x3D;x; i&lt;&#x3D;maxn; i+&#x3D;lowbit(i)) f[i]&#x3D;max(f[i],y);&#125;inline long long Query_Tree(long long x)&#x2F;&#x2F;查询大于x的最大长度！！！&#123;long long Ans&#x3D;0;for(long long i&#x3D;x; i&gt;&#x3D;1; i-&#x3D;lowbit(i)) Ans&#x3D;max(Ans,f[i]);return Ans;&#125;int main(void)&#123;&#x2F;&#x2F;freopen(&quot;in.txt&quot;,&quot;r&quot;,stdin);  &#x2F;&#x2F; 本地输入时必备long long n&#x3D;1,Ans1&#x3D;0,Ans2&#x3D;0;  &#x2F;&#x2F; n为导弹总个数，ANS1为while(scanf(&quot;%d&quot;,&amp;w[n])!&#x3D;EOF)maxn&#x3D;max(maxn,w[n]),n++;  &#x2F;&#x2F; 用maxn存储导弹最大高度n--;for(long long i&#x3D;n; i&gt;&#x3D;1; --i) &#x2F;&#x2F; 从后往前寻找最长不下降子序列&#123;long long T&#x3D;Query_Tree(w[i])+1; &#x2F;&#x2F; 寻找到第i个导弹最大拦截数Add_Tree(w[i],T);&#x2F;&#x2F; 把当前长度加入树状数组中Ans1&#x3D;max(Ans1,T);&#x2F;&#x2F; ANS1为第一问答案&#125;memset(f,0,sizeof(f));for(long long i&#x3D;1; i&lt;&#x3D;n; ++i)&#x2F;&#x2F; 从前往后寻找最长下降子序列&#123;long long T&#x3D;Query_Tree(w[i]-1)+1;&#x2F;&#x2F;注意 w[i]-1，因为是在找最长下降子序列Add_Tree(w[i],T);Ans2&#x3D;max(Ans2,T);&#x2F;&#x2F;Ans2为第二问&#125;printf(&quot;%lld\n%lld&quot;,Ans1,Ans2);&#x2F;&#x2F;输出return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p></p><p></p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
            <tag> 最长不上升子序列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>乘法逆元</title>
      <link href="/bfaab9bd.html"/>
      <url>/bfaab9bd.html</url>
      
        <content type="html"><![CDATA[<h3 id="定义-3">定义</h3><p>当 ax ≡ 1( mod p)， x 即为 a 在mod p 意义下的逆元。<br>逆元的数学符号是 inv ，a 在mod p 意义下的逆元记作 inv(a,p)。</p><h3 id="证明">证明</h3><h4 id="费马小定理">费马小定理</h4><p><img src="https://images-of-ansubis.oss-cn-hangzhou.aliyuncs.com/202207231357072.png" alt=""></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int gcd(int a,int b)&#123;if(b&#x3D;&#x3D;0) return a;return gcd(b,a%b);&#125;int pow(int a,int b,int p)&#x2F;&#x2F;快速幂 &#123;int ans&#x3D;1;for(; b; b&gt;&gt;1)&#123;if(b&amp;1&#x3D;&#x3D;1) ans*&#x3D;(a%p);a&#x3D;a*a%p;&#125;return ans;&#125;int inv(int a,int p)&#123;if(gcd(a,p)!&#x3D;1) return -1;&#x2F;&#x2F;不符合费马小定理 return pow(a,p-2);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="拓展欧几里得">拓展欧几里得</h4><p><img src="https://images-of-ansubis.oss-cn-hangzhou.aliyuncs.com/202207231357715.png" alt=""></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int ExGcd(int a,int b,int&amp; X,int&amp; Y)&#123;if (b&#x3D;&#x3D;0)&#123;x&#x3D;1;y&#x3D;0;return a;&#125;int ans&#x3D;ExGcd(b,a%b,x,y);&#x2F;&#x2F;先计算底层x yint temp&#x3D;y;y&#x3D;x-(a&#x2F;b)*y;x&#x3D;temp;return ans;&#125;int inv(int a,int p)&#123;int x,y;if(ExGcd(a,p,x,y)!&#x3D;1) return -1;&#x2F;&#x2F;不符合拓展欧几里得算法return (x%p+p)%p;&#x2F;&#x2F;正数化 &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分数取模</title>
      <link href="/49708d8.html"/>
      <url>/49708d8.html</url>
      
        <content type="html"><![CDATA[<h2 id="前置知识-5">前置知识</h2><h3 id="乘法逆元-2"><a href="https://anubis.cafe/bfaab9bd.html">乘法逆元</a></h3><h2 id="原理-4">原理</h2><h3 id="定义-4">定义</h3><p><img src="https://images-of-ansubis.oss-cn-hangzhou.aliyuncs.com/202207231359457.png" alt="乘法逆元"></p><h3 id="计算"><strong>计算</strong></h3><p><img src="https://images-of-ansubis.oss-cn-hangzhou.aliyuncs.com/202207231359948.png" alt=""></p><h2 id="代码实现-5">代码实现</h2><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">long long fastPow(long long a, long long k, long long p)&#123;  &#x2F;&#x2F; a 底数， k 指数， 求 a^k mod p    long long res &#x3D; 1;    a%&#x3D;p;    while(k &gt; 0)&#123;        if (k &amp; 1) res &#x3D; res * a % p;        a &#x3D; a * a % p;        k &gt;&gt;&#x3D; 1;    &#125;    return res;&#125;long long fractionMod(long long a, long long b, long long p)&#123;  &#x2F;&#x2F; a&#x2F;b mod p    return ((a % p) * fastPow(b, p-2, p)) % p;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows系统关闭自动更新</title>
      <link href="/bfeed181.html"/>
      <url>/bfeed181.html</url>
      
        <content type="html"><![CDATA[<h2 id="Win-10">Win 10</h2><h3 id="方法一：禁止Update服务">方法一：禁止Update服务</h3><p>​按下<code>Win+R</code>组合键打开运行，输入<code>services.msc</code>启动 Windows 的服务窗口。</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206121657292.png" alt=""></p><p>向下翻找，找到<code>Windows Update</code>双击打开，先停止服务状态后再将其中的启动类型设置为【禁用】。</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206121651424.png" alt="找到后双击打开，按此图操作"></p><p>​在【恢复】选项卡中，将第一次失败、第二次失败和后续失败都设置为无操作。<img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206121700134.jpeg" alt=""></p><h3 id="方法二：">方法二：</h3><h3 id="联想专用方法">联想专用方法</h3><p>使用联想官方软件：<a href="https://iknow.lenovo.com.cn/detail/dc_178562.html">https://iknow.lenovo.com.cn/detail/dc_178562.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JetBrains使用经验</title>
      <link href="/e326191b.html"/>
      <url>/e326191b.html</url>
      
        <content type="html"><![CDATA[<h1></h1><h2 id="启动出现Caused-by-java-net-BindException-Address-already-in-use-bind导致无法启动">启动出现<code>Caused by: java.net.BindException: Address already in use: bind</code>导致无法启动</h2><h3 id="具体表现">具体表现</h3><ul><li>可以显示启动logo</li><li>随后弹出报错窗口，信息如下：</li></ul><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206121632669.png" alt=""></p><h3 id="原因">原因</h3><p>端口被占用</p><h3 id="解决方案">解决方案</h3><p>打开 <code>cmd</code> 后输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">net stop winnatnet start winnatnetsh int ipv4 <span class="token builtin class-name">set</span> dynamicport tcp <span class="token assign-left variable">start</span><span class="token operator">=</span><span class="token number">49152</span> <span class="token assign-left variable">num</span><span class="token operator">=</span><span class="token number">16383</span>netsh int ipv4 <span class="token builtin class-name">set</span> dynamicport udp <span class="token assign-left variable">start</span><span class="token operator">=</span><span class="token number">49152</span> <span class="token assign-left variable">num</span><span class="token operator">=</span><span class="token number">16383</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JetBrains </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图床</title>
      <link href="/105e3a7d.html"/>
      <url>/105e3a7d.html</url>
      
        <content type="html"><![CDATA[<h1>一、什么是图床</h1><p>图床其实是互联网中存储图片的空间，作为一个人的云端图片链接</p><h1>二、为什么要图床</h1><p>​大部分人写博客都用<code>markdown</code>，而<code>markdown</code>的图片是通过链接的方式进行传输的的，因此，如果是在本电脑上直接嵌入的文件没办法在网络上访问（除非你把电脑长时间开机并且开放~极其危险）。</p><p>​因此一个云图片链接就很有必要了，而网上直接找到的链接不具有可靠性，可能哪天就挂了（自己搭图床也不知道什么时候挂），因此搭建自己的图床还是很有必要的。</p><h1>三、怎么搭建图床</h1><p>​大家可以使用一些免费（必须）的图床</p><p>​这里选择的是通过<code>GitHub</code>来搭建个人图床（珍惜<code>GitHub</code>吧，它已经被开发了很多奇怪的用法）</p><h2 id="1-准备工作">1. 准备工作</h2><blockquote><p>一个 Github 账号</p></blockquote><h2 id="2-搭建工作">2. 搭建工作</h2><ol><li><p>登录你的 Github 之后，创建一个新的仓库</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206041529014.png" alt=""></p></li><li><p>填写仓库先关资料，一般只需要选一个合适的仓库名，然后确保仓库为 <code>public</code> 其他的保持默认就好；</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206041530184.jpeg" alt=""></p></li><li><p>一般创建成功之后，会出现如下界面，至此，我们的图床算是创建好了，接下来就是如何上传图片了；</p></li></ol><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206041530476.jpeg" alt=""></p><h2 id="3-上传图片">3.上传图片</h2><p>通过上面的步骤，我们的图床时搭建好了，但是通过传统的方法向 Github 上传图片太麻烦了，这里我们推荐使用一个开源图床工具 <a href="https://link.zhihu.com/?target=https%3A//molunerfinn.com/PicGo/">PicGo</a> （windows 系统下载<code>.exe</code>）来作为我们的图片上传工具；</p><p>安装完成后，主界面如下：</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206041531333.jpeg" alt=""></p><ol><li><h3 id="GitHub-生成令牌">GitHub 生成令牌</h3><ul><li>跳转网址</li></ul><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;github.com&#x2F;settings&#x2F;tokens<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>生成令牌</li></ul><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206041534520.png" alt=""></p><p>勾选信息并生成令牌</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206041535126.jpeg" alt=""></p><p><code>token</code> 生成，注意它只会显示一次，所以你最好把它复制下来到你的备忘录存好，方便下次使用，否则下次有需要重新新建；</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206041536806.jpeg" alt=""></p></li><li><p>配置 <code>PicGo</code></p></li></ol><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206041538365.png" alt=""></p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206041539297.jpeg" alt=""></p><h2 id="4-CDN-加速（必须使用）">4.CDN 加速（必须使用）</h2><ul><li><strong>自定义域名（cdn）加速，在自定义域名处填写</strong></li></ul><blockquote><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">https</span><span class="token punctuation">:</span><span class="token header-value">//fastly.jsdelivr.net/gh/用户名/仓库名</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><h2 id="6-Typora-自动上传">6.Typora 自动上传</h2><h4 id="下载链接">下载链接</h4><p>（仅供学习使用，商业用途请<strong>支持正版</strong>）：<a href="https://wwp.lanzout.com/ilAou064myvi">https://wwp.lanzout.com/ilAou064myvi</a></p><h4 id="使用教程-2"><strong>使用教程</strong></h4><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206091155901.png" alt="1"></p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206091155750.png" alt="2"></p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206091156476.png" alt="验证图片上传选项（若失败，配置Picgo.app 的监听端口）"></p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206091157984.png" alt="打开PicGo,配置Picgo.app 的监听端口"></p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206091159396.png" alt=" 测试图片上传，复制图片到Typora"></p><h2 id="6-常见问题">6.常见问题</h2><h4 id="未完待续">未完待续</h4>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国内镜像加速</title>
      <link href="/f7670301.html"/>
      <url>/f7670301.html</url>
      
        <content type="html"><![CDATA[<p>5</p><h2 id="软件类">软件类</h2><h3 id="npm">npm</h3><h4 id="链接">链接</h4><h4 id="https-npmmirror-com"><a href="https://npmmirror.com/">https://npmmirror.com/</a></h4><h4 id="使用教程（也可以看官方文档）">使用教程（也可以看官方文档）</h4><ol><li><p>安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npmmirror.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>支持 <code>npm</code> 除了 <code>publish</code> 之外的所有命令, 如:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#未加速 </span><span class="token function">npm</span> <span class="token function">install</span> hexo-cli -g<span class="token comment">#加速后</span>cnpm <span class="token function">install</span> hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> 资源整合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑选购</title>
      <link href="/c62a0d60.html"/>
      <url>/c62a0d60.html</url>
      
        <content type="html"><![CDATA[<p>这篇文章是持续更新的，差不多几天更新一次吧，有标题的内容必定会更（这个不拖）</p><h2 id="笔记本">笔记本</h2><p>推荐大家阅读：<a href="https://zhuanlan.zhihu.com/p/137507566">https://zhuanlan.zhihu.com/p/137507566</a></p><p>对上述博文的一些个人看法与补充</p><ol><li><p>别等促销买</p><p>618降价，本质上来讲是处理退换机（即京东七天无理由退换后的翻新机），退换机这东西，十个买五个坑，运气好点跟新机没啥区别，运气差就不说了。实在点讲，<strong>你都花大几千去买电脑了，图着省那几百块钱，结果买到个糟心货，这不是闲的吗？</strong></p></li><li><p>不要旺季买</p><p>所谓不要旺季买，就算不要在电脑贵的时候买，每年 6-10 月高考生们解放后，就会开始采购电脑，那么<strong>厂商就开始割韭菜了</strong>。（ 举个离谱的例子，当时我高考完那天买电脑7600，两个月后一毛一样的配置9000+ ）。</p><p>所以我们要挑电脑便宜的时候买，这个跟上条有着本质区别，这个是指<strong>整体市场的降价</strong>，上条是指<strong>临时性或个别的降价</strong>。</p></li><li><p>小白不要找第三方</p><p>这点本质上来说，我是认同的，<strong>生人宰一半，熟人大满贯</strong>，这个确实就是现在行业的整体情况。</p><p>而且很多买家（特别是大一新生）或多或少都会更倾向于熟人，特别是老一辈人，然后就被坑了。</p></li></ol><h3 id="CPU">CPU</h3><h4 id="选择方法">选择方法</h4><h2 id="台式机">台式机</h2><p>说不定我什么时候就写了呢</p><h2 id="常见电脑购买后问题">常见电脑购买后问题</h2><h3 id="1-机器故障问题">1.机器故障问题</h3><p><strong>这点就不得不着重说一下：电子产品是有故障率的…</strong></p><p>它是有故障率的，它是有故障率的，它是有故障率的。</p><blockquote><p>重要的事情说三遍</p></blockquote><p><strong>抽检合格不代表这批货出厂的一定没有故障，这是个很简单的数学问题。</strong></p><p>机器到你手上有明显的问题，只要不是换一次就出现一次故障，那只能说明到你手上的这台有问题，你恰好中奖而已…</p><p>并不代表这是一个普遍性的故障，也不代表一个品牌的水平。</p><p>这也是一个很简单的数学问题。</p><p>很多极端评论的人似乎并没有这种初中数学概念。</p><p><strong>但是，真实世界中的概率也是不跟你开玩笑的，你在游戏中基本看不到真随机，因为真随机的体验非常差。（当然，也可能体验好到不讲道理）</strong></p><p>现实世界可是真随机，也就是说你要是个老倒霉蛋，你换了一次出问题再换一次还出问题，那其实也是&quot;正常&quot;的，这个情况下，<strong>我建议你直接一个货的退，别浪费时间，你跟这个品牌犯冲。</strong></p><p>总的来说，只要到手时机器发生故障，不是因为被偷换了硬件，都是正常现象，去 **保修 **就行，不用过去极端的去看待。</p><h3 id="2-机器热是否代表散热差"><strong>2.机器热是否代表散热差</strong></h3><p>这也是一个经典问题，很多人觉得机器我摸着热，就是散热差。</p><p>这实际上是两个概念，一个是表面温度给用户的体验，一个是实际的散热能力。</p><p>一般来说，表面温度更多的是指输入区域的温度（键盘+腕托），都是以图来展示其满负载下的高温区域。这里说的更为笼统一点，表达的意思大家能意会就行，并不是严格上的表面温度，因为还可能有底壳温度之类的用户体验存在。</p><p>当然，在2022这个笔电行业高度内卷化的今天，表面温度也确实是一个必要的，厂商必须在意的东西。</p><p>这里只是说下每个人对表面温度感知的阈值不同，而且实际上主流轻薄本或者游戏本，百分之80在表面温度上面已经解决的不错了，是不会让你有很明显的感知（就是受不了的那种感知）——除非你特意在高负载的时候把手指往出风口或者键盘上面去摸，那我只能说作死不太好。</p><blockquote><p>轻薄本身就有代价（同性能释放下表面温度更高，风扇需要转的更快，或者用更贵的硬件去达到一样的要求），性能调教激进（表面温度再高一层），风扇调教激进（吵）。</p></blockquote><h3 id="3-售后问题">3.<strong>售后问题</strong></h3><p>售后看地区，甚至看某个具体的店。</p><p>这点对于有售后的品牌来说，基本都是如此。</p><p>最好去直属售后点，别去所谓的授权售后点。</p><p>当然，一线品牌更为规范，也有更多的直属售后点。</p><p>外包性质的售后最大最大的问题就是：服务质量的稳定性很差。</p><p>因为没有官方的直属售后点，或者很少…导致用户体验的观感非常的参差不齐。</p><blockquote><p>就算是直属售后点素质依然是参差不齐的，何况是授权的呢？何况是外包加盟性质的呢？</p></blockquote><p>为什么会这样？我们的城市很多，售后点要广覆盖，这样就导致很多都是加盟性质的店铺负责售后…</p><p>从业人员水平素质参差不齐是很正常的，特别是授权维修点。</p><p>就好像苹果售后——只要城市有天才吧，就去天才吧一个道理。很多时候天才吧给你做售后，基本上二话不说就给你换了。授权维修点售后能跟你扯皮的事情多了去了。</p><p>所以，你觉得你碰到的售后不好，可能只是那个店素质不行…</p><p>你觉得售后好，可能只是恰好给你售后的那个店铺，或者那个点，或者干脆是直属售后点，他们的素质高。</p><h3 id="4-蓝屏问题：">4.<strong>蓝屏问题</strong>：</h3><p><strong>非硬件故障导致的蓝屏问题，一般可以通过重装系统解决。</strong></p><p>当然，你可以去埋怨，为啥别的笔记本电脑出厂好好的根本不会蓝屏，为啥我的就会？</p><p>这确实也是笔记本品牌的问题（但其实很多时候还是微软的某次更新导致的），但是这算是问题里面可能是最小的问题了。。</p><p>如果你非常的在乎这种事情，同时又不懂整，我强烈不建议你买“小品牌”的电脑。</p><p>如果是因为微软更新的问题导致的，对于生产力用途的电脑来说，<strong>我个人是强烈推荐你把自动更新关掉的</strong>，请看：</p><h2 id="特别感谢-2">特别感谢</h2><h3 id="夏蒙乾"><a href="https://www.zhihu.com/people/xiamengqian/posts">夏蒙乾</a></h3>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电脑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部署到云服务器</title>
      <link href="/e80e623c.html"/>
      <url>/e80e623c.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装-4">安装</h2><h3 id="一、安装-Node-js">一、安装 Node.js</h3><h4 id="Ubuntu-2">Ubuntu</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> nodejs<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">npm</span><span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> -g n<span class="token function">sudo</span> n stable <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="CentOS">CentOS</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> gcc-c++ <span class="token function">make</span>yum -y <span class="token function">install</span> nodejs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="验证">验证</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">node</span> -v <span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="二、安装-Git-和-Nginx">二、安装 Git 和 Nginx</h3><h4 id="Ubuntu-3">Ubuntu</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="CentOS-2">CentOS</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token function">git</span> nginx -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="配置-3">配置</h2><h3 id="Git-配置">Git 配置</h3><h4 id="1、在云服务器上创建一个-GIT-用户，用来运行-GIT-服务">1、在云服务器上创建一个 GIT 用户，用来运行 GIT 服务</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> adduser <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后输入密码（虽然看不见，但是确实有输进去）</p><p>然后一路回车，最后按 y</p><p>2、创建证书 （如果用账号密码登录的话，这一步不用执行）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#切换到git用户：</span><span class="token function">su</span> <span class="token function">git</span><span class="token comment">#创建.ssh目录：</span><span class="token function">sudo</span> <span class="token function">mkdir</span> .ssh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> <span class="token number">700</span> .ssh<span class="token comment">#然后在云服务创建authorized_keys公钥保存文件：</span><span class="token function">sudo</span> <span class="token function">touch</span> .ssh/authorized_keys <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> <span class="token number">600</span> .ssh/authorized_keys<span class="token function">chmod</span> <span class="token number">700</span> ~/.ssh<span class="token function">vim</span> ~/.ssh/authorized_keys    <span class="token comment">#将ssh密钥粘贴进去</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用<code>cat ~/.ssh/id_rsa.pub</code>查看本地密钥，并复制粘贴</p><h4 id="3、建git仓库目录-切回-root-账户">3、建git仓库目录(切回 root 账户)</h4><p>创建一个名为blog的git仓库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /var/repo<span class="token builtin class-name">cd</span> /var/repo<span class="token function">git</span> init --bare blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="4-配置-GIT-HOOKS">4.配置 GIT HOOKS</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /var/repo/blog.git/hooks/post-receive<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token function">git</span> --work-tree<span class="token operator">=</span>/var/www/hexo --git-dir<span class="token operator">=</span>/var/repo/blog.git checkout -f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后保存退出，并设置权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> +x /var/repo/blog.git/hooks/post-receive<span class="token function">chown</span> -R git:git blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="5、为了安全考虑，禁用GIT用户的SHELL-登录权限配置">5、为了安全考虑，禁用GIT用户的SHELL 登录权限配置</h4><p>这样git用户就只能用来执行脚本，无法切换到shell界面。</p><p>下面两个步骤非常重要，否则客户端总是提示密码错误！！！</p><ul><li>首先你必须确保 git-shell 已存在于 /etc/shells 文件中<ol><li>使用命令<code>which git-shell</code>判断系统是否安装了git-shell。如果已经安装，则返回 git-shell 的安装目录，如：/usr/bin/git-shell；如果未安装则需要安装git-shell命令，安装命令：<strong>参考上文</strong></li><li>判断shells文件是否存在，判断命令：<code>cat /etc/shells</code> 如果文件不存在或没有 /usr/bin/git-shell ，则需要使用vim增加这个路径：<code>sudo vim /etc/shells</code>，在最后一行添加 git-shell 路径 <code>/usr/bin/git-shell # 添加你的git-shell</code></li></ol></li><li>现在你可以使用 chsh 命令修改任一系统用户的 shell 权限了<ol><li>现在我们修改第一步中创建的git用户的登录权限，禁止git用户使用shell权限：终端中输入<code>sudo chsh git</code></li><li>在<code>Login Shell [/bin/bash]: </code>后输入 git-shell路径：<code>/usr/bin/git-shell</code></li><li>修改完成后验证：<code>vim /etc/passwd</code>找到类似<code>git:x:1000:1000:,,,:/home/git:/usr/bin/git-shell</code>，看看 git 用户是否是以 git-shell 结尾</li></ol></li><li>这样，git 用户就只能使用 SSH 连接对 Git 仓库进行推送和拉取操作，而不能登录机器并取得普通 shell 命令</li></ul><h3 id="hexo-配置">hexo 配置</h3><p>在hexo博客根目录，编辑<code>_config.yml</code>文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repository:   github: <span class="token comment">#......</span>  repo: git@ip或域名:/var/repo/blog.git  branch: main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cleanhexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Nginx-配置">Nginx 配置</h3><h4 id="1-修改-NGINX-的-DEFAULT-设置">1.修改 NGINX 的 DEFAULT 设置</h4><h5 id="Ubuntu-4">Ubuntu</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/nginx/sites-available/default<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="Centos">Centos</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/nginx/conf.d/blog.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><strong>注意</strong>：不同版本的nginx或系统，nginx的配置文件不一定相同，根据具体情况来修改配置</p></blockquote><h4 id="2-将其中的-ROOT-指令指向-var-www-hexo-目录（也就是GIT钩子目录）">2.将其中的 ROOT 指令指向 <code>/var/www/hexo</code> 目录（也就是GIT钩子目录）</h4><pre class="line-numbers language-none"><code class="language-none">server &#123;    listen 80;    listen [::]:80;    root &#x2F;var&#x2F;www&#x2F;hexo; # 修改的地方    server_name laoyuyu.me www.laoyuyu.me; # 如果需要改域名访问，修改server_name 为域名便可    location &#x2F; &#123;            # First attempt to serve request as file, then            # as directory, then fall back to displaying a 404.            try_files $uri $uri&#x2F; &#x3D;404;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-最后重启服务，让NGINX生效">3.最后重启服务，让NGINX生效</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> nginx restart <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="4-补充">4.补充</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/nginx/nginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将nginx的用户修改为root用户，以解决权限问题，也可以为 nginx 用户添加权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#user nginx;</span>user root<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub加速</title>
      <link href="/7b72b0de.html"/>
      <url>/7b72b0de.html</url>
      
        <content type="html"><![CDATA[<h1>访问</h1><h2 id="使用">使用</h2><h3 id="1-Github520＋SwitchHosts（经过长期实践，不好用）">1.Github520＋SwitchHosts（经过长期实践，不好用）</h3><h4 id="依赖介绍">依赖介绍</h4><p><strong>Github520</strong>：<a href="https://github.com/521xueweihan/GitHub520">https://github.com/521xueweihan/GitHub520</a></p><p><strong>SwitchHosts</strong>：<a href="https://swh.app/zh/">https://swh.app/zh/</a></p><h4 id="使用-2">使用</h4><ol><li></li></ol><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206072233860.png" alt="下载并安装"></p><ol start="2"><li><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206080021200.png" alt="以管理员权限启动"></p><blockquote><p>必须以管理员权限启动，否则无法修改 host</p></blockquote></li><li><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206080022324.png" alt="添加 host"></p></li><li><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206080021307.png" alt="配置host"></p><blockquote><p>标题随意取，URL地址填这个：<a href="https://raw.hellogithub.com/hosts">https://raw.hellogithub.com/hosts</a></p><p>自动刷新最好建议选1小时</p></blockquote></li><li><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206080021480.png" alt="手动启用"></p></li><li><p>至此配置完成，下面是一下注意事项</p><ol><li><p>运行时要<strong>以管理员方式运行，不然会提示无修改权限</strong>。在 SwitchHosts.exe 右键—以管理员身份运行 （如果嫌麻烦请参照下图）</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206080022575.png" alt="兼容性设置"></p></li><li><p>如果双击运行后不能显示 SwitchHost 界面，但是任务管理器里面能看到 SwitchHost 的进程，一般是由于 hosts 文件字符集不统一，导致 hosts 文件出现乱码，不能被SwitchHost打开，这时候只要删除 C:\windows\system32\drivers\etc\hosts 即可。</p></li><li><p>如果使用了代理，修改 Hosts 也不会生效。因为浏览器会优先考虑代理工具的代理，建议调试的时候先关闭代理。</p></li><li><p>修改了 hosts 不生效，一般需要重启浏览器，如果是 google 浏览器可以不用重启，可以借助 chrome://net-internals/#dns  chrome://net-internals/#sockets  清掉 keep-alive 和清浏览器 DNS 缓存。</p></li><li></li></ol></li></ol><h3 id="2-Steam">2.Steam++</h3><h4 id="官网链接">官网链接</h4><p><a href="https://steampp.net/">https://steampp.net/</a></p><h4 id="使用教程">使用教程</h4><ol><li>安装（无脑下一步即可）</li><li><img src="C:/Users/Anubis/AppData/Local/gif123/screenshots.gif" alt=""></li></ol><h2 id="原理">原理</h2><p>Github 在全球各地都有服务器，而在国内，DNS 解析服务基本上都是<strong>把域名解析到了美国的服务器</strong>，所以访问起来会比较慢<img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206071959053.png" alt="图片"></p><p>但我们可以通过修改本地 hosts 文件来绕过公共 DNS 解析，<strong>直接访问 Github 在韩国、日本等的服务器</strong>，从而达到加速访问的目的</p><h1>克隆</h1><p>需在git clone命令中将gitclone.com嵌入到克隆地址中即可，效果如下 <img src="https://www.gitclone.com/img/data.png" alt=""></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://gitclone.com/github.com/tendermint/tendermint.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1>特别感谢</h1><h2 id="上万良心软件都在GitHub，你却还卡在无法访问？"><a href="https://mp.weixin.qq.com/s/C5XUgzL3_KGIga2X-LHJuw">上万良心软件都在GitHub，你却还卡在无法访问？</a></h2>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RSS使用及其原理</title>
      <link href="/d6d724b5.html"/>
      <url>/d6d724b5.html</url>
      
        <content type="html"><![CDATA[<h1>使用</h1><p>RSS源 + RSS 阅读器</p><p>这便是 RSS 最简单的用法</p><h2 id="RSS-源">RSS 源</h2><h3 id="公共源">公共源</h3><p>百度「XX 个必读的 RSS 订阅源」之类的文章，这类文章大多会将订阅源分门别类的整理好</p><p>问题在于</p><ol><li>可能你想订阅的内容比较小众，并不在常见的 RSS 源里面</li><li>这些 RSS 源始终是别人提供的，很容易出现失效的问题<code>（点击RSS源，如果在浏览器中打不开，基本就是失效了）</code>（不排除你被墙了的可能）</li></ol><h3 id="RSSHub-生成源">RSSHub 生成源</h3><p>18年，DIYgod 大佬启动了 RSSHub 这个项目</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206091003682.png" alt="万物皆可 RSS"></p><p>RSSHub 简单来讲：</p><p>你可以用它来给各种社交媒体、新媒体、论坛、博客、直播、大学通知、科学期刊等等奇奇怪怪的页面<strong>生成订阅源</strong></p><p>链接：<a href="https://docs.rsshub.app/">https://docs.rsshub.app/</a></p><h3 id="RSSHub-Rader">RSSHub Rader</h3><p>RSSHub Radar 是 RSSHub 的衍生项目，它是一个可以帮助你快速发现和订阅当前网站 RSS 和 RSSHub 的<strong>浏览器扩展</strong>（也是 DIYgod 大佬的作品）</p><p>安装地址：<a href="https://github.com/DIYgod/RSSHub-Radar/">https://github.com/DIYgod/RSSHub-Radar/</a></p><h3 id="RSS-脚本">RSS+ 脚本</h3><p><img src="https://s2.loli.net/2022/06/15/SIO4iDfcd62tjAb.jpg" alt="油猴脚本"></p><p>链接：<a href="https://greasyfork.org/zh-CN/scripts/373252-rss-show-site-all-rss">https://greasyfork.org/zh-CN/scripts/373252-rss-show-site-all-rss</a></p><h2 id="RSS-阅读器">RSS 阅读器</h2><h3 id="Win-Mac">Win/Mac</h3><h4 id="1-Fluent-Reader">1.Fluent Reader</h4><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206091004388.png" alt=""></p><ul><li><p><a href="https://github.com/yang991178/fluent-reader">首页</a></p></li><li><p><a href="https://github.com/yang991178/fluent-reader/releases">下载</a></p></li><li><p>使用</p><ul><li><p>添加 订阅源</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206072033808.png" alt="1"><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206072033824.png" alt="2"></p></li></ul></li></ul><h3 id="安卓端">安卓端</h3><h4 id="1-Rolly-RSS-阅读器">1.Rolly RSS 阅读器</h4><p>地址：<a href="https://wwp.lanzout.com/iYUyD061qivi">https://wwp.lanzout.com/iYUyD061qivi</a> 密码:e6nm</p><h2 id="优点">优点</h2><h3 id="真正做到内容聚合">真正做到内容聚合</h3><p>以社交媒体举个最简单的例子：</p><p>如果你想对「吴青峰」保持关注，那我可能需要关注他的 ins、FaceBook、微博、B站、抖音、贴吧…</p><p>同时为了不漏掉演出信息、新专发布，那你可能还需要在大麦网、音乐平台上也关注他</p><p>而事实上，你不使用其中的大多数平台，也不想给手机装这么多APP，<em>更不可能给这些APP都打开通知权限</em><s>（毕竟通知权限可是垃圾信息的重灾区）</s></p><p><strong>RSS 就可以解决这个问题</strong></p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206072141173.jpeg" alt="">别的不说，用RSS来追漫画、追星，可太舒服了…</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206072141204.jpeg" alt=""></p><h3 id="拒绝推荐算法">拒绝推荐算法</h3><p>RSS 的核心是资讯聚合，但远不止此</p><p>时至2021年，订阅这种行为，早已不再纯粹，而是被大量的「推荐算法」所侵占</p><p>如今只要是个APP，就会被加入「视频流」功能，算是一个很好的例子</p><p>不否认推荐算法能有助于我们节约时间，快速发现更多自己感兴趣的内容</p><p>但你得承认：大多数人很容易陷入「被毫无意义的推荐内容浪费了时间」却还浑然不知的处境</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206072141354.jpeg" alt=""></p><p>说到底，就信息获取的高效和便捷来说，主流的资讯软件毫无意外的秒杀 RSS</p><p>但 RSS 的优势并不在此，RSS 最适合的场景是订阅一些优质独立站点（比如博客），又或者说是用来追踪一些信息（番剧、明星、期刊）</p><p>这种情况下，它显得高效且优雅</p><p>而 RSS 最吸引我的地方，其实在于拒绝算法推荐</p><p>如今算法自作聪明地给用户打上了一个个标签，定义了画像，似乎比你自己还懂自己</p><p>而最可怕的地方在于，很多人却还没意识到：<strong>自己正被算法所影响，变成了算法所认为的你</strong></p><blockquote><p>引用自 <a href="https://zhuanlan.zhihu.com/p/349349861">知道RSS的人越少，我就越希望它能被人知道！</a></p></blockquote><h2 id="问题">问题</h2><h3 id="1-资源过少">1.资源过少</h3><p>实际上，本身提供 RSS 订阅的网站实在是太少了，这也是 RSS 难以流行起来的一大原因</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206072103052.png" alt="img"></p><p>其实也不难理解，<strong>因为古典 RSS 设计的核心问题就是：它没有商业模式，甚至它是反商业的</strong></p><p>内容方的网站上本来有广告的，但当你借助 RSS 的力量，在阅读器里实现了所谓的干净的文章阅读后，广告没有人看了、推荐算法也不起作用了，什么隐私搜集、用户存留更成了无稽之谈</p><p><strong>不过这个问题严格意义上来讲已经被 RSSHub 解决了，相信万物皆可 RSS 的时代很快就会到来</strong></p><h3 id="2-域名问题">2.域名问题</h3><p>官方提供的 RSSHub 域名（<a href="https://link.zhihu.com/?target=https%3A//rsshub.app/755/user/akimoto-manatsu">rsshub.app</a>）已经被墙了</p><p>而且 RSSHub 官方域名已经被不少网站做了<em>反爬限制</em>，就算你能利用国外在线 RSS 服务做中转来使用，也是不推荐你去用官方域名的</p><p>RSSHub 是一个开源项目，自建成本不高，于是有一些大佬分享了其自建的服务：<a href="https://uneasy.win/rsshubserver/">https://uneasy.win/rsshubserver/</a></p><p>你可以 百度／Google 关键词「Welcome to RSSHub!」就能轻松找到不少别人搭好的 RSSHub 站点了</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206072138790.png" alt=""></p><h4 id="解决方法">解决方法</h4><h5 id="域名选择">域名选择</h5><h6 id="1-白嫖别人搭建好的服务">1.白嫖别人搭建好的服务</h6><h6 id="2-自建-RSSHub">2.自建 RSSHub</h6><p>参照这个教程：<a href="https://docs.qq.com/doc/DYWhCdURBTFBEVGFl">Github+Vercel 来一键部署 RSSHub</a></p><h5 id="配置-RSSHub-Rader-域名">配置 RSSHub Rader 域名</h5><p>无论你是白嫖别人的，还是自建的：复制 RSShub 页面的地址，打开 RSSHub Rader，设置到<strong>自定义域名</strong></p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206072136556.png" alt=""></p><h2 id="后记">后记</h2><p><code>RSS </code>的用户很容易染上无节制地增加订阅源的习惯，尤其是学会使用订阅源制作工具后，走马观花式地扫几眼后，直接按下「全部已读」变成常态。个人认为如果希望保证 <code>RSS </code>阅读的体验，就要在这方面加以克制，避免自己的阅读器中充斥大量混乱的信息。</p><h3 id="特别感谢">特别感谢</h3><p><a href="https://zhuanlan.zhihu.com/p/349349861">知道RSS的人越少，我就越希望它能被人知道！</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 文章编辑</title>
      <link href="/df0a45e7.html"/>
      <url>/df0a45e7.html</url>
      
        <content type="html"><![CDATA[<h2 id="文章-Front-matter-介绍">文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解">Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>hide</td><td><code>false</code></td><td>隐藏文章，如果<code>hide</code>值为<code>true</code>，则文章不会在首页显示</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，<strong>只建议一篇文章一个分类</strong></td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h4 id="最简示例">最简示例</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="最全示例">最全示例</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">hide</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="-3"></h2>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go语言学习历程</title>
      <link href="/349f2a99.html"/>
      <url>/349f2a99.html</url>
      
        <content type="html"><![CDATA[<p>这个是一个目录页</p><h2 id="开发环境搭建">开发环境搭建</h2><h3 id="Go-开发环境配置"><a href="https://anubis.cafe/96d6aa90.html">Go 开发环境配置</a></h3><h2 id="特别感谢-3">特别感谢</h2><h3 id="李文周的博客"><a href="https://www.liwenzhou.com">李文周的博客</a></h3>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu命令集</title>
      <link href="/f5e22375.html"/>
      <url>/f5e22375.html</url>
      
        <content type="html"><![CDATA[<h3 id="在线查询网站">在线查询网站</h3><p><a href="https://wangchujiang.com/linux-command/">https://wangchujiang.com/linux-command/</a></p><h3 id=""></h3><h3 id="目录操作">目录操作</h3><h4 id="创建目录">创建目录</h4><ol><li><h5 id="命令格式">命令格式</h5><pre class="line-numbers language-none"><code class="language-none">mkdir 文件夹名字<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><h5 id="命令参数">命令参数</h5><ol><li><code>-m</code>, --mode=模式，设定权限模式 (类似 <code>chmod</code>)</li><li><code>-p</code>, --parents 可以创建一个多级目录</li></ol></li></ol><h4 id="删除目录">删除目录</h4><p><code>rmdir</code>是常用的命令，该命令的功能是<strong>删除空目录</strong>，一个目录被删除之前必须是空的。删除某目录时也必须具有对父目录的写权限。</p><pre class="line-numbers language-none"><code class="language-none">rmdir 文件夹名字<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="分配操作权限">分配操作权限</h3><pre class="line-numbers language-none"><code class="language-none">sudo chmod -R 777 &#x2F;code&#x2F;Goland<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中<br>-R 是指级联应用到目录里的所有子目录和文件<br>777 是所有用户都拥有最高权限<br>/code/Goland 是需要放行的文件夹</p><h3 id="创建文件">创建文件</h3><ol><li><h4 id="命令格式-2">命令格式</h4><pre class="line-numbers language-none"><code class="language-none">touch 文件名字.后缀<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><h4 id="命令参数-2">命令参数</h4><ol><li><code>-a</code>  或–time=atime或–time=access或–time=use 只更改存取时间。</li><li><code>-c</code>  或–no-create 不建立任何文档。</li><li><code>-d</code> 使用指定的日期时间，而非现在的时间。</li><li><code>-f</code> 此参数将忽略不予处理，仅负责解决BSD版本touch指令的兼容性问题。</li><li><code>-m</code>  或–time=mtime或–time=modify 只更改变动时间。</li><li><code>-r</code> 把指定文档或目录的日期时间，统统设成和参考文档或目录的日期时间相同。</li><li><code>-t</code> 使用指定的日期时间，而非现在的时间。</li></ol></li></ol><h3 id="删除文件和目录">删除文件和目录</h3><h4 id="rm命令"><code>rm</code>命令</h4><p><code>rm</code>是常用的命令，该命令的功能为删除一个目录中的一个或多个文件或目录，它也可以将某个目录及其下的所有文件及子目录均删除。对于链接文件，只是删除了链接，原有文件均保持不变。</p><h4 id="命令格式-3">命令格式</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">rm [选项] 文件… <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="命令参数-3">命令参数</h4><p><code>-f</code>, --force  忽略不存在的文件，从不给出提示。</p><p><code>-i</code>, --interactive 进行交互式删除</p><p><code>-r</code>, -R, --recursive  指示<code>rm</code>将参数中列出的全部目录和子目录均递归地删除。</p><h4 id="实例">实例</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">rm test.txt # 删除文件，系统会询问rm -f test.txt # 强制删除，不询问rm test&#x2F;    # 删除目录，系统会询问rm -f test&#x2F; # 删除目录，不询问rm -rf test&#x2F; # 递归删除目录及下面文件，不询问rm -rf test* # 删除以test开头的文件，不询问rm -rf *.txt *.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Linux移动文件和目录">Linux移动文件和目录</h3><h4 id="移动文件和目录mv">移动文件和目录<code>mv</code></h4><p><code>mv</code>命令是 move 的缩写，可以用来移动文件或者将文件<strong>改名</strong>（move (rename) files），是 Linux 系统下常用的命令，经常用来<strong>备份</strong>文件或者目录。</p><h4 id="命令格式-4">命令格式</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mv [选项] 源文件或目录 目标文件或目录<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="命令参数-4">命令参数</h4><p><code>-b</code> ：若需覆盖文件，则覆盖前先行备份。</p><p><code>-f</code> ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</p><p><code>-i</code> ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！</p><p><code>-u</code> ：若目标文件已经存在，且 source 比较新，才会更新(update)</p><p><code>-t</code>  ： 即指定<code>mv</code>的目标目录，该选项适用于移动多个源文件到一个目录的情况，此时目标目录在前，源文件在后。</p><h4 id="实例-2">实例</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mv test1.txt test2.txt # 重命名mv test1.txt test2.txt test      # 移动文件mv -t test test1.txt test2.txt   # 移动文件mv test* test                    # 使用通配符mv -i test1.txt test2.txt        # 将文件file1改名为file2，如果file2已经存在，则询问是否覆盖mv -f test1.txt test2.txt        # 将文件file1改名为file2，即使file2存在，也是直接覆盖掉。mv test1 test2                   # 移动目录mv * ..&#x2F;                         # 移动当前文件夹下的所有文件到上一级目录mv test3&#x2F;*.txt test5             # 把当前目录的一个子目录里的文件移动到另一个子目录里<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="拷贝文件和目录">拷贝文件和目录</h3><h4 id="cp命令拷贝文件和目录"><code>cp</code>命令拷贝文件和目录</h4><p><code>cp</code>命令用来复制文件或者目录，是 Linux 系统中最常用的命令之一</p><h4 id="命令格式-5">命令格式</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp [选项]... [-T] 源 目的或：cp [选项]... 源... 目录或：cp [选项]... -t 目录 源...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="命令参数-5">命令参数</h4><table><thead><tr><th>参数</th><th>长参数</th><th>描叙</th></tr></thead><tbody><tr><td>-a</td><td></td><td>等同于-dR</td></tr><tr><td>-b</td><td></td><td>若删除或者覆盖目标文件，将对目标文件进行备份，备份文件以备份的字符串结尾 .bak</td></tr><tr><td>-d</td><td></td><td>复制符号链接</td></tr><tr><td>-f</td><td></td><td>强制复制</td></tr><tr><td>-h</td><td></td><td>强制cp命令复制符号链接。缺省值是跟随符号链接，也就是将文件复制到符号链接指向处。</td></tr><tr><td>-i</td><td></td><td>交互式模式。覆盖目标文件之前先要进行询问</td></tr><tr><td>-l</td><td></td><td>建立硬链接，而非复制</td></tr><tr><td>-p</td><td></td><td>源目录或者文件的属性保留(修改日期、时间和访问控制列表等)</td></tr><tr><td>-P</td><td></td><td>源目录或者文件的路劲保留</td></tr><tr><td>-r/R</td><td></td><td>处理指定目录以及子目录</td></tr></tbody></table><h4 id="实例-3">实例</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp t1.txt test # 复制单个文件到目标目录，目标文件存在时，会询问是否覆盖cp -r test1 test2 # 复制目录需要加-r参数cp -rf test1&#x2F;* test2 # 强制递归复制test1下面的所有内容到test2，不提示cp * ..&#x2F;   # 复制当前目录下面的文件到父母录cp -rf * ..&#x2F; # 复制文件和目录到父目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Linux显示合并文件">Linux显示合并文件</h3><h4 id="cat命令"><code>cat</code>命令</h4><p>cat命令的用途是连接文件或标准输入并打印。这个命令常用来显示文件内容，或者将几个文件连接起来显示，或者从标准输入读取内容并显示，它常与重定向符号配合使用。</p><h4 id="命令格式-6">命令格式</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cat [选项] [文件]...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="三大功能">三大功能</h4><ol><li>一次显示整个文件:<code>cat filename</code></li><li>从键盘创建一个文件:<code>cat &gt; filename</code> 只能创建新文件，不能编辑已有文件.</li><li>将几个文件合并为一个文件:<code>cat file1 file2 &gt; file</code></li></ol><h4 id="命令参数-6">命令参数</h4><p>-A,  --show-all     等价于 -vET</p><p>-b, --number-nonblank  对非空输出行编号</p><p>-e   等价于 -vE</p><p>-E, --show-ends    在每行结束处显示 $</p><p>-n,  --number   对输出的所有行编号,由1开始对所有输出的行数编号</p><p>-s, --squeeze-blank 有连续两行以上的空白行，就代换为一行的空白行</p><p>-t            与 -vT 等价</p><p>-T, --show-tabs     将跳格字符显示为 ^I</p><p>-u            (被忽略)</p><p>-v, --show-nonprinting  使用 ^ 和 M- 引用，除了 LFD 和 TAB 之外</p><h4 id="实例-4">实例</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"> cat test.txt  # 显示test.txt文件内容 cat test1.txt test2.txt # 同时显示这两个文件内容 cat &gt; t1.txt               # 从键盘输入内容到t1.txt ctrl+d 结束 cat &gt; test2.txt &lt;&lt; EOF     # 从键盘输入内容到t1.txt使用EOF作为文件结束 &gt; test1 &gt; test2 &gt; EOF cat &lt;&lt; EOF &gt; test2.txt      # 从键盘输入内容到t1.txt使用EOF作为文件结束（也可以放在前面） cat t1.txt t2.txt &gt; t3.txt  # 将t1 t2合并到t3 覆盖 cat t1.txt t2.txt &gt;&gt; t3.txt  # 将t1 t2合并到t3 追加不是覆盖 # 快速编辑一个文件cat &gt;&gt; hosts &lt;&lt; EOF192.168.18.128 node01192.168.18.138 node02192.168.18.148 node03EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10 系统右键菜单空白不显示解决方法</title>
      <link href="/5b0615fc.html"/>
      <url>/5b0615fc.html</url>
      
        <content type="html"><![CDATA[<h2 id="方法一：停止Windows-Management-Instrumentation服务"><strong>方法一：停止<code>Windows Management Instrumentation</code>服务</strong></h2><h3 id="1、win-r打开运行输入services-msc。打开服务管理器">1、<code>win+r</code>打开运行输入<code>services.msc</code>。打开服务管理器</h3><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206122354742.png" alt=""></p><h3 id="2、找到Windows-Management-Instrumentation服务，此服务与用户界面有关，停止该服务；">2、找到<code>Windows Management Instrumentation</code>服务，此服务与用户界面有关，停止该服务；</h3><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206122354863.png" alt=""></p><h3 id="3、然后定位至C-Windows-System32-wbem-Repository，删除该文件夹下的所有文件。重启系统后，看能否解决问题。">3、然后定位至<code>C:\Windows\System32\wbem\Repository</code>，删除该文件夹下的所有文件。重启系统后，看能否解决问题。</h3><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206122355011.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++ 快速输入</title>
      <link href="/1.html"/>
      <url>/1.html</url>
      
        <content type="html"><![CDATA[<h1>一、解除系统流绑定</h1><h2 id="使用方法">使用方法</h2><p>在<code>main</code>函数开头加入</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">std::ios::sync_with_stdio(false);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="原理-2">原理</h2><p><code>cin</code> 效率的效率在数据输入上远低于 <code>scanf</code>，这不是<code>c++</code>比 <code>c</code> 低级，而是 <code>C++</code>  为了兼容<code>C</code> 而采取的保守措施。</p><p>标准 <code>C++</code> 流与标准 <code>C </code>流在每次输入/输出操作后同步，同步的 <code>C++</code> 流为无缓冲，而每次 <code>C++</code> 流上的 <code>I/O</code> 都立即应用到对应 <code>C</code> 流的缓冲区。这使得能<strong>自由地混合 <code>C++</code> 与 <code>C I/O</code></strong> 。</p><h2 id="注意事项">注意事项</h2><ul><li>解除绑定后不要混用 <code>cin</code> 与 <code>scanf</code></li></ul><h1>二、快速读入函数</h1><h2 id="原理-3">原理</h2><p><code>C++</code>输入输出中处理字符串的效率是处理数字的效率的不知多少倍(为什么现在还不知道，别问我，我知道了会改的)</p><h2 id="整型">整型</h2><pre class="line-numbers language-none"><code class="language-none">inline int read()&#x2F;&#x2F;inline 为内联关键字&#123;    int x&#x3D;0,w&#x3D;0;    char ch&#x3D;0;    while(!isdigit(ch)) w|&#x3D;ch&#x3D;&#x3D;&#39;-&#39;,ch&#x3D;getchar();    &#x2F;&#x2F;while(isdigit(ch)) x&#x3D;(x&lt;&lt;1)+(x&lt;&lt;3)+(ch^48),ch&#x3D;getchar();以前以为位运算能快点，但问了大佬才发现，其实没啥差别    while(isdigit(ch)) x&#x3D;x*10+ch-&#39;0&#39;,ch&#x3D;getchar();    return w?-x:x;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="浮点型">浮点型</h2><pre class="line-numbers language-none"><code class="language-none">inline double  read()&#123;    int w&#x3D;0,y&#x3D;0;    double x&#x3D;0,t&#x3D;0.1;    char ch&#x3D;0;    while(!isdigit(ch)) w|&#x3D;ch&#x3D;&#x3D;&#39;-&#39;,ch&#x3D;getchar();    while(isdigit(ch)) x&#x3D;x*10+(ch^48),ch&#x3D;getchar();    y|&#x3D;ch&#x3D;&#x3D;&#39;.&#39;;    if(y)    &#123;        ch&#x3D;getchar();        while(isdigit(ch)) x+&#x3D;(ch^48)*t,t*&#x3D;0.1,ch&#x3D;getchar();    &#125;    return w?-x:x;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maximum Sum of Minimum</title>
      <link href="/c64003f1.html"/>
      <url>/c64003f1.html</url>
      
        <content type="html"><![CDATA[<h1><a href="https://atcoder.jp/contests/m-solutions2019/tasks/m_solutions2019_d">题目链接</a></h1><h2 id="题意分析">题意分析</h2><ul><li><p>C 数组中存放点的权值（<strong>从小到大排序</strong>）</p></li><li><p>边的权值</p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206080405739.png" alt=""></p><blockquote><p><code>C[i] C[j]</code>为 L 的两个端点值</p></blockquote></li></ul><p>易知<code>C[1]</code>相连的边，其权值均为<code> C[1]</code></p><p>由贪心策略易知，越权值小的点，其相连边权值越小，因此应<strong>尽量减少其相连边</strong>，理想情况为将其填入叶子节点中。</p><h2 id="样例分析">样例分析</h2><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206080405049.png" alt=""></p><p>如图所示，在 4 号节点填入 C[1] 后，3-4 这条边已经确定权值了**，我们可以将它删去**，则 3 号节点成为了<strong>一个新的叶子节点</strong></p><p>在 3 号节点填入 C[2] 后，3-2 这条边已经确定权值了，我们可以将它删去</p><p>在 5 号节点填入 C[3] 后，5-2 这条边已经确定权值了，我们可以将它删去</p><p>后续操作不进行赘述。</p><p>基于上述操作方法，我们做到每一个当前情况下的最小点，均填入当前情况下的叶子节点中，从而使边权值最大。</p><h2 id="结论">结论</h2><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206080405565.png" alt=""></p><p>即<strong>每个点（除了最大点）的值均为一条边的权值</strong>。</p><p>要满足这个情况只需要使：<strong>只要子节点的值小于父节点的值即可</strong></p><h2 id="代码实现-2">代码实现</h2><h3 id="BFS">BFS</h3><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206080405281.jpeg" alt=""></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;采用按层填充#include&lt;bits&#x2F;stdc++.h&gt;using namespace std;const int maxn&#x3D;1e4+7;int C[maxn],N,Ans,ans[maxn];vector &lt;int&gt; T[maxn];void BFS(int root)&#123;    queue&lt;int&gt;Q;    int cnt&#x3D;N;    int l&#x3D;T[root].size();    for(int i&#x3D;0; i&lt;l; ++i)    &#123;        Q.push(T[root][i]);    &#125;    ans[root]&#x3D;C[cnt--];    while(!Q.empty())    &#123;        root&#x3D;Q.front();        Q.pop();        if(ans[root]) continue;        ans[root]&#x3D;C[cnt--];        l&#x3D;T[root].size();        for(int i&#x3D;0; i&lt;l; ++i)        &#123;            Q.push(T[root][i]);        &#125;    &#125;&#125;int main()&#123;    int a,b;    cin&gt;&gt;N;    for(int i&#x3D;1; i&lt;&#x3D;N-1; ++i)    &#123;        cin&gt;&gt;a&gt;&gt;b;        T[a].push_back(b);        T[b].push_back(a);    &#125;    for(int i&#x3D;1; i&lt;&#x3D;N; ++i)    &#123;        cin&gt;&gt;C[i];        Ans+&#x3D;C[i];    &#125;    sort(C+1,C+1+N);    Ans-&#x3D;C[N];&#x2F;&#x2F;最大值计算    BFS(1);    cout&lt;&lt;Ans&lt;&lt;endl;    for(int i&#x3D;1; i&lt;&#x3D;N; ++i)    &#123;        cout&lt;&lt;ans[i]&lt;&lt;&quot; &quot;;    &#125;    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="DFS">DFS</h3><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206080406579.jpeg" alt=""></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;仿照后序遍历的方式进行节点填充#include&lt;bits&#x2F;stdc++.h&gt;using namespace std;const int maxn&#x3D;1e4+7;int C[maxn],N,Ans,ans[maxn],cnt,vis[maxn];vector &lt;int&gt; T[maxn];void DFS(int root)&#123;    vis[root]&#x3D;1;    for(int i&#x3D;0; i&lt;T[root].size(); ++i)    &#123;        int v&#x3D;T[root][i];        if(vis[v]) continue;        DFS(v);    &#125;    ans[root]&#x3D;C[++cnt];    Ans+&#x3D;ans[root];&#125;int main()&#123;    int a,b;    cin&gt;&gt;N;    for(int i&#x3D;1; i&lt;&#x3D;N-1; ++i)    &#123;        cin&gt;&gt;a&gt;&gt;b;        T[a].push_back(b);        T[b].push_back(a);    &#125;    for(int i&#x3D;1; i&lt;&#x3D;N; ++i)        cin&gt;&gt;C[i];    sort(C+1,C+1+N);    DFS(1);    cout&lt;&lt;Ans&lt;&lt;endl;    for(int i&#x3D;1; i&lt;&#x3D;N; ++i)    &#123;        cout&lt;&lt;ans[i]&lt;&lt;&quot; &quot;;    &#125;    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AtCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中文文案排版指南</title>
      <link href="/94b8e5fc.html"/>
      <url>/94b8e5fc.html</url>
      
        <content type="html"><![CDATA[<h2 id="空格规则">空格规则</h2><h3 id="中英文之间需要增加空格">中英文之间需要增加空格</h3><p>正确 ：学习 Markdown 是非常重要的</p><p>错误 ：学习 markdown是非常重要的 or 学习markdown是非常重要的</p><h3 id="中文与数字之间需要增加空格">中文与数字之间需要增加空格</h3><p>正确： 今天我花了 100 元</p><p>错误： 今天我花了100元</p><h3 id="数字与单位之间无需增加空格（PS：中文单位不符合此规则）">数字与单位之间无需增加空格（PS：中文单位不符合此规则）</h3><p>正确：汽车的速度是 10m/s</p><p>错误：汽车的速度是 10 m/s</p><h3 id="全角标点与其他字符之间不加空格">全角标点与其他字符之间不加空格</h3><h4 id="全角标点：需要手动切换，个人默认为半角">全角标点：需要手动切换，个人默认为半角</h4><p>正确：今天买了一把手机，真开心！</p><p>错误：今天买了一把手机　，真开心　！</p><h2 id="标点符号">标点符号</h2><h3 id="不重复使用标点符号">不重复使用标点符号</h3><p>即不出现！！！这种连续使用，当然！？！？这种也不可以</p><h3 id="使用全角中文标点（使用中文输入法）">使用全角中文标点（使用中文输入法）</h3><p>正确：今天真开心！</p><p>错误：今天真开心!</p><h3 id="数字使用半角字符">数字使用半角字符</h3><p>正确：这个 100  元。</p><p>错误：这个 １００ 元。</p><p>例外：在设计稿、宣传海报中如出现极少量数字的情形时，为方便文字对齐，是可以使用全角数字的。（这句copy的）</p><h3 id="遇到完整的英文整句、特殊名词，其內容使用半角标点">遇到完整的英文整句、特殊名词，其內容使用半角标点</h3><p>正确：乔布斯那句话是怎么说的？「Stay hungry, stay foolish.」</p><p>错误：乔布斯那句话是怎么说的？「Stay hungry，stay foolish．」</p><h2 id="名词">名词</h2><h3 id="专有名词使用正确的大小写">专有名词使用正确的大小写</h3><p>正确：使用 GitHub 登录</p><p>错误：使用 github 登录</p><h3 id="不要使用不地道的缩写">不要使用不地道的缩写</h3><p>正确：你是会 JavaScript 吗？</p><p>错误：你是会 JS 吗？</p><h3 id="链接之间增加空格">链接之间增加空格</h3><h3 id="简体中文使用直角引号">简体中文使用直角引号</h3>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 未分类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows注册表清理</title>
      <link href="/90f00f2a.html"/>
      <url>/90f00f2a.html</url>
      
        <content type="html"><![CDATA[<p>伴随着系统运行时间不断增长，我们的电脑 注册表  中累积了许多垃圾文件。这些垃圾文件都是我们平常安装与卸载程序所留下的无用注册表信息，时间一长，垃圾文件与信息越来越多，我们电脑的运行速度越来越慢。</p><p>​而且部分软件由于删除方式不对，导致一些残留注册表未被删除，会出现明明删除了，但是软件列表中仍然存在这个软件的现象。</p><h2 id="解决方法-2">解决方法</h2><h3 id="1-个人手动清除注册表（极其不推荐）">1.个人手动清除注册表（极其不推荐）</h3><ol><li>​<code>win+R</code> 输入 <code>regedit</code></li><li>选择 <code>HKEY_CURRENT_USER\SOFTWARE</code></li><li>里面的就是你软件的注册表了</li></ol><hr><p>注册表是 Windows 系统的重要数据库，其中存放着重要的系统与程序配置、文件传输信息，因此随意改动注册表容易导致严重的错误，说不定你电脑就崩了呢，所以不推荐手动清理注册表。</p><h3 id="2-使用软件清理（推荐）">2. 使用软件清理（推荐）</h3><ol><li><a href="https://www.iobit.com/en/advanceduninstaller.php?utm_source=enmedia&amp;utm_campaign=engetproductkeyiu">IObit Uninstaller</a></li><li>360安全卫士（软件确实变味了，但是注册表清理的功能还是比较好用的）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 个人博客搭建及美化</title>
      <link href="/c4c3e885.html"/>
      <url>/c4c3e885.html</url>
      
        <content type="html"><![CDATA[<h2 id="-2"><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206062016201.png" alt=""></h2><h2 id="博客搭建">博客搭建</h2><h3 id="环境配置">环境配置</h3><ol><li><p>安装 <a href="https://nodejs.org/en/download/">nodejs</a></p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206090027417.png" alt=""></p></li><li><p>检验安装是否成功</p><p>打开 cmd</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">node</span> -v<span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206090027773.png" alt="只要出现版本号就算成功"></p><p>如果出现报错</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> WARN config global <span class="token variable"><span class="token variable">`</span>--global<span class="token variable">`</span></span>, <span class="token variable"><span class="token variable">`</span>--local<span class="token variable">`</span></span> are deprecated. Use <span class="token variable"><span class="token variable">`</span>--location<span class="token operator">=</span>global<span class="token variable">`</span></span> instead.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解决方法</p><ol><li><p>打开node.js安装目录那里，找到npm.cmd文件<img src="C:/Users/Anubis/AppData/Roaming/Typora/typora-user-images/image-20220701012206438.png" alt=""></p></li><li><p>将文件里的<code> prefix-g</code> 改为  <code>prefix --location=global</code><img src="C:/Users/Anubis/AppData/Roaming/Typora/typora-user-images/image-20220701012610391.png" alt=""></p></li></ol></li><li><p>安装 git 参考：<a href="https://www.cnblogs.com/jytx/p/5602927.html">https://www.cnblogs.com/jytx/p/5602927.html</a></p><ol><li><a href="https://npm.taobao.org/mirrors/git-for-windows/">https://npm.taobao.org/mirrors/git-for-windows/</a></li></ol></li><li><p>使用<a href="https://npmmirror.com/">国内镜像加速</a></p><p>打开 cmd 输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>注册 Github 账号</p></li><li><p>创建 git 仓库</p></li><li><p>安装 Hexo</p><p>选择一个磁盘，新建一个文件夹用来存放博客文件。比如我的（<code>E/Blog</code>），在该文件夹下右键单击鼠标，点击 <code>Git Bash Here</code>，输入以下 npm 命令即可安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完成后输入<code>hexo -v</code></p></li><li><p>Hexo 初始化</p><p>在  <code>Git Bash Here</code>中输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo initcnpm <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206090101457.png" alt=""></p><p><img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206090100553.png" alt=""></p><ol><li></li></ol></li></ol><h2 id="博客美化">博客美化</h2><h3 id="浏览器网页标题">浏览器网页标题</h3><p>效果图</p><p>1.<img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206122358438.png" alt=""></p><p>2.<img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206122358792.png" alt=""></p><p>1.在<code>\themes\material-x\source\js</code>下新建一个 <code>FunnyTitle.js</code> 文件，填写如下代码：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 浏览器搞笑标题</span><span class="token keyword">var</span> OriginTitle <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">;</span><span class="token keyword">var</span> titleTime<span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'visibilitychange'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>hidden<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'[rel="icon"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">,</span> <span class="token string">"/funny.ico"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'╭(°A°`)╮ 页面崩溃啦 ~'</span><span class="token punctuation">;</span>        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>titleTime<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'[rel="icon"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">,</span> <span class="token string">"/favicon.ico"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'(ฅ>ω&lt;*ฅ) 噫又好啦 ~'</span> <span class="token operator">+</span> OriginTitle<span class="token punctuation">;</span>        titleTime <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitle<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.在 <code>\themes\material-x\layout\layout.ejs </code>文件中的下列位置插入代码：<img src="https://fastly.jsdelivr.net/gh/zouxingyuks/images/202206122358628.png" alt=""></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--浏览器搞笑标题--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/FunnyTitle.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm-错误码及其解决方法</title>
      <link href="/60e0aee4.html"/>
      <url>/60e0aee4.html</url>
      
        <content type="html"><![CDATA[<p>执行如下命令：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">git config <span class="token operator">--</span>global http<span class="token punctuation">.</span>sslverify <span class="token string">"false"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再执行</p><pre class="line-numbers language-none"><code class="language-none">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就可以了</p><p>如果上述命令执行完后，还是报那个错误，请继续执行如下命令，亲测有效</p><pre class="line-numbers language-none"><code class="language-none">git config --global url.&quot;https:&#x2F;&#x2F;&quot;.insteadOf git:&#x2F;&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
