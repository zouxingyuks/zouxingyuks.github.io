<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo使用</title>
      <link href="/2022/06/06/hexo-shi-yong/"/>
      <url>/2022/06/06/hexo-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1>文章 Front-matter 介绍</h1><h2 id="Front-matter-选项详解">Front-matter 选项详解</h2><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>hide</td><td><code>false</code></td><td>隐藏文章，如果<code>hide</code>值为<code>true</code>，则文章不会在首页显示</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，<strong>只建议一篇文章一个分类</strong></td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例">最简示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="最全示例">最全示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: &#x2F;source&#x2F;images&#x2F;xxx.jpgtop: truehide: falsecover: truecoverImg: &#x2F;images&#x2F;1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id=""></h2>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware 安装 Ubuntu</title>
      <link href="/2022/06/05/vmware-an-zhuang-ubuntu/"/>
      <url>/2022/06/05/vmware-an-zhuang-ubuntu/</url>
      
        <content type="html"><![CDATA[<h1>**虚拟机 VMware **</h1><h2 id="下载-2"><strong>下载</strong></h2><p>官网下载地址：<a href="https://www.vmware.com/cn/products/workstation-pro.html">https://www.vmware.com/cn/products/workstation-pro.html</a><br>以下为官网界面</p><ol><li></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206052153634.png" alt="1"></p><ol start="2"><li></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206052153686.png" alt=""></p><h2 id="安装">安装</h2><p>1.前面没啥好讲的，不停下一步就行</p><ol start="2"><li></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206052211221.png" alt="image-20220605221121185"></p><p>为了方便管理，我开辟了一个新的磁盘分区专门来放虚拟机和安装在虚拟机上的系统。比如我电脑中 VMware 的安装位置就是<code>E:\VMware\</code> 。注：虚拟机最好安装在固态硬盘上。</p><p>3.接下来继续无脑下一步就行</p><p>4.等待，等待过程中可能出现鼠标晃动，屏幕闪烁现象，这都是正常的。</p><p>5.安装完成后的第一次启动会需要许可证密钥。（悄悄提示一下，可以百度搜索有效的许可证密钥。）</p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go语言学习历程</title>
      <link href="/2022/06/05/go-yu-yan-xue-xi-li-cheng/"/>
      <url>/2022/06/05/go-yu-yan-xue-xi-li-cheng/</url>
      
        <content type="html"><![CDATA[<h1>开发环境搭建</h1><h2 id="下载">下载</h2><p>Go官网下载地址：<a href="https://golang.org/dl/">https://golang.org/dl/</a></p><p>Go官方镜像站（推荐）：<a href="https://golang.google.cn/dl/">https://golang.google.cn/dl/</a></p><h1>特别感谢</h1><p><a href="https://www.liwenzhou.com">李文周的博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 语言学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu命令集</title>
      <link href="/2022/06/05/ubuntu-ming-ling-ji/"/>
      <url>/2022/06/05/ubuntu-ming-ling-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="目录操作">目录操作</h3><h4 id="创建目录">创建目录</h4><ol><li><h5 id="命令格式">命令格式</h5><pre class="line-numbers language-none"><code class="language-none">mkdir 文件夹名字<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><h5 id="命令参数">命令参数</h5><ol><li><code>-m</code>, --mode=模式，设定权限模式 (类似 <code>chmod</code>)</li><li><code>-p</code>, --parents 可以创建一个多级目录</li></ol></li></ol><h4 id="删除目录">删除目录</h4><p><code>rmdir</code>是常用的命令，该命令的功能是<strong>删除空目录</strong>，一个目录被删除之前必须是空的。删除某目录时也必须具有对父目录的写权限。</p><pre class="line-numbers language-none"><code class="language-none">rmdir 文件夹名字<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="分配操作权限">分配操作权限</h3><pre class="line-numbers language-none"><code class="language-none">sudo chmod -R 777 &#x2F;code&#x2F;Goland<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中<br>-R 是指级联应用到目录里的所有子目录和文件<br>777 是所有用户都拥有最高权限<br>/code/Goland 是需要放行的文件夹</p><h3 id="创建文件">创建文件</h3><ol><li><h4 id="命令格式-2">命令格式</h4><pre class="line-numbers language-none"><code class="language-none">touch 文件名字.后缀<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><h4 id="命令参数-2">命令参数</h4><ol><li><code>-a</code>  或–time=atime或–time=access或–time=use 只更改存取时间。</li><li><code>-c</code>  或–no-create 不建立任何文档。</li><li><code>-d</code> 使用指定的日期时间，而非现在的时间。</li><li><code>-f</code> 此参数将忽略不予处理，仅负责解决BSD版本touch指令的兼容性问题。</li><li><code>-m</code>  或–time=mtime或–time=modify 只更改变动时间。</li><li><code>-r</code> 把指定文档或目录的日期时间，统统设成和参考文档或目录的日期时间相同。</li><li><code>-t</code> 使用指定的日期时间，而非现在的时间。</li></ol></li></ol><h3 id="删除文件和目录">删除文件和目录</h3><h4 id="rm命令"><code>rm</code>命令</h4><p><code>rm</code>是常用的命令，该命令的功能为删除一个目录中的一个或多个文件或目录，它也可以将某个目录及其下的所有文件及子目录均删除。对于链接文件，只是删除了链接，原有文件均保持不变。</p><h4 id="命令格式-3">命令格式</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">rm [选项] 文件… <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="命令参数-3">命令参数</h4><p><code>-f</code>, --force  忽略不存在的文件，从不给出提示。</p><p><code>-i</code>, --interactive 进行交互式删除</p><p><code>-r</code>, -R, --recursive  指示<code>rm</code>将参数中列出的全部目录和子目录均递归地删除。</p><h4 id="实例">实例</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">rm test.txt # 删除文件，系统会询问rm -f test.txt # 强制删除，不询问rm test&#x2F;    # 删除目录，系统会询问rm -f test&#x2F; # 删除目录，不询问rm -rf test&#x2F; # 递归删除目录及下面文件，不询问rm -rf test* # 删除以test开头的文件，不询问rm -rf *.txt *.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Linux移动文件和目录">Linux移动文件和目录</h3><h4 id="移动文件和目录mv">移动文件和目录<code>mv</code></h4><p><code>mv</code>命令是 move 的缩写，可以用来移动文件或者将文件<strong>改名</strong>（move (rename) files），是 Linux 系统下常用的命令，经常用来<strong>备份</strong>文件或者目录。</p><h4 id="命令格式-4">命令格式</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mv [选项] 源文件或目录 目标文件或目录<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="命令参数-4">命令参数</h4><p><code>-b</code> ：若需覆盖文件，则覆盖前先行备份。</p><p><code>-f</code> ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</p><p><code>-i</code> ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！</p><p><code>-u</code> ：若目标文件已经存在，且 source 比较新，才会更新(update)</p><p><code>-t</code>  ： 即指定<code>mv</code>的目标目录，该选项适用于移动多个源文件到一个目录的情况，此时目标目录在前，源文件在后。</p><h4 id="实例-2">实例</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">mv test1.txt test2.txt # 重命名mv test1.txt test2.txt test      # 移动文件mv -t test test1.txt test2.txt   # 移动文件mv test* test                    # 使用通配符mv -i test1.txt test2.txt        # 将文件file1改名为file2，如果file2已经存在，则询问是否覆盖mv -f test1.txt test2.txt        # 将文件file1改名为file2，即使file2存在，也是直接覆盖掉。mv test1 test2                   # 移动目录mv * ..&#x2F;                         # 移动当前文件夹下的所有文件到上一级目录mv test3&#x2F;*.txt test5             # 把当前目录的一个子目录里的文件移动到另一个子目录里<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="拷贝文件和目录">拷贝文件和目录</h3><h4 id="cp命令拷贝文件和目录"><code>cp</code>命令拷贝文件和目录</h4><p><code>cp</code>命令用来复制文件或者目录，是 Linux 系统中最常用的命令之一</p><h4 id="命令格式-5">命令格式</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp [选项]... [-T] 源 目的或：cp [选项]... 源... 目录或：cp [选项]... -t 目录 源...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="命令参数-5">命令参数</h4><table><thead><tr><th>参数</th><th>长参数</th><th>描叙</th></tr></thead><tbody><tr><td>-a</td><td></td><td>等同于-dR</td></tr><tr><td>-b</td><td></td><td>若删除或者覆盖目标文件，将对目标文件进行备份，备份文件以备份的字符串结尾 .bak</td></tr><tr><td>-d</td><td></td><td>复制符号链接</td></tr><tr><td>-f</td><td></td><td>强制复制</td></tr><tr><td>-h</td><td></td><td>强制cp命令复制符号链接。缺省值是跟随符号链接，也就是将文件复制到符号链接指向处。</td></tr><tr><td>-i</td><td></td><td>交互式模式。覆盖目标文件之前先要进行询问</td></tr><tr><td>-l</td><td></td><td>建立硬链接，而非复制</td></tr><tr><td>-p</td><td></td><td>源目录或者文件的属性保留(修改日期、时间和访问控制列表等)</td></tr><tr><td>-P</td><td></td><td>源目录或者文件的路劲保留</td></tr><tr><td>-r/R</td><td></td><td>处理指定目录以及子目录</td></tr></tbody></table><h4 id="实例-3">实例</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cp t1.txt test # 复制单个文件到目标目录，目标文件存在时，会询问是否覆盖cp -r test1 test2 # 复制目录需要加-r参数cp -rf test1&#x2F;* test2 # 强制递归复制test1下面的所有内容到test2，不提示cp * ..&#x2F;   # 复制当前目录下面的文件到父母录cp -rf * ..&#x2F; # 复制文件和目录到父目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Linux显示合并文件">Linux显示合并文件</h3><h4 id="cat命令"><code>cat</code>命令</h4><p>cat命令的用途是连接文件或标准输入并打印。这个命令常用来显示文件内容，或者将几个文件连接起来显示，或者从标准输入读取内容并显示，它常与重定向符号配合使用。</p><h4 id="命令格式-6">命令格式</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cat [选项] [文件]...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="三大功能">三大功能</h4><ol><li>一次显示整个文件:<code>cat filename</code></li><li>从键盘创建一个文件:<code>cat &gt; filename</code> 只能创建新文件，不能编辑已有文件.</li><li>将几个文件合并为一个文件:<code>cat file1 file2 &gt; file</code></li></ol><h4 id="命令参数-6">命令参数</h4><p>-A,  --show-all     等价于 -vET</p><p>-b, --number-nonblank  对非空输出行编号</p><p>-e   等价于 -vE</p><p>-E, --show-ends    在每行结束处显示 $</p><p>-n,  --number   对输出的所有行编号,由1开始对所有输出的行数编号</p><p>-s, --squeeze-blank 有连续两行以上的空白行，就代换为一行的空白行</p><p>-t            与 -vT 等价</p><p>-T, --show-tabs     将跳格字符显示为 ^I</p><p>-u            (被忽略)</p><p>-v, --show-nonprinting  使用 ^ 和 M- 引用，除了 LFD 和 TAB 之外</p><h4 id="实例-4">实例</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"> cat test.txt  # 显示test.txt文件内容 cat test1.txt test2.txt # 同时显示这两个文件内容 cat &gt; t1.txt               # 从键盘输入内容到t1.txt ctrl+d 结束 cat &gt; test2.txt &lt;&lt; EOF     # 从键盘输入内容到t1.txt使用EOF作为文件结束 &gt; test1 &gt; test2 &gt; EOF cat &lt;&lt; EOF &gt; test2.txt      # 从键盘输入内容到t1.txt使用EOF作为文件结束（也可以放在前面） cat t1.txt t2.txt &gt; t3.txt  # 将t1 t2合并到t3 覆盖 cat t1.txt t2.txt &gt;&gt; t3.txt  # 将t1 t2合并到t3 追加不是覆盖 # 快速编辑一个文件cat &gt;&gt; hosts &lt;&lt; EOF192.168.18.128 node01192.168.18.138 node02192.168.18.148 node03EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10系统右键菜单空白不显示解决方法</title>
      <link href="/2022/06/05/win10-xi-tong-you-jian-cai-dan-kong-bai-bu-xian-shi-jie-jue-fang-fa/"/>
      <url>/2022/06/05/win10-xi-tong-you-jian-cai-dan-kong-bai-bu-xian-shi-jie-jue-fang-fa/</url>
      
        <content type="html"><![CDATA[<h1><strong>方法一：停止<code>Windows Management Instrumentation</code>服务</strong></h1><h2 id="1、win-r打开运行输入services-msc。打开服务管理器">1、<code>win+r</code>打开运行输入<code>services.msc</code>。打开服务管理器</h2><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206051734360.png" alt="image-20220415143924451"></p><h2 id="2、找到Windows-Management-Instrumentation服务，此服务与用户界面有关，停止该服务；">2、找到<code>Windows Management Instrumentation</code>服务，此服务与用户界面有关，停止该服务；</h2><p><img src="C:%5CUsers%5CAnubis%5CDesktop%5C%E7%B3%BB%E7%BB%9F%E9%97%AE%E9%A2%98%E5%A4%A7%E5%85%A8%5C%E5%9B%BE%E7%89%87%5Cimage-20220415144029425.png" alt="image-20220415144029425"></p><h2 id="3、然后定位至C-Windows-System32-wbem-Repository，删除该文件夹下的所有文件。重启系统后，看能否解决问题。">3、然后定位至<code>C:\Windows\System32\wbem\Repository</code>，删除该文件夹下的所有文件。重启系统后，看能否解决问题。</h2><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206051735167.png" alt="image-20220415144139327"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
          <category> Win10 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++ 快速输入</title>
      <link href="/2022/06/05/c-kuai-su-shu-ru/"/>
      <url>/2022/06/05/c-kuai-su-shu-ru/</url>
      
        <content type="html"><![CDATA[<h1>一、解除系统流绑定</h1><h2 id="使用方法">使用方法</h2><p>在<code>main</code>函数开头加入</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">std::ios::sync_with_stdio(false);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="原理">原理</h2><p><code>cin</code> 效率的效率在数据输入上远低于 <code>scanf</code>，这不是<code>c++</code>比 <code>c</code> 低级，而是 <code>C++</code>  为了兼容<code>C</code> 而采取的保守措施。</p><p>标准 <code>C++</code> 流与标准 <code>C </code>流在每次输入/输出操作后同步，同步的 <code>C++</code> 流为无缓冲，而每次 <code>C++</code> 流上的 <code>I/O</code> 都立即应用到对应 <code>C</code> 流的缓冲区。这使得能<strong>自由地混合 <code>C++</code> 与 <code>C I/O</code></strong> 。</p><h2 id="注意事项">注意事项</h2><ul><li>解除绑定后不要混用 <code>cin</code> 与 <code>scanf</code></li></ul><h1>二、快速读入函数</h1><h2 id="原理-2">原理</h2><p><code>C++</code>输入输出中处理字符串的效率是处理数字的效率的不知多少倍(为什么现在还不知道，别问我，我知道了会改的)</p><h2 id="整型">整型</h2><pre class="line-numbers language-none"><code class="language-none">inline int read()&#x2F;&#x2F;inline 为内联关键字&#123;    int x&#x3D;0,w&#x3D;0;    char ch&#x3D;0;    while(!isdigit(ch)) w|&#x3D;ch&#x3D;&#x3D;&#39;-&#39;,ch&#x3D;getchar();    &#x2F;&#x2F;while(isdigit(ch)) x&#x3D;(x&lt;&lt;1)+(x&lt;&lt;3)+(ch^48),ch&#x3D;getchar();以前以为位运算能快点，但问了大佬才发现，其实没啥差别    while(isdigit(ch)) x&#x3D;x*10+ch-&#39;0&#39;,ch&#x3D;getchar();    return w?-x:x;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="浮点型">浮点型</h2><pre class="line-numbers language-none"><code class="language-none">inline double  read()&#123;    int w&#x3D;0,y&#x3D;0;    double x&#x3D;0,t&#x3D;0.1;    char ch&#x3D;0;    while(!isdigit(ch)) w|&#x3D;ch&#x3D;&#x3D;&#39;-&#39;,ch&#x3D;getchar();    while(isdigit(ch)) x&#x3D;x*10+(ch^48),ch&#x3D;getchar();    y|&#x3D;ch&#x3D;&#x3D;&#39;.&#39;;    if(y)    &#123;        ch&#x3D;getchar();        while(isdigit(ch)) x+&#x3D;(ch^48)*t,t*&#x3D;0.1,ch&#x3D;getchar();    &#125;    return w?-x:x;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maximum Sum of Minimum</title>
      <link href="/2022/06/05/maximum-sum-of-minimum-ti-jie/"/>
      <url>/2022/06/05/maximum-sum-of-minimum-ti-jie/</url>
      
        <content type="html"><![CDATA[<h1><a href="https://atcoder.jp/contests/m-solutions2019/tasks/m_solutions2019_d">题目链接</a></h1><h2 id="题意分析">题意分析</h2><ul><li><p>C 数组中存放点的权值（<strong>从小到大排序</strong>）</p></li><li><p>边的权值</p><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206051953320.png" alt=""></p><blockquote><p><code>C[i] C[j]</code>为 L 的两个端点值</p></blockquote></li></ul><p>易知<code>C[1]</code>相连的边，其权值均为<code> C[1]</code></p><p>由贪心策略易知，越权值小的点，其相连边权值越小，因此应<strong>尽量减少其相连边</strong>，理想情况为将其填入叶子节点中。</p><h2 id="样例分析">样例分析</h2><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206051658410.png" alt=""></p><p>如图所示，在 4 号节点填入 C[1] 后，3-4 这条边已经确定权值了**，我们可以将它删去**，则 3 号节点成为了<strong>一个新的叶子节点</strong></p><p>在 3 号节点填入 C[2] 后，3-2 这条边已经确定权值了，我们可以将它删去</p><p>在 5 号节点填入 C[3] 后，5-2 这条边已经确定权值了，我们可以将它删去</p><p>后续操作不进行赘述。</p><p>基于上述操作方法，我们做到每一个当前情况下的最小点，均填入当前情况下的叶子节点中，从而使边权值最大。</p><h2 id="结论">结论</h2><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206051954348.png" alt=""></p><p>即<strong>每个点（除了最大点）的值均为一条边的权值</strong>。</p><p>要满足这个情况只需要使：<strong>只要子节点的值小于父节点的值即可</strong></p><h2 id="代码实现">代码实现</h2><h3 id="BFS">BFS</h3><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206051726435.jpg" alt=""></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;采用按层填充#include&lt;bits&#x2F;stdc++.h&gt;using namespace std;const int maxn&#x3D;1e4+7;int C[maxn],N,Ans,ans[maxn];vector &lt;int&gt; T[maxn];void BFS(int root)&#123;    queue&lt;int&gt;Q;    int cnt&#x3D;N;    int l&#x3D;T[root].size();    for(int i&#x3D;0; i&lt;l; ++i)    &#123;        Q.push(T[root][i]);    &#125;    ans[root]&#x3D;C[cnt--];    while(!Q.empty())    &#123;        root&#x3D;Q.front();        Q.pop();        if(ans[root]) continue;        ans[root]&#x3D;C[cnt--];        l&#x3D;T[root].size();        for(int i&#x3D;0; i&lt;l; ++i)        &#123;            Q.push(T[root][i]);        &#125;    &#125;&#125;int main()&#123;    int a,b;    cin&gt;&gt;N;    for(int i&#x3D;1; i&lt;&#x3D;N-1; ++i)    &#123;        cin&gt;&gt;a&gt;&gt;b;        T[a].push_back(b);        T[b].push_back(a);    &#125;    for(int i&#x3D;1; i&lt;&#x3D;N; ++i)    &#123;        cin&gt;&gt;C[i];        Ans+&#x3D;C[i];    &#125;    sort(C+1,C+1+N);    Ans-&#x3D;C[N];&#x2F;&#x2F;最大值计算    BFS(1);    cout&lt;&lt;Ans&lt;&lt;endl;    for(int i&#x3D;1; i&lt;&#x3D;N; ++i)    &#123;        cout&lt;&lt;ans[i]&lt;&lt;&quot; &quot;;    &#125;    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="DFS">DFS</h3><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206051727532.jpg" alt=""></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;仿照后序遍历的方式进行节点填充#include&lt;bits&#x2F;stdc++.h&gt;using namespace std;const int maxn&#x3D;1e4+7;int C[maxn],N,Ans,ans[maxn],cnt,vis[maxn];vector &lt;int&gt; T[maxn];void DFS(int root)&#123;    vis[root]&#x3D;1;    for(int i&#x3D;0; i&lt;T[root].size(); ++i)    &#123;        int v&#x3D;T[root][i];        if(vis[v]) continue;        DFS(v);    &#125;    ans[root]&#x3D;C[++cnt];    Ans+&#x3D;ans[root];&#125;int main()&#123;    int a,b;    cin&gt;&gt;N;    for(int i&#x3D;1; i&lt;&#x3D;N-1; ++i)    &#123;        cin&gt;&gt;a&gt;&gt;b;        T[a].push_back(b);        T[b].push_back(a);    &#125;    for(int i&#x3D;1; i&lt;&#x3D;N; ++i)        cin&gt;&gt;C[i];    sort(C+1,C+1+N);    DFS(1);    cout&lt;&lt;Ans&lt;&lt;endl;    for(int i&#x3D;1; i&lt;&#x3D;N; ++i)    &#123;        cout&lt;&lt;ans[i]&lt;&lt;&quot; &quot;;    &#125;    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AtCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中文文案排版指南</title>
      <link href="/2022/06/05/zhong-wen-wen-an-pai-ban-zhi-nan/"/>
      <url>/2022/06/05/zhong-wen-wen-an-pai-ban-zhi-nan/</url>
      
        <content type="html"><![CDATA[<h2 id="空格规则">空格规则</h2><h3 id="中英文之间需要增加空格">中英文之间需要增加空格</h3><p>正确 ：学习 Markdown 是非常重要的</p><p>错误 ：学习 markdown是非常重要的 or 学习markdown是非常重要的</p><h3 id="中文与数字之间需要增加空格">中文与数字之间需要增加空格</h3><p>正确： 今天我花了 100 元</p><p>错误： 今天我花了100元</p><h3 id="数字与单位之间无需增加空格（PS：中文单位不符合此规则）">数字与单位之间无需增加空格（PS：中文单位不符合此规则）</h3><p>正确：汽车的速度是 10m/s</p><p>错误：汽车的速度是 10 m/s</p><h3 id="全角标点与其他字符之间不加空格">全角标点与其他字符之间不加空格</h3><h4 id="全角标点：需要手动切换，个人默认为半角">全角标点：需要手动切换，个人默认为半角</h4><p>正确：今天买了一把手机，真开心！</p><p>错误：今天买了一把手机　，真开心　！</p><h2 id="标点符号">标点符号</h2><h3 id="不重复使用标点符号">不重复使用标点符号</h3><p>即不出现！！！这种连续使用，当然！？！？这种也不可以</p><h3 id="使用全角中文标点（使用中文输入法）">使用全角中文标点（使用中文输入法）</h3><p>正确：今天真开心！</p><p>错误：今天真开心!</p><h3 id="数字使用半角字符">数字使用半角字符</h3><p>正确：这个 100  元。</p><p>错误：这个 １００ 元。</p><p>例外：在设计稿、宣传海报中如出现极少量数字的情形时，为方便文字对齐，是可以使用全角数字的。（这句copy的）</p><h3 id="遇到完整的英文整句、特殊名词，其內容使用半角标点">遇到完整的英文整句、特殊名词，其內容使用半角标点</h3><p>正确：乔布斯那句话是怎么说的？「Stay hungry, stay foolish.」</p><p>错误：乔布斯那句话是怎么说的？「Stay hungry，stay foolish．」</p><h2 id="名词">名词</h2><h3 id="专有名词使用正确的大小写">专有名词使用正确的大小写</h3><p>正确：使用 GitHub 登录</p><p>错误：使用 github 登录</p><h3 id="不要使用不地道的缩写">不要使用不地道的缩写</h3><p>正确：你是会 JavaScript 吗？</p><p>错误：你是会 JS 吗？</p><h3 id="链接之间增加空格">链接之间增加空格</h3><h3 id="简体中文使用直角引号">简体中文使用直角引号</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 未分类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 安装笔记</title>
      <link href="/2022/06/04/ubuntu-an-zhuang-bi-ji/"/>
      <url>/2022/06/04/ubuntu-an-zhuang-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="SSH-远程链接">SSH 远程链接</h2><ol><li><p>安装软件 Xshell</p></li><li><p>服务器上重置密码</p></li><li><p>在防火墙上添加白名单</p><img src="C:\Users\Anubis\AppData\Roaming\Typora\typora-user-images\image-20220428171853388.png" alt="image-20220428171853388" style="zoom:200%;" /></li><li><p>在主机的位置填入服务器公网 ip</p><p><img src="C:%5CUsers%5CAnubis%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220428172446474.png" alt="image-20220428172446474"></p></li><li><p><img src="C:%5CUsers%5CAnubis%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220428172144825.png" alt="image-20220428172144825"></p></li></ol><h2 id="换源加速-Centos">换源加速 (Centos)</h2><pre class="line-numbers language-none"><code class="language-none"># 对于 CentOS 7sudo sed -e &#39;s|^mirrorlist&#x3D;|#mirrorlist&#x3D;|g&#39; \         -e &#39;s|^#baseurl&#x3D;http:&#x2F;&#x2F;mirror.centos.org|baseurl&#x3D;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn|g&#39; \         -i.bak \         &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-*.repo         sudo yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="换源加速-Ubuntu">换源加速 (Ubuntu)</h2><ol><li><p>对系统给的镜像源进行备份，以防出问题</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo cp &#x2F;etc&#x2F;apt&#x2F;sources.list &#x2F;etc&#x2F;apt&#x2F;sources.list.backup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除镜像源文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo rm &#x2F;etc&#x2F;apt&#x2F;sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>重新建立镜像源文件并编辑</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo nano &#x2F;etc&#x2F;apt&#x2F;sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>复制某种镜像源到 sources.list 中，按 ctrl+o 保存，按 ctrl+x退出，现在会自动保存</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu</a></p></li><li><p>执行系统更新命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt-get update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>更新所有软件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="取得-root-权限">取得 root 权限</h2><pre class="line-numbers language-none"><code class="language-none">sudo -i<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="yum-工具安装">yum 工具安装</h2><p>1、首先检测是否安装了 build-essential 程序包</p><pre class="line-numbers language-none"><code class="language-none">apt-get install build-essential<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、安装 yum</p><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install yum<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Ps:Ubuntu20 之后不支持安装 yum</p><h2 id="安装中文字体及设置"><strong>安装中文字体及设置</strong></h2><ol><li><p>先安装中文语言包</p><pre class="line-numbers language-none"><code class="language-none">sudo apt install language-pack-zh-hans -ysudo apt install fonts-wqy-zenhei -ysudo nano .profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>然后在文末输入</p><pre class="line-numbers language-none"><code class="language-none">export LANG&#x3D;&quot;zh_CN.UTF-8&quot;export LC_ALL&#x3D;&quot;zh_CN.UTF-8&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>保存后执行</p><pre class="line-numbers language-none"><code class="language-none">sudo dpkg-reconfigure locales<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="C:%5CUsers%5CAnubis%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220428181208512.png" alt="image-20220428181208512"></p><p><img src="C:%5CUsers%5CAnubis%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220428181228341.png" alt="image-20220428181228341"></p></li><li><p>安装完成后重启系统就好了。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速幂</title>
      <link href="/2022/06/04/kuai-su-mi/"/>
      <url>/2022/06/04/kuai-su-mi/</url>
      
        <content type="html"><![CDATA[<h1>快速幂</h1><h2 id="原理-3">原理</h2><p>一个数 k 均可以转换为二进制</p><p>如<code>10 (10)= 1010 (2)</code></p><p>即<code>10 = 2 + 8=2^1+2^3</code></p><p>经一般化处理可看出对于整数 a , b</p><p>有 <code>a^b=a^x[0]+a^x[1]+a^[2]+··· </code></p><p>如此可以大量减少乘法操作</p><h2 id="代码实现-2">代码实现</h2><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">long long pow(long long a,long long b,long long p)&#x2F;&#x2F;a^b (mod p)&#123;long long ans&#x3D;1;a%&#x3D;p;&#x2F;&#x2F;如果 a 大于 p，则必须进行取模for(; b; b&gt;&gt;&#x3D;1)&#123;if(b&amp;1&#x3D;&#x3D;1)&#x2F;&#x2F;此位为1         ans*&#x3D;(A%p);A&#x3D;(A*A)%p;&#125;return ans;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>注册表清理</title>
      <link href="/2022/06/04/zhu-ce-biao-qing-li/"/>
      <url>/2022/06/04/zhu-ce-biao-qing-li/</url>
      
        <content type="html"><![CDATA[<p>伴随着系统运行时间不断增长，我们的电脑 注册表  中累积了许多垃圾文件。这些垃圾文件都是我们平常安装与卸载程序所留下的无用注册表信息，时间一长，垃圾文件与信息越来越多，我们电脑的运行速度越来越慢。</p><p>​而且部分软件由于删除方式不对，导致一些残留注册表未被删除，会出现明明删除了，但是软件列表中仍然存在这个软件的现象。</p><h2 id="解决方法">解决方法</h2><h3 id="1-个人手动清除注册表（极其不推荐）">1.个人手动清除注册表（极其不推荐）</h3><ol><li>​<code>win+R</code> 输入 <code>regedit</code></li><li>选择 <code>HKEY_CURRENT_USER\SOFTWARE</code></li><li>里面的就是你软件的注册表了</li></ol><hr><p>注册表是 Windows 系统的重要数据库，其中存放着重要的系统与程序配置、文件传输信息，因此随意改动注册表容易导致严重的错误，说不定你电脑就崩了呢，所以不推荐手动清理注册表。</p><h3 id="2-使用软件清理（推荐）">2. 使用软件清理（推荐）</h3><ol><li><a href="https://www.iobit.com/en/advanceduninstaller.php?utm_source=enmedia&amp;utm_campaign=engetproductkeyiu">IObit Uninstaller</a></li><li>360安全卫士（软件确实变味了，但是注册表清理的功能还是比较好用的）</li></ol>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图床</title>
      <link href="/2022/06/04/tu-chuang/"/>
      <url>/2022/06/04/tu-chuang/</url>
      
        <content type="html"><![CDATA[<h1>一、什么是图床</h1><p>图床其实是互联网中存储图片的空间，作为一个人的云端图片链接</p><h1>二、为什么要图床</h1><p>​大部分人写博客都用<code>markdown</code>，而<code>markdown</code>的图片是通过链接的方式进行传输的的，因此，如果是在本电脑上直接嵌入的文件没办法在网络上访问（除非你把电脑长时间开机并且开放~极其危险）。</p><p>​因此一个云图片链接就很有必要了，而网上直接找到的链接不具有可靠性，可能哪天就挂了（自己搭图床也不知道什么时候挂），因此搭建自己的图床还是很有必要的。</p><h1>三、怎么搭建图床</h1><p>​大家可以使用一些免费（必须）的图床</p><p>​这里选择的是通过<code>GitHub</code>来搭建个人图床（珍惜<code>GitHub</code>吧，它已经被开发了很多奇怪的用法）</p><h2 id="1-准备工作">1. 准备工作</h2><blockquote><p>一个 Github 账号</p></blockquote><h2 id="2-搭建工作">2. 搭建工作</h2><ol><li><p>登录你的 Github 之后，创建一个新的仓库</p><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041529014.png" alt="img"></p></li><li><p>填写仓库先关资料，一般只需要选一个合适的仓库名，然后确保仓库为 <code>public</code> 其他的保持默认就好；</p><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041530184.jpeg" alt="img"></p></li><li><p>一般创建成功之后，会出现如下界面，至此，我们的图床算是创建好了，接下来就是如何上传图片了；</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041530476.jpeg" alt="preview"></p><h2 id="3-上传图片">3.上传图片</h2><p>通过上面的步骤，我们的图床时搭建好了，但是通过传统的方法向 Github 上传图片太麻烦了，这里我们推荐使用一个开源图床工具 <a href="https://link.zhihu.com/?target=https%3A//molunerfinn.com/PicGo/">PicGo</a> （windows 系统下载<code>.exe</code>）来作为我们的图片上传工具；</p><p>安装完成后，主界面如下：</p><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041531333.jpeg" alt="preview"></p><ol><li><h3 id="GitHub-生成令牌">GitHub 生成令牌</h3><ul><li>跳转网址</li></ul><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;github.com&#x2F;settings&#x2F;tokens<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>生成令牌</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041534520.png" alt="img"></p><p>勾选信息并生成令牌</p><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041535126.jpeg" alt="img"></p><p><code>token</code> 生成，注意它只会显示一次，所以你最好把它复制下来到你的备忘录存好，方便下次使用，否则下次有需要重新新建；</p><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041536806.jpeg" alt="img"></p></li><li><p>配置 <code>PicGo</code></p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041538365.png" alt="屏幕截图 2022-06-04 153819"></p><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041539297.jpeg" alt="img"></p><ul><li>自定义域名（cdn）加速，在自定义域名处填写</li></ul><blockquote><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;用户名&#x2F;仓库名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><h2 id="4-常见问题">4.常见问题</h2><h4 id="未完待续">未完待续</h4>]]></content>
      
      
      
        <tags>
            
            <tag> 经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 个人博客搭建及美化</title>
      <link href="/2022/06/04/hexo-ge-ren-bo-ke-da-jian-ji-mei-hua/"/>
      <url>/2022/06/04/hexo-ge-ren-bo-ke-da-jian-ji-mei-hua/</url>
      
        <content type="html"><![CDATA[<p>bo</p><h1>博客美化</h1><h2 id="浏览器网页标题">浏览器网页标题</h2><p>效果图</p><p>1.<img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206052016430.png" alt="image-20220605201606380"></p><p>2.<img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206052016161.png" alt="image-20220605201624139"></p><p>1.在<code>\themes\material-x\source\js</code>下新建一个 <code>FunnyTitle.js</code> 文件，填写如下代码：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 浏览器搞笑标题</span><span class="token keyword">var</span> OriginTitle <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">;</span><span class="token keyword">var</span> titleTime<span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'visibilitychange'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>hidden<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'[rel="icon"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">,</span> <span class="token string">"/funny.ico"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'╭(°A°`)╮ 页面崩溃啦 ~'</span><span class="token punctuation">;</span>        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>titleTime<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'[rel="icon"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">,</span> <span class="token string">"/favicon.ico"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'(ฅ>ω&lt;*ฅ) 噫又好啦 ~'</span> <span class="token operator">+</span> OriginTitle<span class="token punctuation">;</span>        titleTime <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitle<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.在 <code>\themes\material-x\layout\layout.ejs </code>文件中添加如下代码：<img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206052019425.png" alt="image-20220605201948384"></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--浏览器搞笑标题--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/FunnyTitle.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1>插件安装</h1><h2 id="博客首页搜索功能">博客首页搜索功能</h2><h3 id="1-安装插件">1.安装插件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm install hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-在Hexo根目录下的-config-yml-文件中，新增以下的配置项：">2.在<code>Hexo</code>根目录下的 <code>_config.yml </code>文件中，新增以下的配置项：</h3><pre class="line-numbers language-none"><code class="language-none">search:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客功能添加及优化</title>
      <link href="/2022/06/04/bo-ke-gong-neng-tian-jia-ji-you-hua/"/>
      <url>/2022/06/04/bo-ke-gong-neng-tian-jia-ji-you-hua/</url>
      
        <content type="html"><![CDATA[<h1>功能添加</h1><h2 id="1-配置音乐播放器">1.配置音乐播放器</h2><p>要支持音乐播放，在<strong>主题</strong>的 <code>_config.yml</code> 配置文件中激活 music 配置即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"># 是否在首页显示音乐music:  enable: true  title:         # 非吸底模式有效    enable: true    show: 听听音乐  server: netease   # require music platform: netease, tencent, kugou, xiami, baidu  type: playlist    # require song, playlist, album, search, artist  id: 503838841     # require song id &#x2F; playlist id &#x2F; album id &#x2F; search keyword  fixed: false      # 开启吸底模式  autoplay: false   # 是否自动播放  theme: &#39;#42b983&#39;  loop: &#39;all&#39;       # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;  order: &#39;random&#39;   # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;  preload: &#39;auto&#39;   # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: true  # 列表默认折叠<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，<code>playlist</code>的<code>id</code></p><p>即为这串数字。</p></blockquote><h2 id="2-添加博客首页搜索功能">2. 添加博客首页搜索功能</h2><h3 id="2-1-安装插件">2.1. 安装插件</h3><pre class="line-numbers language-bashb" data-language="bashb"><code class="language-bashb">npm install hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-2-在-Hexo-根目录下的-config-yml-文件中，新增以下的配置项：">2.2 在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</h3><pre class="line-numbers language-none"><code class="language-none"># Search of Indexsearch:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-中文链接转拼音（建议安装）">3.中文链接转拼音（建议安装）</h2><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"># 中文链接转拼音permalink_pinyin:  enable: true  separator: &#39;-&#39; # default: &#39;-&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><hr><h1>博客优化</h1><h2 id="使用-gulp-压缩博客静态资源">使用 gulp 压缩博客静态资源</h2><h3 id="gulp-介绍">gulp 介绍</h3><p><a href="https://www.gulpjs.com.cn/">gulp</a> 能够帮助用户自动压缩静态资源，配合各类下属插件，能够压缩包括<code>css</code>、<code>js</code>、<code>html</code>乃至各类格式的图片文件。</p><h3 id="安装教程">安装教程</h3><p>在这使用<a href="https://npm.taobao.org/">taobao cnpm</a>加快安装速度</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npmmirror.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li><p>全局安装 gulp 指令集</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm install --global gulp-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><p>此后均在<strong>博客根目录</strong>下操作</p></li><li><p>安装 gulp 插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm install gulp --save <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>安装各个下属插件以实现对各类静态资源的压缩</p><ul><li>压缩 HTML：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm install gulp-htmlclean --save-devcnpm install gulp-html-minifier-terser --save-dev# 用gulp-html-minifier-terser可以压缩HTML中的ES6语法<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p>压缩 CSS：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm install gulp-clean-css --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>压缩 JS</p><p><a href="https://github.com/duan602728596/gulp-terser">gulp-terser</a> 只会直接压缩 js 代码，所以不存在因为语法变动导致的错误 。事实上，当我们使用 <code>jsdelivr</code> 的 <code>CDN</code> 服务时，只需要在 <code>css </code>或者 <code>js</code> 的后缀前添加 <code>.min</code> ,例如 <code>example.js-&gt;example.min.js</code> ,<code>JsDelivr</code> 就会自动使用 <code>terser</code> 帮我们压缩好代码。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm install gulp-terser --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>压缩字体包</p><p>font-min 可以遍历博客内用到的字符，并将字体包内这些字符的字体样式提取出来输出为新的字体包。</p><blockquote><p>font-min 仅支持压缩 ttf 格式的字体包</p></blockquote><p>[^字体包]:  字体文件作为最让人又爱又恨的静态资源，为了保证站点文字匹配，全字库字体包往往超过 15 MB，这对博客的加载速度造成了巨大压力。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm install gulp-fontmin --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>为Gulp创建 <code>gulpfile.js</code> 任务脚本。在博客根目录下新建 <code>gulpfile.js</code> ,打开<code>[Blogroot]\gulpfile.js</code>,输入以下内容：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//用到的各个插件</span><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> cleanCSS <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-clean-css'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-html-minifier-terser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlclean'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> fontmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-fontmin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// gulp-tester</span><span class="token keyword">var</span> terser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-terser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩 js</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'compress'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>  gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/*.js'</span><span class="token punctuation">,</span> <span class="token string">'!./public/**/*.min.js'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">terser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//压缩 css</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/*.css'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleanCSS</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">compatibility</span><span class="token operator">:</span> <span class="token string">'ie11'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//压缩 html</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-html'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">removeComments</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//清除html注释</span>            <span class="token literal-property property">collapseWhitespace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩html</span>            <span class="token literal-property property">collapseBooleanAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token comment">//省略布尔属性的值，例如：&lt;input checked="true"/> ==> &lt;input /></span>            <span class="token literal-property property">removeEmptyAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token comment">//删除所有空格作属性值，例如：&lt;input id="" /> ==> &lt;input /></span>            <span class="token literal-property property">removeScriptTypeAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token comment">//删除&lt;script>的type="text/javascript"</span>            <span class="token literal-property property">removeStyleLinkTypeAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token comment">//删除&lt;style>和&lt;link>的 type="text/css"</span>            <span class="token literal-property property">minifyJS</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩页面 JS</span>            <span class="token literal-property property">minifyCSS</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩页面 CSS</span>            <span class="token literal-property property">minifyURLs</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token comment">//压缩页面URL</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//压缩字体</span><span class="token keyword">function</span> <span class="token function">minifyFont</span><span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/fonts/*.ttf'</span><span class="token punctuation">)</span> <span class="token comment">//原字体所在目录</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">fontmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">text</span><span class="token operator">:</span> text    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/fontsdest/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//压缩后的输出目录</span>    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'end'</span><span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'mini-font'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> buffers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//HTML文件所在目录请根据自身情况修改</span>    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      buffers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>contents<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'end'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> text <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>buffers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">minifyFont</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//gulp 4.0 以上版本可用</span><span class="token comment">// 运行 gulp 命令时依次执行以下任务</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span>  <span class="token string">'compress'</span><span class="token punctuation">,</span> <span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token string">'minify-html'</span><span class="token punctuation">,</span><span class="token string">'mini-font'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至此 gulp 的安装与配置便结束了</p></li><li><p>在每次运行完 <code>hexo generate</code> 生成静态页面后，运行 <code>gulp</code> 对其进行压缩。指令流程如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cleanhexo ggulphexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h1>参考资料</h1><ul><li>本文优化部分参考自：<a href="https://akilar.top/posts/49b73b87/">使用gulp压缩博客静态资源</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国剩余定理</title>
      <link href="/2022/06/04/zhong-guo-sheng-yu-ding-li/"/>
      <url>/2022/06/04/zhong-guo-sheng-yu-ding-li/</url>
      
        <content type="html"><![CDATA[<h1>证明</h1><p><img src="https://cdn.jsdelivr.net/gh/zouxingyuks/images/202206041914847.jpg" alt="中国剩余定理证明"></p><h1>代码</h1><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int ExGcd(int a,int b,int &amp;x,int &amp;y)&#123;if(b&#x3D;&#x3D;0)&#123;x&#x3D;1,y&#x3D;0;return a;&#125;int ans&#x3D;ExGcd(b,a%b,x,y);int t&#x3D;y;y&#x3D;x-(a&#x2F;b)*y;x&#x3D;t;return ans;&#125;int inv(int a,int p)&#x2F;&#x2F;无解返回 -1 &#123;int x,y;if(ExGcd(a,p,x,y)!&#x3D;1) return -1;return (x%p+p)%p;&#x2F;&#x2F;正数化 &#125;int CRT(int a[],int m[],int n)&#123;int N&#x3D;1,x&#x3D;0;for(int i&#x3D;1;i&lt;&#x3D;n;++i) N*&#x3D;m[i];for(int i&#x3D;1;i&lt;&#x3D;n;++i)&#123;int r&#x3D;N&#x2F;m[i];x+&#x3D;(r * inv( r , m[i] ) * a[i])%N;&#125;return x%N;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1></h1>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm-错误码及其解决方法</title>
      <link href="/2022/06/04/npm-cuo-wu-ma-ji-qi-jie-jue-fang-fa/"/>
      <url>/2022/06/04/npm-cuo-wu-ma-ji-qi-jie-jue-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="128">128</h2><p>执行如下命令：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">git config <span class="token operator">--</span>global http<span class="token punctuation">.</span>sslverify <span class="token string">"false"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再执行</p><pre class="line-numbers language-none"><code class="language-none">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就可以了</p><p>如果上述命令执行完后，还是报那个错误，请继续执行如下命令，亲测有效</p><pre class="line-numbers language-none"><code class="language-none">git config --global url.&quot;https:&#x2F;&#x2F;&quot;.insteadOf git:&#x2F;&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
